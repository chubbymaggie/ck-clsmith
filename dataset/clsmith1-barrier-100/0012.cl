// ---fake_divergence ---inter_thread_comm -g 57,15,9 -l 19,1,9
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][171] = {
{147,122,17,127,83,61,39,155,32,120,56,79,66,151,116,145,22,107,68,41,115,96,140,62,94,29,161,81,98,166,3,10,159,82,146,136,138,148,142,152,14,143,27,121,144,76,38,2,11,89,169,149,99,93,165,51,64,75,101,119,102,162,84,118,20,34,5,47,164,52,110,21,6,135,42,70,168,28,160,114,103,105,97,40,63,117,78,77,88,46,124,31,44,54,53,80,30,36,130,128,153,157,129,71,123,15,139,150,72,1,156,133,67,55,26,137,95,18,25,125,16,35,111,9,0,134,59,167,65,87,74,60,85,90,19,33,141,104,7,113,163,43,23,170,100,8,37,108,112,106,24,50,91,158,109,73,126,132,131,58,4,48,154,69,45,57,13,92,12,86,49}, // permutation 0
{115,64,164,44,83,9,2,113,140,1,58,129,6,23,94,11,65,159,120,82,34,90,74,22,103,96,108,99,117,18,133,79,66,15,88,10,169,125,151,3,124,130,105,68,107,35,17,81,165,126,46,148,5,56,84,43,55,13,147,92,93,40,104,42,72,80,14,109,168,161,78,26,128,54,76,69,143,158,127,87,50,67,77,37,19,142,62,121,139,25,41,102,61,131,110,51,33,85,153,75,170,106,152,57,39,52,16,95,111,98,162,32,24,144,137,31,0,97,36,91,12,27,101,136,149,156,71,114,116,123,138,118,86,89,163,45,155,20,21,7,59,49,154,122,157,146,160,100,135,28,60,48,150,134,8,112,53,38,166,63,47,132,167,30,73,4,29,119,141,70,145}, // permutation 1
{6,91,11,113,127,102,2,25,139,59,20,12,79,62,57,96,39,140,141,106,105,44,101,0,73,78,159,147,4,164,161,1,145,72,34,136,68,130,33,36,43,47,100,60,170,10,45,32,129,54,24,28,131,77,81,90,29,155,120,98,154,166,14,82,125,64,23,9,7,58,50,93,110,66,128,151,17,69,30,41,48,56,112,107,71,85,87,55,84,153,149,5,132,75,37,114,152,21,123,169,99,160,19,16,163,119,63,162,148,8,150,15,168,51,49,46,92,143,157,13,53,146,158,126,38,31,122,26,35,95,18,67,61,94,52,103,65,117,76,108,88,104,142,70,27,121,134,165,133,118,109,42,135,115,74,138,83,80,3,86,137,156,89,111,40,144,97,124,167,22,116}, // permutation 2
{78,31,118,11,33,85,69,153,154,80,24,38,47,89,77,149,54,37,45,58,107,165,42,4,83,168,132,59,158,82,46,123,5,26,93,157,140,166,116,41,8,51,141,23,128,2,55,19,122,57,162,95,35,99,88,17,74,159,30,84,53,67,108,102,139,87,125,143,124,64,138,66,101,65,10,97,79,44,49,169,152,72,136,110,148,36,121,130,25,129,75,0,56,134,52,91,90,15,29,76,117,131,113,6,112,104,164,142,146,34,126,27,156,3,111,16,62,61,151,94,98,92,68,63,73,60,7,39,127,105,155,13,147,21,20,114,133,120,170,106,115,150,109,22,145,18,161,40,96,81,160,43,9,32,50,137,103,14,135,167,12,119,70,163,144,86,48,28,1,100,71}, // permutation 3
{97,65,33,30,140,9,88,25,46,135,19,48,160,108,2,129,126,86,61,76,87,138,146,37,63,8,0,49,82,40,91,154,60,59,13,141,18,96,41,55,71,3,98,35,78,103,99,4,44,77,74,152,128,142,69,31,67,106,102,170,132,137,85,10,120,157,121,114,107,111,11,79,38,169,159,84,119,149,161,1,110,62,24,116,7,100,66,34,115,134,16,12,167,95,20,50,92,56,104,89,105,23,21,155,51,28,70,80,14,42,75,73,6,166,147,153,26,64,145,32,144,117,150,52,58,148,162,131,113,94,143,136,133,125,163,29,109,158,83,54,164,68,15,156,90,130,27,122,57,124,45,123,127,151,165,168,93,72,5,139,101,47,81,36,112,39,53,22,43,17,118}, // permutation 4
{17,104,41,93,28,65,91,112,26,27,49,160,140,165,1,121,157,122,54,105,14,119,129,22,141,20,46,21,153,12,148,103,96,11,108,109,123,87,161,106,57,45,154,152,8,84,19,15,133,151,146,118,101,13,30,10,117,166,125,71,56,42,120,70,126,147,97,72,82,76,107,110,59,67,62,58,88,36,43,163,64,85,115,139,53,168,135,89,16,66,35,94,78,60,68,47,149,169,24,92,83,39,52,144,100,75,128,170,40,55,111,32,116,77,38,132,29,7,130,80,33,131,9,150,95,137,25,79,167,69,114,134,34,74,159,156,48,145,138,51,113,5,4,63,18,143,155,37,164,142,44,23,124,31,86,73,3,2,136,127,99,98,61,102,0,6,81,90,50,158,162}, // permutation 5
{5,43,8,116,89,4,139,47,122,137,106,75,98,83,32,49,20,164,95,13,159,96,80,149,9,100,44,14,134,37,97,78,2,93,165,124,85,101,46,127,167,52,74,63,67,102,119,51,50,72,163,27,18,86,142,146,117,138,110,69,15,29,0,56,24,157,151,133,19,113,41,76,3,7,105,54,129,94,77,31,136,154,115,88,30,23,6,79,35,91,53,121,61,144,168,150,120,126,156,123,57,130,70,68,48,1,64,160,42,60,65,38,71,148,45,40,73,161,112,82,58,55,99,147,131,28,145,118,66,158,125,104,152,26,107,132,21,109,166,108,39,59,36,92,169,10,155,17,153,111,135,16,62,84,141,11,33,81,12,128,140,103,170,114,162,143,90,25,87,34,22}, // permutation 6
{77,68,65,161,126,106,3,54,117,30,34,24,45,19,13,6,140,71,35,113,146,79,122,81,28,76,61,149,135,44,132,42,37,103,59,14,11,51,33,36,80,107,49,43,116,102,63,64,75,38,4,104,139,166,84,125,26,120,145,121,165,111,46,60,32,148,67,131,151,8,74,142,90,88,163,70,31,15,16,62,110,160,154,97,169,164,109,98,27,159,41,134,114,99,29,95,143,152,150,53,85,83,21,48,40,87,92,138,55,89,73,91,0,129,123,5,66,2,69,153,39,96,10,168,119,100,86,7,118,52,94,93,144,1,137,115,17,127,50,20,72,167,18,112,12,108,141,101,58,105,57,56,124,136,78,128,9,23,147,133,158,130,47,157,162,82,25,156,22,170,155}, // permutation 7
{115,158,118,163,82,159,170,67,2,117,63,144,99,122,83,124,44,123,148,48,165,14,31,71,24,154,166,21,113,160,12,157,138,4,9,19,29,106,25,80,102,57,120,116,33,66,145,5,167,1,15,149,147,110,43,91,141,94,164,97,151,49,146,150,109,22,37,131,73,18,103,161,125,140,77,105,56,134,100,88,87,78,90,85,64,95,26,3,34,79,16,108,60,135,111,58,0,137,61,27,20,169,39,30,76,35,92,17,51,41,104,28,52,126,46,65,114,32,81,155,119,89,127,13,40,93,38,133,47,129,142,7,112,54,121,42,45,84,36,139,74,69,50,8,168,153,156,98,72,70,130,68,6,62,75,128,136,143,162,53,152,55,23,132,96,10,107,101,11,59,86}, // permutation 8
{43,150,169,9,142,88,4,30,101,152,167,163,120,114,21,68,3,33,124,22,7,65,42,56,47,16,129,127,138,80,106,52,89,73,94,62,76,24,85,108,28,17,54,148,29,141,123,61,71,67,134,70,49,12,91,126,6,36,157,96,53,60,58,19,81,155,25,78,79,144,31,44,15,32,1,64,0,14,69,146,41,99,51,26,151,139,50,147,158,103,121,109,8,131,48,82,5,110,97,125,102,57,118,145,105,113,59,34,10,86,132,111,93,63,162,153,35,156,84,107,160,117,74,119,170,2,140,13,38,39,137,135,149,136,46,130,166,128,77,95,20,133,159,98,75,115,100,55,23,40,161,66,104,154,168,143,92,164,72,165,112,116,11,45,90,18,83,87,122,37,27} // permutation 9
};

// Seed: 12

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
    int32_t g_3;
    volatile uint16_t g_14;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
int16_t  func_1(struct S0 * p_17);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_17->g_14 p_17->g_3
 * writes: p_17->g_14
 */
int16_t  func_1(struct S0 * p_17)
{ /* block id: 4 */
    int32_t *l_2 = &p_17->g_3;
    int32_t *l_4 = (void*)0;
    int32_t *l_5 = &p_17->g_3;
    int32_t *l_6 = &p_17->g_3;
    int32_t *l_7 = (void*)0;
    int32_t *l_8 = &p_17->g_3;
    int32_t *l_9 = &p_17->g_3;
    int32_t *l_10 = &p_17->g_3;
    int32_t *l_11 = &p_17->g_3;
    int32_t *l_12 = &p_17->g_3;
    int32_t *l_13[10][1] = {{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3},{&p_17->g_3}};
    int i, j;
    p_17->g_14++;
    return (*l_8);
}


__kernel void entry(__global ulong *result, __global int *sequence_input, __global long *g_comm_values) {
    int i;
    __local int64_t l_comm_values[171];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 171; i++)
            l_comm_values[i] = 1;
    struct S0 c_18;
    struct S0* p_17 = &c_18;
    struct S0 c_19 = {
        (-7L), // p_17->g_3
        65528UL, // p_17->g_14
        sequence_input[get_global_id(0)], // p_17->global_0_offset
        sequence_input[get_global_id(1)], // p_17->global_1_offset
        sequence_input[get_global_id(2)], // p_17->global_2_offset
        sequence_input[get_local_id(0)], // p_17->local_0_offset
        sequence_input[get_local_id(1)], // p_17->local_1_offset
        sequence_input[get_local_id(2)], // p_17->local_2_offset
        sequence_input[get_group_id(0)], // p_17->group_0_offset
        sequence_input[get_group_id(1)], // p_17->group_1_offset
        sequence_input[get_group_id(2)], // p_17->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 171)), permutations[0][get_linear_local_id()])), // p_17->tid
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_18 = c_19;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_17);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_17->g_3, "p_17->g_3", print_hash_value);
    transparent_crc(p_17->g_14, "p_17->g_14", print_hash_value);
    transparent_crc(p_17->l_comm_values[get_linear_local_id()], "p_17->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_17->g_comm_values[get_linear_group_id() * 171 + get_linear_local_id()], "p_17->g_comm_values[get_linear_group_id() * 171 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

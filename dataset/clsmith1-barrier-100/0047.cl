// ---fake_divergence ---inter_thread_comm -g 16,81,2 -l 2,81,1
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][162] = {
{98,106,80,9,126,96,34,8,90,32,131,116,142,63,1,149,42,7,91,46,103,53,35,30,17,145,64,25,93,75,137,26,133,123,87,69,39,141,47,33,113,44,24,18,154,110,109,138,14,158,92,0,73,86,147,58,97,77,146,70,54,59,57,84,124,143,38,127,79,27,121,43,117,49,41,100,159,108,72,153,101,4,12,105,29,3,148,112,95,68,125,52,129,50,139,156,94,37,144,81,65,71,78,28,20,61,62,55,155,135,6,85,102,140,150,45,13,119,16,152,51,118,66,74,40,114,120,23,104,88,56,157,67,107,130,31,5,60,36,128,115,48,2,161,19,89,136,122,22,76,111,134,160,82,99,11,21,15,83,151,10,132}, // permutation 0
{66,92,119,3,52,47,1,7,61,139,40,81,59,18,76,88,15,145,68,23,101,159,57,46,26,6,113,50,136,111,116,149,51,30,58,38,67,22,20,28,12,17,43,34,106,105,16,97,156,115,83,60,140,56,135,64,73,125,54,95,120,107,86,144,100,134,31,129,41,110,160,154,85,32,117,102,25,74,53,127,82,114,161,78,45,62,133,108,71,42,70,96,44,130,128,91,90,104,142,137,79,122,5,80,39,99,35,4,147,152,141,36,75,87,13,72,158,94,155,124,98,21,89,14,84,77,153,33,157,37,118,48,24,8,121,112,29,55,138,109,143,27,131,150,11,148,123,132,2,65,10,63,0,126,49,103,146,19,69,93,9,151}, // permutation 1
{61,62,155,92,24,39,95,0,96,129,8,136,10,125,138,11,114,81,109,12,3,110,128,45,32,118,153,112,35,126,132,107,29,60,65,99,16,142,88,115,20,18,9,67,72,124,111,91,43,157,148,1,131,82,77,158,117,106,139,41,22,33,100,152,83,93,102,36,101,113,122,140,161,145,71,13,4,137,143,30,151,133,17,42,14,49,78,44,48,73,37,50,5,103,66,90,40,59,53,116,2,120,68,121,23,84,154,47,55,89,7,97,70,46,134,79,76,104,85,69,119,144,94,52,149,57,51,98,87,150,6,130,25,28,26,147,108,15,31,34,64,21,86,156,160,141,105,75,19,74,123,54,58,38,135,56,27,146,159,127,63,80}, // permutation 2
{160,123,97,82,130,98,127,148,86,132,67,28,74,139,109,155,75,102,122,95,47,44,140,156,34,145,64,14,133,146,39,68,65,62,42,32,157,78,63,36,108,115,3,22,85,18,52,17,31,6,149,143,154,58,41,5,113,45,107,111,141,125,110,21,66,26,77,138,7,61,25,153,129,20,51,128,161,38,103,16,19,79,142,59,112,100,150,50,57,49,120,99,96,80,104,55,83,147,158,90,101,23,94,135,87,10,12,159,56,119,134,71,92,40,118,35,126,84,73,114,2,33,137,4,152,116,27,37,144,60,121,1,43,30,69,72,81,124,15,11,89,151,54,48,117,70,0,91,13,106,24,105,9,76,93,53,136,29,131,46,8,88}, // permutation 3
{125,130,22,0,6,63,38,19,145,142,123,119,161,95,128,146,81,83,10,72,44,85,16,126,155,103,112,79,28,97,159,152,109,71,42,8,18,12,70,2,101,30,102,129,52,33,147,91,100,113,76,117,154,15,110,25,1,40,31,69,107,118,134,13,59,99,144,7,35,143,96,139,124,115,55,77,82,49,131,47,108,74,135,67,132,46,89,121,27,14,9,87,29,50,56,98,32,157,160,105,64,104,5,138,4,17,73,151,84,11,58,36,53,45,127,41,43,90,78,66,150,62,20,141,39,61,65,23,88,116,93,26,111,149,80,148,48,153,122,34,75,86,94,21,114,137,92,133,156,106,54,24,140,120,158,68,57,51,136,37,3,60}, // permutation 4
{106,23,145,8,19,82,18,102,133,152,17,149,119,129,111,159,7,103,110,98,68,85,27,153,91,46,150,104,4,54,127,75,109,63,45,22,121,15,69,31,143,118,94,148,28,5,11,66,33,12,73,139,71,20,99,155,136,132,151,1,38,142,135,137,62,117,56,13,116,97,123,72,9,78,147,96,21,59,65,26,43,79,77,100,61,120,158,146,107,14,161,113,101,84,114,93,92,16,3,144,48,0,2,50,140,88,125,122,157,124,67,130,156,36,134,128,141,57,83,37,138,112,39,131,74,44,86,64,32,87,95,30,58,29,25,41,60,10,90,76,55,81,115,49,24,47,80,70,53,105,40,52,35,89,154,160,34,42,51,126,6,108}, // permutation 5
{133,45,79,74,78,69,67,100,54,77,161,98,40,71,68,65,109,91,12,73,27,125,20,139,22,2,75,134,3,80,72,55,111,51,99,60,46,119,97,150,90,70,92,105,89,145,159,18,118,131,137,154,114,96,158,61,0,135,128,86,140,151,57,41,30,34,33,147,16,160,107,13,8,138,85,5,81,126,44,10,120,129,11,24,53,9,94,152,48,47,113,149,64,148,87,88,143,36,59,50,127,31,38,146,108,37,32,49,23,124,142,106,122,28,66,136,1,144,76,63,15,95,141,52,101,56,6,121,7,21,110,14,43,155,42,116,35,4,112,156,123,115,157,29,83,58,117,93,102,82,153,130,25,84,26,19,103,62,104,39,132,17}, // permutation 6
{116,155,127,35,56,135,65,88,82,123,114,39,110,87,67,46,106,57,143,100,11,66,139,54,85,157,70,91,147,50,160,134,138,41,84,108,105,33,61,81,36,44,73,25,79,153,4,131,77,60,149,19,86,64,40,15,75,158,146,98,32,16,132,144,126,117,124,55,3,27,45,93,137,130,2,17,7,125,103,94,49,13,119,76,159,129,1,72,62,104,101,37,48,21,22,34,111,14,121,151,83,71,90,97,69,145,109,113,9,53,154,12,26,68,140,29,96,74,18,28,5,152,0,47,120,23,133,142,59,115,24,112,161,20,136,141,42,8,150,43,122,52,89,10,78,128,38,51,102,95,148,107,31,63,58,156,6,118,80,30,92,99}, // permutation 7
{153,58,70,49,116,99,135,2,8,137,79,75,11,127,45,51,150,36,129,20,108,120,122,104,21,26,126,83,44,48,148,6,72,66,115,144,107,141,53,65,46,61,139,95,94,134,31,25,105,10,28,159,62,52,67,57,110,69,80,9,73,109,4,90,35,89,43,30,3,151,140,14,88,146,92,18,142,145,143,130,0,41,114,74,100,24,131,5,59,16,77,17,138,19,113,76,71,1,136,119,154,91,157,63,33,86,55,101,34,87,12,50,56,102,47,54,103,152,29,160,23,117,15,60,93,158,42,85,78,37,111,39,155,106,27,112,98,161,32,96,125,40,84,68,147,133,132,123,128,97,149,81,7,124,38,13,64,121,22,82,118,156}, // permutation 8
{56,79,58,145,33,101,106,47,132,36,157,65,57,7,21,144,158,148,75,155,100,99,126,55,80,22,88,28,154,128,82,108,74,129,40,27,104,71,8,81,156,60,37,50,39,124,117,102,83,97,137,109,133,84,52,49,96,123,42,31,149,151,4,30,1,23,29,15,64,35,66,113,78,115,161,140,18,131,77,95,6,51,93,12,68,147,153,122,17,136,85,3,134,98,46,118,9,76,20,67,114,112,103,125,127,135,25,121,152,13,34,59,70,2,10,62,38,146,54,48,150,43,120,87,72,53,89,26,141,19,16,92,91,105,14,0,139,116,61,41,142,69,11,159,119,111,138,143,160,86,44,94,63,24,130,32,110,73,45,90,5,107} // permutation 9
};

// Seed: 47

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
    int32_t g_3[4][4][9];
    int32_t g_4;
    uint32_t g_22;
    volatile int32_t g_28;
    uint64_t g_41;
    uint64_t g_46;
    int32_t g_75;
    volatile uint8_t g_78;
    uint32_t g_88;
    int32_t *g_95;
    uint64_t g_97;
    uint64_t *g_96;
    uint16_t g_109;
    int8_t g_121[3][2][1];
    uint8_t g_128;
    int16_t g_130[6];
    int32_t g_198;
    volatile int32_t ** volatile g_250;
    int64_t g_289;
    uint32_t g_338[10];
    int32_t g_352;
    int32_t * volatile g_372[7][9];
    int32_t g_374;
    int32_t * volatile g_373;
    uint32_t g_424;
    uint8_t g_454;
    int32_t * volatile *g_477;
    int32_t * volatile **g_476;
    int64_t g_494;
    int32_t *g_496[8];
    int32_t ** volatile g_495;
    int8_t *g_554;
    int8_t **g_553[8][10][3];
    uint8_t *g_557;
    volatile int64_t *g_589;
    volatile int64_t * volatile * volatile g_588[9];
    volatile int64_t * volatile * volatile * volatile g_590;
    int32_t g_596;
    volatile int64_t **g_653;
    volatile int64_t ***g_652;
    uint32_t g_655;
    int32_t g_656[10];
    uint64_t g_674;
    int32_t * volatile g_731;
    uint32_t g_750[5][9];
    volatile int64_t g_789;
    uint64_t **g_943[10];
    int8_t * volatile * volatile g_953;
    int8_t * volatile * volatile *g_952[3][6][7];
    int8_t * volatile * volatile ** volatile g_951;
    uint16_t *g_957[10];
    uint32_t g_1069;
    int32_t g_1104;
    int64_t *g_1108;
    int64_t **g_1107;
    uint8_t g_1112;
    uint32_t g_1153[3];
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
uint32_t  func_1(struct S0 * p_1188);
int32_t * func_5(uint32_t  p_6, uint32_t  p_7, int64_t  p_8, uint8_t  p_9, int32_t * p_10, struct S0 * p_1188);
uint32_t  func_11(uint64_t  p_12, uint64_t  p_13, int32_t * p_14, uint32_t  p_15, uint64_t  p_16, struct S0 * p_1188);
uint8_t  func_29(uint8_t  p_30, int32_t  p_31, struct S0 * p_1188);
int32_t  func_32(uint16_t  p_33, uint32_t * p_34, uint32_t * p_35, uint64_t  p_36, int64_t  p_37, struct S0 * p_1188);
uint32_t * func_42(uint32_t * p_43, struct S0 * p_1188);
int8_t  func_48(uint32_t * p_49, int8_t  p_50, struct S0 * p_1188);
uint32_t  func_53(uint32_t * p_54, int32_t * p_55, uint64_t * p_56, int32_t * p_57, uint16_t  p_58, struct S0 * p_1188);
uint32_t * func_59(int32_t  p_60, int64_t  p_61, uint32_t  p_62, struct S0 * p_1188);
int32_t  func_69(uint64_t  p_70, uint16_t  p_71, struct S0 * p_1188);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_1188->g_4 p_1188->g_3
 * writes: p_1188->g_4
 */
uint32_t  func_1(struct S0 * p_1188)
{ /* block id: 4 */
    int32_t *l_2 = &p_1188->g_3[3][2][7];
    uint8_t l_17[1];
    int32_t l_1035 = 1L;
    int8_t ***l_1106 = &p_1188->g_553[4][5][0];
    int64_t **l_1110[10] = {&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108,&p_1188->g_1108};
    uint32_t l_1130[3];
    uint32_t l_1170[1][3][9] = {{{1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL,1UL,1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL},{1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL,1UL,1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL},{1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL,1UL,1UL,0xCF1F6D1BL,0x6559A39CL,0xCF1F6D1BL}}};
    int i, j, k;
    for (i = 0; i < 1; i++)
        l_17[i] = 0x77L;
    for (i = 0; i < 3; i++)
        l_1130[i] = 0x042F532FL;
    l_2 = l_2;
    for (p_1188->g_4 = 0; (p_1188->g_4 <= 3); p_1188->g_4 += 1)
    { /* block id: 8 */
        int32_t l_18 = 0x35457D67L;
        uint32_t *l_21[5] = {&p_1188->g_22,&p_1188->g_22,&p_1188->g_22,&p_1188->g_22,&p_1188->g_22};
        int32_t l_23 = (-1L);
        int64_t *l_1028 = &p_1188->g_289;
        int64_t *l_1029 = (void*)0;
        int64_t *l_1030 = (void*)0;
        int64_t *l_1031 = (void*)0;
        int32_t **l_1032 = (void*)0;
        int32_t **l_1033[6][10] = {{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95},{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95},{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95},{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95},{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95},{&l_2,&p_1188->g_496[4],&p_1188->g_95,(void*)0,&l_2,(void*)0,&p_1188->g_95,&p_1188->g_496[4],&l_2,&p_1188->g_95}};
        uint8_t l_1034 = 1UL;
        uint16_t l_1102 = 0x0E8EL;
        int64_t **l_1111 = (void*)0;
        int32_t **l_1119 = (void*)0;
        int8_t ****l_1159 = &l_1106;
        uint16_t l_1171[6] = {0UL,65535UL,0UL,0UL,65535UL,0UL};
        int32_t l_1178 = 0x7F264D7DL;
        int i, j;
        (1 + 1);
    }
    return (*l_2);
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_75 p_1188->g_97 p_1188->g_495 p_1188->g_496
 * writes: p_1188->g_75 p_1188->g_97
 */
int32_t * func_5(uint32_t  p_6, uint32_t  p_7, int64_t  p_8, uint8_t  p_9, int32_t * p_10, struct S0 * p_1188)
{ /* block id: 519 */
    int8_t l_1045 = 0x1EL;
    for (p_1188->g_75 = 29; (p_1188->g_75 != (-15)); p_1188->g_75 = safe_sub_func_int8_t_s_s(p_1188->g_75, 2))
    { /* block id: 522 */
        int32_t l_1043 = 0L;
        for (p_1188->g_97 = 0; (p_1188->g_97 < 46); ++p_1188->g_97)
        { /* block id: 525 */
            int32_t *l_1044[4][4] = {{&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374},{&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374},{&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374},{&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374}};
            int i, j;
            l_1045 &= (l_1043 = l_1043);
        }
    }
    return (*p_1188->g_495);
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_476 p_1188->g_477 p_1188->g_88 p_1188->l_comm_values
 * writes: p_1188->g_95 p_1188->g_88
 */
uint32_t  func_11(uint64_t  p_12, uint64_t  p_13, int32_t * p_14, uint32_t  p_15, uint64_t  p_16, struct S0 * p_1188)
{ /* block id: 511 */
    int32_t *l_1036 = &p_1188->g_4;
    (**p_1188->g_476) = l_1036;
    for (p_1188->g_88 = 0; (p_1188->g_88 == 19); p_1188->g_88++)
    { /* block id: 515 */
        return p_1188->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1188->tid, 162))];
    }
    return p_13;
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->l_comm_values p_1188->g_3 p_1188->g_4 p_1188->g_46 p_1188->g_78 p_1188->g_75 p_1188->g_28 p_1188->g_88 p_1188->g_96 p_1188->g_128 p_1188->g_656 p_1188->g_674 p_1188->g_477 p_1188->g_95 p_1188->g_476 p_1188->g_655 p_1188->g_494 p_1188->g_121 p_1188->g_557 p_1188->g_97 p_1188->g_338 p_1188->g_41 p_1188->g_374 p_1188->g_454 p_1188->g_352
 * writes: p_1188->g_41 p_1188->g_46 p_1188->g_3 p_1188->g_78 p_1188->g_88 p_1188->g_28 p_1188->g_95 p_1188->g_128 p_1188->g_109 p_1188->g_674 p_1188->g_75 p_1188->g_454 p_1188->g_97 p_1188->g_289
 */
uint8_t  func_29(uint8_t  p_30, int32_t  p_31, struct S0 * p_1188)
{ /* block id: 10 */
    int32_t l_40 = 0x19F8C517L;
    uint32_t *l_964 = &p_1188->g_22;
    int8_t *l_965 = (void*)0;
    uint16_t *l_966 = &p_1188->g_109;
    int32_t l_1027 = 1L;
    if (func_32(((safe_rshift_func_int8_t_s_u(6L, (p_1188->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1188->tid, 162))] < p_30))) <= (l_40 != (p_1188->g_41 = p_1188->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1188->tid, 162))]))), func_42(&p_1188->g_22, p_1188), l_964, ((((*l_966) = (l_965 == l_965)) != l_40) , 0xB15D898D06997924L), p_1188->g_656[6], p_1188))
    { /* block id: 492 */
        uint32_t l_984 = 0x24894511L;
        uint64_t *l_999 = &p_1188->g_41;
        int64_t *l_1000 = &p_1188->g_289;
        int32_t l_1001[10][1][9] = {{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}},{{0x36778EBDL,0x4C0A8036L,0x7C266197L,0x23BA56E2L,(-1L),0x1E46E4C4L,0x1D9234A4L,(-1L),0x4EF4F150L}}};
        int32_t *l_1002 = &l_40;
        int i, j, k;
        (*l_1002) = (((((safe_sub_func_uint32_t_u_u(1UL, ((*p_1188->g_95) = (p_30 == (--l_984))))) == (safe_mul_func_uint8_t_u_u((safe_div_func_int8_t_s_s((safe_mul_func_int16_t_s_s(p_1188->g_121[0][0][0], (((*l_1000) = ((safe_lshift_func_int16_t_s_s((safe_mul_func_uint16_t_u_u((((((*p_1188->g_557) = p_30) == 0x6AL) >= ((*p_1188->g_96)--)) && (((p_1188->g_338[8] || ((*l_999) |= ((*p_1188->g_96) = 1UL))) > p_30) & (0x1B17L < p_1188->g_338[2]))), l_40)), 7)) < p_31)) | (-5L)))), 0x93L)), 0x56L))) != p_31) & l_1001[4][0][0]) || p_1188->g_374);
    }
    else
    { /* block id: 501 */
        uint16_t **l_1008 = (void*)0;
        uint16_t **l_1010 = &p_1188->g_957[8];
        uint16_t ***l_1009 = &l_1010;
        uint8_t l_1025 = 0xF5L;
        int32_t l_1026 = 1L;
        (*p_1188->g_95) |= ((((0x61L ^ (safe_unary_minus_func_uint64_t_u((safe_lshift_func_int8_t_s_u((safe_add_func_int64_t_s_s((!(p_30 & p_31)), (((l_1008 != ((*l_1009) = &p_1188->g_957[0])) , (safe_div_func_uint16_t_u_u(((&p_30 != &p_1188->g_78) & ((*p_1188->g_557) = (*p_1188->g_557))), (l_1026 ^= (safe_mul_func_int8_t_s_s((safe_rshift_func_uint8_t_u_u(GROUP_DIVERGE(0, 1), 5)), (safe_rshift_func_int8_t_s_s((safe_lshift_func_int16_t_s_s(((safe_rshift_func_uint16_t_u_u(((safe_lshift_func_int16_t_s_u((-1L), 8)) > l_1025), p_31)) & p_1188->g_41), 11)), 0)))))))) > p_1188->g_352))), 5))))) != l_40) | 5UL) < p_31);
    }
    return l_1027;
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_674 p_1188->g_477 p_1188->g_95 p_1188->g_476 p_1188->g_655 p_1188->g_75 p_1188->g_494
 * writes: p_1188->g_674 p_1188->g_75
 */
int32_t  func_32(uint16_t  p_33, uint32_t * p_34, uint32_t * p_35, uint64_t  p_36, int64_t  p_37, struct S0 * p_1188)
{ /* block id: 484 */
    int8_t ***l_980[9][1] = {{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]},{&p_1188->g_553[4][4][1]}};
    int32_t l_981 = 2L;
    int i, j;
    for (p_1188->g_674 = 0; (p_1188->g_674 >= 57); p_1188->g_674 = safe_add_func_uint32_t_u_u(p_1188->g_674, 1))
    { /* block id: 487 */
        int32_t *l_969 = &p_1188->g_75;
        (***p_1188->g_476) = ((*p_1188->g_477) != l_969);
        (*l_969) = (p_33 & (&l_969 == (((safe_mul_func_int16_t_s_s((p_33 > (p_1188->g_655 , (safe_mod_func_int16_t_s_s((((*l_969) | ((safe_mul_func_uint8_t_u_u((safe_sub_func_int16_t_s_s(((void*)0 == l_980[4][0]), (l_981 , p_33))), p_37)) == 0x0B57989298005CC9L)) & 1UL), p_36)))), 4UL)) , p_1188->g_494) , (*p_1188->g_476))));
    }
    return (***p_1188->g_476);
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_3 p_1188->l_comm_values p_1188->g_4 p_1188->g_46 p_1188->g_78 p_1188->g_75 p_1188->g_28 p_1188->g_88 p_1188->g_96 p_1188->g_128
 * writes: p_1188->g_46 p_1188->g_3 p_1188->g_78 p_1188->g_88 p_1188->g_28 p_1188->g_95 p_1188->g_128
 */
uint32_t * func_42(uint32_t * p_43, struct S0 * p_1188)
{ /* block id: 12 */
    uint64_t *l_45 = &p_1188->g_46;
    int32_t *l_47 = &p_1188->g_3[2][1][2];
    int32_t *l_961 = (void*)0;
    int32_t *l_962 = (void*)0;
    int64_t l_963 = 0x444BD7A7C7B8E76AL;
    (*l_47) = (safe_unary_minus_func_uint64_t_u(((*l_45) = 0x14B4322E7C650BA4L)));
    (*l_47) = 0x7BC41BBBL;
    l_963 &= (func_48(&p_1188->g_22, (safe_div_func_uint32_t_u_u((~((void*)0 != &p_1188->g_46)), func_53(func_59((safe_div_func_uint8_t_u_u(((safe_rshift_func_uint16_t_u_s(((safe_add_func_uint64_t_u_u((*l_47), (p_1188->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1188->tid, 162))] != ((*l_47) ^ p_1188->g_4)))) > func_69(((*l_45) |= GROUP_DIVERGE(0, 1)), ((safe_rshift_func_int16_t_s_s((*l_47), (*l_47))) , (*l_47)), p_1188)), 12)) , p_1188->g_3[3][2][7]), GROUP_DIVERGE(0, 1))), p_1188->g_4, (*l_47), p_1188), l_47, p_1188->g_96, &p_1188->g_75, (*l_47), p_1188))), p_1188) || (*l_47));
    return l_47;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
int8_t  func_48(uint32_t * p_49, int8_t  p_50, struct S0 * p_1188)
{ /* block id: 333 */
    int8_t l_700 = 0x51L;
    uint64_t *l_709 = &p_1188->g_674;
    int8_t **l_710 = &p_1188->g_554;
    uint64_t l_715[4];
    int64_t *l_716 = &p_1188->g_289;
    uint32_t *l_744 = &p_1188->g_88;
    uint32_t **l_743 = &l_744;
    int32_t l_799 = 0x3CAC4409L;
    uint32_t l_808 = 0UL;
    int32_t l_839[1][10] = {{0L,0x5A44F87FL,0L,0L,0x5A44F87FL,0L,0L,0x5A44F87FL,0L,0L}};
    uint32_t l_867 = 4294967292UL;
    uint16_t *l_876 = (void*)0;
    uint32_t l_930 = 0UL;
    uint16_t l_959 = 1UL;
    int i, j;
    for (i = 0; i < 4; i++)
        l_715[i] = 7UL;
    return p_50;
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_128 p_1188->g_3
 * writes: p_1188->g_128
 */
uint32_t  func_53(uint32_t * p_54, int32_t * p_55, uint64_t * p_56, int32_t * p_57, uint16_t  p_58, struct S0 * p_1188)
{ /* block id: 32 */
    uint32_t *l_100 = &p_1188->g_88;
    int32_t l_101 = (-2L);
    uint32_t l_114[4][8] = {{4UL,4294967287UL,0xCD9F560EL,4294967287UL,4UL,4UL,4294967287UL,0xCD9F560EL},{4UL,4294967287UL,0xCD9F560EL,4294967287UL,4UL,4UL,4294967287UL,0xCD9F560EL},{4UL,4294967287UL,0xCD9F560EL,4294967287UL,4UL,4UL,4294967287UL,0xCD9F560EL},{4UL,4294967287UL,0xCD9F560EL,4294967287UL,4UL,4UL,4294967287UL,0xCD9F560EL}};
    int64_t l_124 = 0x377E5FFF9132EE09L;
    int32_t l_169[8][8] = {{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL},{0x222EE4FFL,0x222EE4FFL,(-1L),0x3F4B4AC7L,0x14583706L,0x3F4B4AC7L,(-1L),0x222EE4FFL}};
    int8_t l_197 = 0x10L;
    int16_t *l_230[3][5] = {{&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2]},{&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2]},{&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2],&p_1188->g_130[2]}};
    int32_t l_323 = 0x092E7B89L;
    uint16_t l_358 = 0xF4B2L;
    uint64_t **l_375[3][10] = {{&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,(void*)0},{&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,(void*)0},{&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,(void*)0}};
    int8_t *l_467 = (void*)0;
    int8_t **l_466[3][4][10] = {{{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467}},{{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467}},{{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467},{&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467,&l_467}}};
    int8_t ***l_465 = &l_466[1][2][6];
    uint32_t l_509[7] = {0UL,0xC07B0613L,0UL,0UL,0xC07B0613L,0UL,0UL};
    uint8_t l_523 = 0x7AL;
    int32_t *l_540 = &p_1188->g_75;
    int8_t l_569[4][8][7] = {{{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L}},{{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L}},{{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L}},{{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L},{0x51L,0x57L,0x2BL,0x51L,0x5EL,0L,0L}}};
    uint16_t l_592 = 0x86DBL;
    int i, j, k;
    for (p_58 = 0; (p_58 <= 3); p_58 += 1)
    { /* block id: 35 */
        uint32_t *l_99 = &p_1188->g_88;
        uint32_t **l_98[4][6][3] = {{{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99}},{{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99}},{{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99}},{{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99},{&l_99,&l_99,&l_99}}};
        uint16_t *l_108[5];
        uint32_t *l_117 = &p_1188->g_22;
        int32_t l_141 = (-2L);
        uint8_t *l_152 = (void*)0;
        uint32_t *l_160 = (void*)0;
        int32_t l_177 = (-1L);
        int32_t l_178 = (-4L);
        int32_t l_179[8] = {0x4BE75671L,0x4BE75671L,0x4BE75671L,0x4BE75671L,0x4BE75671L,0x4BE75671L,0x4BE75671L,0x4BE75671L};
        uint16_t l_183[5] = {0x22D2L,0x22D2L,0x22D2L,0x22D2L,0x22D2L};
        int8_t l_296 = 8L;
        int32_t **l_377 = &p_1188->g_95;
        int64_t *l_491 = &l_124;
        int i, j, k;
        for (i = 0; i < 5; i++)
            l_108[i] = &p_1188->g_109;
        (1 + 1);
    }
    for (p_1188->g_128 = 0; (p_1188->g_128 <= 24); p_1188->g_128 = safe_add_func_int32_t_s_s(p_1188->g_128, 1))
    { /* block id: 256 */
        int32_t **l_539[8] = {&p_1188->g_95,&p_1188->g_496[4],&p_1188->g_95,&p_1188->g_95,&p_1188->g_496[4],&p_1188->g_95,&p_1188->g_95,&p_1188->g_496[4]};
        uint32_t *l_568[10][7][3] = {{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}},{{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22},{&p_1188->g_22,&p_1188->g_22,&p_1188->g_22}}};
        uint32_t l_597 = 9UL;
        int64_t *l_625 = &p_1188->g_289;
        int64_t *l_678[7];
        int64_t **l_677 = &l_678[1];
        int64_t **l_680 = (void*)0;
        int i, j, k;
        for (i = 0; i < 7; i++)
            l_678[i] = &p_1188->g_494;
        (1 + 1);
    }
    return (*p_54);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes: p_1188->g_95
 */
uint32_t * func_59(int32_t  p_60, int64_t  p_61, uint32_t  p_62, struct S0 * p_1188)
{ /* block id: 28 */
    int32_t **l_90 = (void*)0;
    int32_t *l_92[4];
    int32_t **l_91 = &l_92[1];
    int32_t *l_94 = &p_1188->g_3[3][2][7];
    int32_t **l_93[8] = {&l_94,&l_94,&l_94,&l_94,&l_94,&l_94,&l_94,&l_94};
    int i;
    for (i = 0; i < 4; i++)
        l_92[i] = (void*)0;
    p_1188->g_95 = ((*l_91) = &p_1188->g_75);
    return l_94;
}


/* ------------------------------------------ */
/* 
 * reads : p_1188->g_78 p_1188->g_75 p_1188->g_28 p_1188->g_88
 * writes: p_1188->g_78 p_1188->g_88 p_1188->g_28
 */
int32_t  func_69(uint64_t  p_70, uint16_t  p_71, struct S0 * p_1188)
{ /* block id: 17 */
    int32_t *l_74 = &p_1188->g_75;
    int32_t *l_76 = &p_1188->g_75;
    int32_t *l_77[8] = {&p_1188->g_75,&p_1188->g_75,&p_1188->g_75,&p_1188->g_75,&p_1188->g_75,&p_1188->g_75,&p_1188->g_75,&p_1188->g_75};
    uint32_t *l_87 = &p_1188->g_22;
    int i;
    ++p_1188->g_78;
    for (p_70 = 0; (p_70 <= 7); p_70 += 1)
    { /* block id: 21 */
        uint32_t *l_86 = &p_1188->g_22;
        uint32_t **l_85[10] = {(void*)0,&l_86,&l_86,&l_86,(void*)0,(void*)0,&l_86,&l_86,&l_86,(void*)0};
        int32_t l_89 = 0x51EF091AL;
        int i;
        p_1188->g_88 ^= (safe_rshift_func_uint8_t_u_u(((p_70 != ((safe_add_func_uint64_t_u_u(18446744073709551606UL, (l_77[p_70] != (l_87 = (p_1188->g_75 , l_77[p_70]))))) == FAKE_DIVERGE(p_1188->local_1_offset, get_local_id(1), 10))) <= 0xE9DE5592ED994868L), p_1188->g_28));
        l_89 = 0x371DEE15L;
        p_1188->g_28 = 0L;
    }
    return p_70;
}


__kernel void entry(__global ulong *result, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local int64_t l_comm_values[162];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 162; i++)
            l_comm_values[i] = 1;
    struct S0 c_1189;
    struct S0* p_1188 = &c_1189;
    struct S0 c_1190 = {
        {{{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL}},{{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL}},{{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL}},{{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL},{0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL,0x2C7C8A6BL,(-6L),0x2C7C8A6BL}}}, // p_1188->g_3
        1L, // p_1188->g_4
        0x6AE49A2FL, // p_1188->g_22
        (-1L), // p_1188->g_28
        0UL, // p_1188->g_41
        18446744073709551615UL, // p_1188->g_46
        0L, // p_1188->g_75
        0x26L, // p_1188->g_78
        9UL, // p_1188->g_88
        &p_1188->g_75, // p_1188->g_95
        0UL, // p_1188->g_97
        &p_1188->g_97, // p_1188->g_96
        0x5E7BL, // p_1188->g_109
        {{{0x28L},{0x28L}},{{0x28L},{0x28L}},{{0x28L},{0x28L}}}, // p_1188->g_121
        0x13L, // p_1188->g_128
        {6L,6L,6L,6L,6L,6L}, // p_1188->g_130
        1L, // p_1188->g_198
        (void*)0, // p_1188->g_250
        1L, // p_1188->g_289
        {0x69D26691L,0x944E524CL,4294967295UL,0x944E524CL,0x69D26691L,0x69D26691L,0x944E524CL,4294967295UL,0x944E524CL,0x69D26691L}, // p_1188->g_338
        0L, // p_1188->g_352
        {{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]},{&p_1188->g_3[0][3][4],(void*)0,&p_1188->g_75,&p_1188->g_4,&p_1188->g_4,&p_1188->g_75,(void*)0,&p_1188->g_75,&p_1188->g_3[0][0][1]}}, // p_1188->g_372
        (-1L), // p_1188->g_374
        &p_1188->g_374, // p_1188->g_373
        0x5CF23553L, // p_1188->g_424
        247UL, // p_1188->g_454
        &p_1188->g_95, // p_1188->g_477
        &p_1188->g_477, // p_1188->g_476
        0x664056A146C0289DL, // p_1188->g_494
        {&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374,&p_1188->g_374}, // p_1188->g_496
        &p_1188->g_496[3], // p_1188->g_495
        (void*)0, // p_1188->g_554
        {{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}},{{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0},{(void*)0,&p_1188->g_554,(void*)0}}}, // p_1188->g_553
        &p_1188->g_454, // p_1188->g_557
        (void*)0, // p_1188->g_589
        {&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589,&p_1188->g_589}, // p_1188->g_588
        &p_1188->g_588[7], // p_1188->g_590
        0L, // p_1188->g_596
        (void*)0, // p_1188->g_653
        &p_1188->g_653, // p_1188->g_652
        4294967291UL, // p_1188->g_655
        {0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L,0x1FD9C0D1L}, // p_1188->g_656
        0x4AEB3F6E6DE36C41L, // p_1188->g_674
        (void*)0, // p_1188->g_731
        {{0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L},{0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L},{0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L},{0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L},{0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L,0x59B47BE3L}}, // p_1188->g_750
        9L, // p_1188->g_789
        {&p_1188->g_96,(void*)0,&p_1188->g_96,(void*)0,&p_1188->g_96,&p_1188->g_96,(void*)0,&p_1188->g_96,(void*)0,&p_1188->g_96}, // p_1188->g_943
        &p_1188->g_554, // p_1188->g_953
        {{{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953}},{{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953}},{{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953},{&p_1188->g_953,&p_1188->g_953,&p_1188->g_953,(void*)0,&p_1188->g_953,(void*)0,&p_1188->g_953}}}, // p_1188->g_952
        &p_1188->g_952[2][3][0], // p_1188->g_951
        {&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109,&p_1188->g_109}, // p_1188->g_957
        0x4289AFCCL, // p_1188->g_1069
        0L, // p_1188->g_1104
        (void*)0, // p_1188->g_1108
        &p_1188->g_1108, // p_1188->g_1107
        255UL, // p_1188->g_1112
        {0xF0CD3BDAL,0xF0CD3BDAL,0xF0CD3BDAL}, // p_1188->g_1153
        sequence_input[get_global_id(0)], // p_1188->global_0_offset
        sequence_input[get_global_id(1)], // p_1188->global_1_offset
        sequence_input[get_global_id(2)], // p_1188->global_2_offset
        sequence_input[get_local_id(0)], // p_1188->local_0_offset
        sequence_input[get_local_id(1)], // p_1188->local_1_offset
        sequence_input[get_local_id(2)], // p_1188->local_2_offset
        sequence_input[get_group_id(0)], // p_1188->group_0_offset
        sequence_input[get_group_id(1)], // p_1188->group_1_offset
        sequence_input[get_group_id(2)], // p_1188->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 162)), permutations[0][get_linear_local_id()])), // p_1188->tid
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_1189 = c_1190;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_1188);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 4; j++)
        {
            for (k = 0; k < 9; k++)
            {
                transparent_crc(p_1188->g_3[i][j][k], "p_1188->g_3[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1188->g_4, "p_1188->g_4", print_hash_value);
    transparent_crc(p_1188->g_22, "p_1188->g_22", print_hash_value);
    transparent_crc(p_1188->g_28, "p_1188->g_28", print_hash_value);
    transparent_crc(p_1188->g_41, "p_1188->g_41", print_hash_value);
    transparent_crc(p_1188->g_46, "p_1188->g_46", print_hash_value);
    transparent_crc(p_1188->g_75, "p_1188->g_75", print_hash_value);
    transparent_crc(p_1188->g_78, "p_1188->g_78", print_hash_value);
    transparent_crc(p_1188->g_88, "p_1188->g_88", print_hash_value);
    transparent_crc(p_1188->g_97, "p_1188->g_97", print_hash_value);
    transparent_crc(p_1188->g_109, "p_1188->g_109", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 1; k++)
            {
                transparent_crc(p_1188->g_121[i][j][k], "p_1188->g_121[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1188->g_128, "p_1188->g_128", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(p_1188->g_130[i], "p_1188->g_130[i]", print_hash_value);

    }
    transparent_crc(p_1188->g_198, "p_1188->g_198", print_hash_value);
    transparent_crc(p_1188->g_289, "p_1188->g_289", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(p_1188->g_338[i], "p_1188->g_338[i]", print_hash_value);

    }
    transparent_crc(p_1188->g_352, "p_1188->g_352", print_hash_value);
    transparent_crc(p_1188->g_374, "p_1188->g_374", print_hash_value);
    transparent_crc(p_1188->g_424, "p_1188->g_424", print_hash_value);
    transparent_crc(p_1188->g_454, "p_1188->g_454", print_hash_value);
    transparent_crc(p_1188->g_494, "p_1188->g_494", print_hash_value);
    transparent_crc(p_1188->g_596, "p_1188->g_596", print_hash_value);
    transparent_crc(p_1188->g_655, "p_1188->g_655", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(p_1188->g_656[i], "p_1188->g_656[i]", print_hash_value);

    }
    transparent_crc(p_1188->g_674, "p_1188->g_674", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 9; j++)
        {
            transparent_crc(p_1188->g_750[i][j], "p_1188->g_750[i][j]", print_hash_value);

        }
    }
    transparent_crc(p_1188->g_789, "p_1188->g_789", print_hash_value);
    transparent_crc(p_1188->g_1069, "p_1188->g_1069", print_hash_value);
    transparent_crc(p_1188->g_1104, "p_1188->g_1104", print_hash_value);
    transparent_crc(p_1188->g_1112, "p_1188->g_1112", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(p_1188->g_1153[i], "p_1188->g_1153[i]", print_hash_value);

    }
    transparent_crc(p_1188->l_comm_values[get_linear_local_id()], "p_1188->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_1188->g_comm_values[get_linear_group_id() * 162 + get_linear_local_id()], "p_1188->g_comm_values[get_linear_group_id() * 162 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

// ---fake_divergence ---inter_thread_comm -g 87,44,2 -l 3,22,2
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][132] = {
{4,120,15,50,71,104,63,39,94,65,81,37,58,24,52,29,82,46,92,33,122,114,69,9,48,89,100,36,12,112,96,79,8,127,3,60,72,75,76,61,18,43,87,59,128,90,2,103,126,93,117,99,35,55,42,21,119,32,54,118,30,10,121,80,25,101,31,74,44,14,19,57,77,129,84,91,7,17,23,16,86,1,113,20,40,49,68,22,85,0,108,88,5,34,38,27,51,66,110,6,64,41,125,130,83,62,47,124,28,106,98,115,116,111,26,105,11,131,123,53,45,56,102,78,73,109,97,107,70,13,95,67}, // permutation 0
{93,62,79,3,110,122,119,6,35,22,54,97,94,45,99,128,29,57,21,124,27,75,52,73,68,70,18,43,9,103,72,11,16,106,24,77,4,23,120,59,87,55,58,7,114,25,28,127,86,89,39,53,84,126,37,44,34,71,36,5,116,112,48,31,14,1,107,90,46,69,20,42,111,38,2,47,8,108,74,41,50,105,66,65,104,88,85,131,15,32,0,17,76,100,101,12,51,96,26,56,115,19,49,113,92,118,67,61,64,129,123,98,63,81,125,82,117,95,10,80,13,102,130,78,33,109,40,121,30,60,91,83}, // permutation 1
{28,19,87,34,102,41,109,24,6,114,66,85,47,80,90,18,110,9,104,11,15,20,81,3,1,16,94,115,59,70,95,57,93,78,108,86,48,105,17,88,39,98,5,60,49,111,89,7,53,26,97,37,32,72,42,36,84,73,10,129,101,23,35,64,43,92,65,75,122,54,30,14,38,25,76,50,45,126,103,107,58,123,27,120,118,8,130,40,99,69,31,4,44,62,61,29,79,77,74,56,131,63,67,128,116,125,83,55,22,106,82,100,21,119,71,33,113,127,117,0,112,2,12,46,13,96,91,52,68,124,121,51}, // permutation 2
{87,34,65,37,104,56,30,61,15,80,114,69,55,85,14,82,111,116,27,95,19,40,117,35,1,66,89,129,100,62,21,2,106,67,123,57,41,23,76,113,131,79,36,54,53,108,126,17,96,86,101,10,38,105,22,73,16,4,60,124,107,70,97,29,83,9,118,20,115,84,42,24,71,0,98,92,81,32,6,52,43,5,7,130,112,63,125,39,93,3,78,33,50,26,120,45,91,74,110,121,11,59,44,51,72,68,90,88,46,12,31,49,128,48,103,109,77,13,18,58,28,25,64,75,8,102,94,127,119,47,99,122}, // permutation 3
{121,47,105,110,82,10,93,119,126,14,124,111,43,16,118,115,22,52,38,102,78,122,21,32,41,63,48,83,53,4,131,114,69,91,100,40,72,89,113,68,25,80,28,64,3,123,106,56,66,77,130,116,65,86,74,76,8,87,20,103,6,19,75,36,112,49,92,33,98,13,61,50,1,35,88,27,5,30,31,94,24,11,125,108,79,18,60,45,29,85,99,109,57,101,0,107,15,67,59,104,117,84,73,129,96,37,2,128,54,97,70,90,51,7,42,9,23,62,12,81,120,26,55,44,127,95,71,46,34,58,39,17}, // permutation 4
{34,24,119,126,109,16,85,23,5,40,21,65,31,49,110,33,74,0,13,106,56,117,86,100,47,54,3,95,14,123,127,99,71,22,18,46,51,64,70,120,67,88,37,25,59,107,29,113,76,6,36,116,84,42,131,39,7,41,57,27,72,83,73,98,94,60,122,52,53,112,115,50,4,38,26,15,82,111,44,10,66,11,125,8,28,101,43,118,92,20,130,35,80,79,105,93,55,2,91,129,97,75,90,89,32,103,61,77,30,87,62,17,104,48,9,114,1,81,108,68,63,45,12,58,78,121,128,69,124,19,96,102}, // permutation 5
{122,9,116,73,45,92,80,62,43,40,98,56,50,57,95,15,17,34,74,36,71,107,51,49,55,78,46,61,110,20,5,129,54,37,123,42,87,105,10,70,64,120,117,52,44,128,94,2,68,16,58,4,0,115,121,106,6,77,26,30,111,89,48,84,96,85,14,35,66,112,28,124,100,114,76,27,11,18,7,12,25,81,82,33,69,108,113,130,109,29,79,75,126,21,83,93,97,86,103,104,39,63,60,72,41,99,13,91,8,125,24,67,23,65,131,118,22,90,32,88,3,47,127,1,101,119,19,31,102,59,38,53}, // permutation 6
{119,35,33,69,20,17,82,62,120,12,70,56,1,74,53,130,93,39,87,127,13,110,28,95,22,46,92,75,80,72,42,50,27,11,114,123,15,24,19,73,83,122,16,30,34,100,115,76,109,40,54,126,29,113,89,65,101,9,103,47,97,48,111,36,14,2,124,8,81,108,98,128,25,106,102,117,43,125,79,44,23,5,49,18,0,71,84,37,96,55,4,121,129,91,63,60,104,61,52,67,68,41,64,88,112,51,32,77,90,66,6,7,57,26,10,38,116,31,21,3,107,85,78,86,99,118,59,131,105,94,45,58}, // permutation 7
{88,54,42,44,34,48,38,80,107,19,12,113,106,103,128,86,24,71,99,68,130,45,93,98,95,92,18,85,28,20,4,23,73,40,66,61,84,8,21,81,14,119,78,3,123,121,47,127,100,53,57,101,59,94,30,39,56,79,31,125,75,82,6,50,126,74,5,52,43,36,70,62,67,63,37,41,105,91,55,109,32,129,111,7,10,89,96,118,27,112,33,58,72,2,114,0,29,35,97,25,16,65,1,116,124,102,15,64,104,13,51,17,77,22,117,46,87,69,120,76,108,49,122,26,83,131,90,9,60,11,110,115}, // permutation 8
{123,89,72,117,18,96,9,21,80,60,7,104,14,64,86,49,61,83,79,95,38,84,15,122,113,114,127,69,46,111,0,57,19,102,35,81,70,62,50,109,77,87,71,55,118,76,5,110,63,120,97,103,28,23,92,78,42,43,59,45,66,52,85,131,44,98,119,100,129,82,116,56,88,125,27,53,36,47,126,10,75,58,1,112,101,99,67,39,106,105,2,121,37,16,8,54,130,26,94,25,3,24,91,29,6,31,40,73,51,115,12,30,13,107,90,4,20,34,17,74,93,11,33,65,68,32,124,108,128,22,48,41} // permutation 9
};

// Seed: 53

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
   int64_t  f0;
   volatile int32_t  f1;
   volatile uint32_t  f2;
   volatile uint32_t  f3;
   uint32_t  f4;
   volatile uint64_t  f5;
   int64_t  f6;
   int64_t  f7;
   volatile int64_t  f8;
};

struct S1 {
   int64_t  f0;
};

struct S2 {
    uint32_t g_11;
    int64_t g_31[2][3][5];
    int32_t g_57;
    uint16_t g_61;
    int32_t g_69[3][1];
    int32_t *g_68;
    struct S0 g_70[5][8][6];
    uint8_t g_73[3];
    uint32_t g_84;
    int32_t g_90[2][1];
    int32_t *g_91;
    int32_t **g_109[8];
    uint64_t g_132;
    int8_t g_153;
    int8_t *g_152;
    volatile uint32_t g_163;
    int64_t g_183;
    int32_t ** volatile g_235[8];
    int32_t ** volatile g_279[10][10][1];
    int32_t ** volatile g_280;
    int64_t g_312;
    int8_t g_330;
    struct S0 g_363[1][1];
    volatile uint8_t * volatile **g_391;
    int16_t g_403;
    uint16_t g_407;
    struct S1 g_428;
    struct S1 * volatile g_427[6];
    volatile struct S1 g_438;
    volatile struct S1 * volatile g_440;
    volatile struct S1 * volatile g_441;
    int64_t **g_444[3];
    int64_t *** volatile g_443;
    volatile struct S0 g_449;
    int32_t ** volatile g_494[5][9][5];
    int32_t ** volatile g_495[8][4][2];
    int32_t ** volatile g_514;
    struct S0 g_521;
    int32_t ** volatile g_522;
    volatile struct S0 g_528;
    volatile struct S0 * volatile g_529;
    int64_t g_536;
    int32_t ** volatile g_584;
    struct S0 g_642;
    volatile struct S0 g_651;
    struct S0 g_670;
    struct S0 *g_679;
    struct S0 **g_678;
    struct S0 g_721;
    int32_t g_727;
    int16_t *g_742;
    int16_t **g_741;
    uint64_t *g_802;
    uint64_t **g_801[2][10];
    int32_t ** volatile g_869[2][10];
    int32_t ** volatile g_870;
    volatile int32_t g_972;
    int64_t g_981;
    volatile uint32_t * volatile *g_1038;
    struct S0 g_1042[6];
    uint8_t g_1049;
    int32_t ** volatile g_1051;
    uint64_t g_1081;
    int32_t * volatile g_1091;
    int16_t g_1099;
    uint32_t *g_1121;
    uint32_t **g_1120;
    uint32_t ***g_1119;
    volatile int8_t * volatile *g_1155;
    volatile int8_t * volatile **g_1154;
    int32_t ** volatile g_1159;
    uint32_t *g_1162;
    int32_t ** volatile g_1193[3];
    int32_t ** volatile g_1194;
    struct S0 * volatile **g_1209[7];
    struct S0 * volatile ***g_1208;
    uint16_t g_1216[10][8][3];
    uint8_t *g_1258;
    uint8_t **g_1257;
    struct S0 g_1266;
    int32_t * volatile *g_1276[8][5];
    int32_t * volatile ** volatile g_1275;
    volatile struct S0 g_1281;
    struct S0 g_1284[2];
    int32_t ** volatile g_1304;
    uint16_t g_1335[7][5][7];
    struct S0 g_1342;
    volatile uint64_t g_1348[10];
    uint64_t g_1367;
    volatile struct S0 g_1380;
    uint16_t g_1428;
    uint64_t *g_1451;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
uint32_t  func_1(struct S2 * p_1467);
int64_t  func_4(int32_t  p_5, uint16_t  p_6, int16_t  p_7, uint64_t  p_8, uint64_t  p_9, struct S2 * p_1467);
uint64_t  func_12(int8_t  p_13, uint32_t  p_14, struct S2 * p_1467);
struct S1  func_15(uint8_t  p_16, int64_t  p_17, uint64_t  p_18, uint8_t  p_19, struct S2 * p_1467);
uint32_t  func_22(int64_t  p_23, uint8_t  p_24, uint8_t  p_25, struct S2 * p_1467);
uint8_t  func_26(int64_t  p_27, struct S2 * p_1467);
int32_t  func_32(int32_t  p_33, int64_t * p_34, int64_t * p_35, struct S2 * p_1467);
uint64_t  func_37(uint64_t  p_38, int32_t  p_39, int64_t * p_40, uint32_t  p_41, struct S2 * p_1467);
uint32_t  func_43(int64_t * p_44, int64_t * p_45, int8_t  p_46, uint32_t  p_47, uint16_t  p_48, struct S2 * p_1467);
int64_t * func_49(int64_t * p_50, int64_t * p_51, int64_t * p_52, uint16_t  p_53, struct S2 * p_1467);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_1467->l_comm_values p_1467->g_11 p_1467->g_comm_values p_1467->g_31 p_1467->g_61 p_1467->g_91 p_1467->g_152 p_1467->g_153 p_1467->g_363.f8 p_1467->g_84 p_1467->g_73 p_1467->g_70.f8 p_1467->g_391 p_1467->g_403 p_1467->g_330 p_1467->g_363.f7 p_1467->g_68 p_1467->g_90 p_1467->g_363.f2 p_1467->g_312 p_1467->g_407 p_1467->g_427 p_1467->g_132 p_1467->g_70.f0 p_1467->g_438 p_1467->g_441 p_1467->g_443 p_1467->g_449 p_1467->g_70.f1 p_1467->g_183 p_1467->g_69 p_1467->g_70.f6 p_1467->g_428.f0 p_1467->g_521.f4 p_1467->g_721 p_1467->g_679 p_1467->g_363 p_1467->g_642.f7 p_1467->g_642.f4 p_1467->g_521.f6 p_1467->g_584 p_1467->g_514 p_1467->g_801 p_1467->g_522 p_1467->g_802 p_1467->g_670.f6 p_1467->g_280 p_1467->g_642.f0 p_1467->g_870 p_1467->g_670.f0 p_1467->g_642.f2 p_1467->g_57 p_1467->g_670.f7 p_1467->g_1042.f6 p_1467->g_1081 p_1467->g_70.f4 p_1467->g_727 p_1467->g_670.f4 p_1467->g_642.f6 p_1467->g_1091 p_1467->g_521.f7 p_1467->g_651.f0 p_1467->g_981 p_1467->g_1049 p_1467->g_521.f0 p_1467->g_521.f1 p_1467->g_444 p_1467->g_1119 p_1467->g_1042.f2 p_1467->g_1120 p_1467->g_1154 p_1467->g_1159 p_1467->g_1121 p_1467->g_1042 p_1467->g_678 p_1467->g_1194 p_1467->g_1208 p_1467->g_1216 p_1467->g_1257 p_1467->g_1258 p_1467->g_1266 p_1467->g_1275 p_1467->g_1281 p_1467->g_1284 p_1467->g_651.f2 p_1467->g_1304 p_1467->g_670.f1 p_1467->g_1342 p_1467->g_1348 p_1467->g_1380 p_1467->g_1335 p_1467->g_528.f3 p_1467->g_521.f5 p_1467->g_1428 p_1467->g_1209 p_1467->g_651.f5 p_1467->g_1276
 * writes: p_1467->g_11 p_1467->g_31 p_1467->g_69 p_1467->g_73 p_1467->g_403 p_1467->g_61 p_1467->g_407 p_1467->g_132 p_1467->g_68 p_1467->g_438 p_1467->g_444 p_1467->g_363.f4 p_1467->g_428.f0 p_1467->g_521.f4 p_1467->g_642.f4 p_1467->g_312 p_1467->g_741 p_1467->g_521.f6 p_1467->g_84 p_1467->g_153 p_1467->g_801 p_1467->g_91 p_1467->g_670.f4 p_1467->g_721.f7 p_1467->g_57 p_1467->g_670.f7 p_1467->g_528.f7 p_1467->g_363 p_1467->g_1081 p_1467->g_521.f7 p_1467->g_1049 p_1467->g_1099 p_1467->g_521.f0 p_1467->g_1119 p_1467->g_183 p_1467->g_1121 p_1467->g_1162 p_1467->g_330 p_1467->g_642.f7 p_1467->g_670.f0 p_1467->g_1276 p_1467->g_1335 p_1467->g_1348 p_1467->g_1342.f7 p_1467->g_727 p_1467->g_1266.f4 p_1467->g_1451
 */
uint32_t  func_1(struct S2 * p_1467)
{ /* block id: 4 */
    int8_t l_10 = 1L;
    int64_t *l_30 = &p_1467->g_31[0][0][0];
    uint64_t *l_1080 = &p_1467->g_1081;
    int32_t *l_1101 = &p_1467->g_69[1][0];
    int32_t l_1112 = (-4L);
    uint32_t ***l_1126 = &p_1467->g_1120;
    uint32_t l_1156 = 0UL;
    int32_t l_1157 = 0x7DC42264L;
    int32_t l_1173 = 0x7F94DCDCL;
    int64_t l_1224 = 1L;
    int32_t l_1239[3];
    uint8_t **l_1279 = &p_1467->g_1258;
    int16_t l_1302 = 0x3818L;
    uint16_t l_1352 = 0x64C7L;
    uint8_t l_1387[6][10][3] = {{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}},{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}},{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}},{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}},{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}},{{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L},{255UL,0x3EL,0x03L}}};
    struct S1 l_1412 = {-4L};
    int32_t *l_1465 = &l_1239[0];
    int32_t **l_1466 = &l_1101;
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_1239[i] = (-1L);
    if (((safe_div_func_uint64_t_u_u(0x5425A80E3580D416L, func_4(p_1467->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1467->tid, 132))], l_10, (p_1467->g_11 |= 1L), ((*l_1080) |= func_12((func_15(p_1467->g_comm_values[p_1467->tid], (((safe_div_func_uint32_t_u_u(func_22(l_10, func_26(((*l_30) = ((safe_lshift_func_int8_t_s_u(l_10, 2)) && p_1467->g_comm_values[p_1467->tid])), p_1467), p_1467->g_642.f0, p_1467), l_10)) | l_10) & p_1467->g_721.f6), l_10, l_10, p_1467) , l_10), p_1467->g_1042[1].f6, p_1467)), p_1467->g_70[2][4][1].f4, p_1467))) == p_1467->g_727))
    { /* block id: 504 */
        int64_t l_1084 = 1L;
        return l_1084;
    }
    else
    { /* block id: 506 */
        uint32_t l_1086 = 0UL;
        int32_t *l_1092[10] = {&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57,&p_1467->g_57};
        uint32_t l_1115 = 4294967287UL;
        int64_t l_1152 = 8L;
        int32_t *l_1181 = &l_1112;
        uint64_t l_1185 = 0xC00E0EC6D8B754ADL;
        int32_t *l_1192 = &p_1467->g_57;
        int64_t l_1222 = 0x543D837639B5A5C8L;
        int64_t *l_1280 = &p_1467->g_363[0][0].f6;
        int64_t *l_1282 = (void*)0;
        int8_t **l_1283 = &p_1467->g_152;
        int16_t l_1300 = (-3L);
        uint32_t *l_1301 = &p_1467->g_11;
        uint8_t l_1306[9][2] = {{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL},{7UL,7UL}};
        uint16_t l_1336 = 0UL;
        int32_t *l_1341 = &p_1467->g_57;
        uint32_t l_1343[3][8] = {{0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L},{0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L},{0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L,0xBD22B3D1L}};
        struct S1 l_1374 = {0x71A3E869A2696895L};
        uint16_t l_1426[6][8][1] = {{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}},{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}},{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}},{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}},{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}},{{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL},{0x7D1AL}}};
        int32_t l_1463 = (-1L);
        int i, j, k;
        for (p_1467->g_670.f4 = 0; (p_1467->g_670.f4 <= 1); p_1467->g_670.f4 += 1)
        { /* block id: 509 */
            int16_t l_1085[4];
            int16_t *l_1090 = &p_1467->g_403;
            int32_t l_1094 = 0x21E5E3EBL;
            int32_t l_1113 = 0x7EC3D725L;
            int32_t l_1114 = 0x257982C8L;
            uint64_t l_1125 = 1UL;
            int i;
            for (i = 0; i < 4; i++)
                l_1085[i] = (-1L);
            (*p_1467->g_1091) = (((*p_1467->g_802) = l_1085[2]) & ((((*l_1090) = ((l_1086 , (safe_unary_minus_func_uint64_t_u(((((*p_1467->g_152) = l_10) , (l_10 < ((safe_add_func_uint16_t_u_u(65535UL, 0x0ACCL)) ^ l_10))) == ((l_10 < ((void*)0 != &p_1467->g_438)) != FAKE_DIVERGE(p_1467->group_0_offset, get_group_id(0), 10)))))) , 0x4571L)) != l_1086) ^ p_1467->g_642.f6));
            for (p_1467->g_521.f7 = 0; (p_1467->g_521.f7 <= 1); p_1467->g_521.f7 += 1)
            { /* block id: 516 */
                int32_t **l_1093 = &l_1092[6];
                (*l_1093) = l_1092[1];
                if ((&p_1467->g_68 == (void*)0))
                { /* block id: 518 */
                    uint8_t *l_1095 = &p_1467->g_73[1];
                    uint8_t *l_1096 = &p_1467->g_1049;
                    l_1094 ^= (p_1467->g_651.f0 && p_1467->g_981);
                    p_1467->g_1099 = (((*l_1095) ^= 0x23L) ^ (++(*l_1096)));
                    if (l_10)
                        break;
                }
                else
                { /* block id: 524 */
                    uint64_t l_1100 = 0xA5BC38A78AA62178L;
                    (*l_1093) = l_1092[4];
                    l_1100 = l_10;
                }
                (*l_1093) = (l_10 , l_1101);
                for (p_1467->g_521.f0 = 0; (p_1467->g_521.f0 <= 1); p_1467->g_521.f0 += 1)
                { /* block id: 531 */
                    int i, j, k;
                    l_1094 &= (safe_lshift_func_int8_t_s_s((((p_1467->g_31[p_1467->g_521.f0][(p_1467->g_670.f4 + 1)][p_1467->g_670.f4] || 0x99C3E380L) , p_1467->g_31[p_1467->g_670.f4][(p_1467->g_521.f7 + 1)][p_1467->g_521.f0]) < (((!(p_1467->g_31[p_1467->g_670.f4][(p_1467->g_670.f4 + 1)][(p_1467->g_521.f0 + 2)] < (l_1085[2] <= p_1467->g_521.f1))) <= 0L) > ((safe_mod_func_uint64_t_u_u((safe_lshift_func_uint8_t_u_s((safe_mul_func_uint16_t_u_u(((safe_mul_func_uint16_t_u_u((((void*)0 != &p_1467->g_742) != FAKE_DIVERGE(p_1467->local_2_offset, get_local_id(2), 10)), (*l_1101))) & (*l_1101)), p_1467->g_31[p_1467->g_670.f4][(p_1467->g_521.f7 + 1)][p_1467->g_521.f0])), 5)), (*l_1101))) & (*l_1101)))), 2));
                    ++l_1115;
                    (*l_1101) = ((*p_1467->g_443) == &l_30);
                }
            }
            for (p_1467->g_11 = 0; (p_1467->g_11 <= 1); p_1467->g_11 += 1)
            { /* block id: 539 */
                int32_t *l_1118 = &l_1112;
                for (p_1467->g_407 = 0; (p_1467->g_407 <= 1); p_1467->g_407 += 1)
                { /* block id: 542 */
                    uint32_t ****l_1122 = &p_1467->g_1119;
                    int i;
                    l_1092[5] = l_1118;
                    (*l_1118) ^= (((*l_1122) = p_1467->g_1119) == ((safe_mod_func_int64_t_s_s(l_1125, (*l_1101))) , l_1126));
                }
                return p_1467->g_70[2][4][1].f0;
            }
        }
lbl_1464:
        for (p_1467->g_183 = 0; (p_1467->g_183 <= 1); p_1467->g_183 += 1)
        { /* block id: 552 */
            int32_t l_1137[2];
            int32_t l_1153 = (-6L);
            int64_t *l_1178[7][5][6] = {{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}},{{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6},{&p_1467->g_363[0][0].f6,&p_1467->g_721.f7,&p_1467->g_521.f6,&p_1467->g_721.f6,&p_1467->g_1042[1].f0,&p_1467->g_721.f6}}};
            uint32_t l_1189 = 4294967287UL;
            int16_t **l_1221 = &p_1467->g_742;
            int16_t *l_1223 = &p_1467->g_1099;
            uint8_t *l_1256 = &p_1467->g_73[2];
            uint8_t **l_1255 = &l_1256;
            int32_t l_1264 = 0x0C5A5EA3L;
            int32_t l_1271 = 8L;
            uint64_t l_1272 = 0x4059F243A9620C62L;
            int i, j, k;
            for (i = 0; i < 2; i++)
                l_1137[i] = 0x4330C989L;
            if ((*l_1101))
                break;
            (*l_1101) = ((*p_1467->g_152) < (safe_rshift_func_int8_t_s_s((safe_add_func_int8_t_s_s((*p_1467->g_152), FAKE_DIVERGE(p_1467->global_2_offset, get_global_id(2), 10))), (p_1467->g_1042[1].f2 < (safe_rshift_func_uint16_t_u_u((safe_rshift_func_uint8_t_u_s((safe_div_func_int32_t_s_s(l_1137[1], (safe_add_func_uint16_t_u_u(((safe_rshift_func_int8_t_s_u((*p_1467->g_152), (l_1153 &= (safe_add_func_int32_t_s_s(((safe_lshift_func_uint16_t_u_u((safe_lshift_func_uint8_t_u_u((0xCEE2L & ((safe_add_func_int16_t_s_s((+((((safe_lshift_func_uint8_t_u_u(((*l_1101) ^ (((void*)0 != (*l_1126)) <= l_1137[1])), p_1467->g_70[2][4][1].f6)) | 0x21L) , 0x409BL) , (*l_1101))), p_1467->g_31[1][2][3])) > l_1152)), 3)), 0)) , l_1137[0]), l_1137[0]))))) || 0UL), FAKE_DIVERGE(p_1467->group_1_offset, get_group_id(1), 10))))), (*p_1467->g_152))), l_1137[1]))))));
            (*l_1101) &= 0x260F64CAL;
            if ((l_1157 = (((l_1112 &= ((*l_1101) = ((p_1467->g_1154 != (void*)0) , l_1156))) || p_1467->g_670.f7) >= l_1153)))
            { /* block id: 560 */
                int32_t **l_1158 = &l_1092[1];
                (*p_1467->g_1159) = ((*l_1158) = &l_1157);
            }
            else
            { /* block id: 563 */
                uint32_t l_1163 = 4294967295UL;
                int32_t l_1184[2][9] = {{0x57812895L,0x2868A739L,0x57812895L,0x57812895L,0x2868A739L,0x57812895L,0x57812895L,0x2868A739L,0x57812895L},{0x57812895L,0x2868A739L,0x57812895L,0x57812895L,0x2868A739L,0x57812895L,0x57812895L,0x2868A739L,0x57812895L}};
                int64_t *l_1197 = (void*)0;
                int i, j;
                if (l_1137[1])
                { /* block id: 564 */
                    uint32_t *l_1160 = (void*)0;
                    uint32_t **l_1161[5] = {&l_1160,&l_1160,&l_1160,&l_1160,&l_1160};
                    int i;
                    l_1153 = (((*p_1467->g_1120) = (*p_1467->g_1120)) != (p_1467->g_1162 = l_1160));
                    (*p_1467->g_280) = l_1092[1];
                }
                else
                { /* block id: 569 */
                    int16_t *l_1166 = &p_1467->g_1099;
                    int32_t l_1179 = 0L;
                    uint32_t *l_1180 = &l_1086;
                    int8_t l_1183[3][7][10] = {{{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)}},{{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)}},{{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)},{0L,7L,0L,0x68L,(-1L),0L,(-6L),7L,0x3CL,(-7L)}}};
                    int32_t l_1188 = (-1L);
                    int i, j, k;
                    l_1153 |= l_1163;
                    if ((0x5F93FB442AC3F2B4L <= ((p_1467->g_73[1] = (safe_mod_func_int32_t_s_s((((!(((*l_1166) = (*l_1101)) , (((*l_1180) = (((5L ^ (p_1467->g_449.f2 >= ((void*)0 == &p_1467->g_153))) <= (((((safe_mul_func_uint8_t_u_u((((safe_mul_func_int16_t_s_s((l_1173 || GROUP_DIVERGE(0, 1)), (safe_mul_func_uint8_t_u_u((safe_lshift_func_uint8_t_u_u(((253UL < (l_1137[0] & 0x54276C16D55AD07DL)) & 7L), (*l_1101))), p_1467->g_comm_values[p_1467->tid])))) , (void*)0) == l_1178[2][3][0]), p_1467->g_403)) < 4L) , l_1179) , l_1163) && l_1153)) == l_1179)) & l_1163))) , l_1137[1]) >= 0L), (-1L)))) || l_1163)))
                    { /* block id: 574 */
                        int32_t **l_1182 = &p_1467->g_91;
                        (*l_1182) = l_1181;
                        l_1185++;
                        (*l_1182) = l_1092[1];
                    }
                    else
                    { /* block id: 578 */
                        int i;
                        --l_1189;
                        if (l_1189)
                            break;
                        (**p_1467->g_678) = p_1467->g_1042[(p_1467->g_183 + 2)];
                        (*p_1467->g_1194) = l_1192;
                    }
                    for (p_1467->g_521.f7 = 1; (p_1467->g_521.f7 >= 0); p_1467->g_521.f7 -= 1)
                    { /* block id: 586 */
                        int16_t ***l_1219 = &p_1467->g_741;
                        int16_t ***l_1220[4][7][8] = {{{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0}},{{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0}},{{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0}},{{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0},{&p_1467->g_741,&p_1467->g_741,&p_1467->g_741,(void*)0,(void*)0,&p_1467->g_741,&p_1467->g_741,(void*)0}}};
                        int8_t *l_1225 = &p_1467->g_330;
                        int i, j, k;
                        (*l_1192) ^= (safe_mul_func_uint16_t_u_u(((l_1197 != (void*)0) , ((safe_sub_func_int32_t_s_s((safe_sub_func_int8_t_s_s((*p_1467->g_152), ((*l_1225) &= (safe_rshift_func_uint8_t_u_u((safe_lshift_func_int8_t_s_u(((safe_add_func_int32_t_s_s(((void*)0 == p_1467->g_1208), (((safe_mul_func_uint16_t_u_u(FAKE_DIVERGE(p_1467->local_1_offset, get_local_id(1), 10), GROUP_DIVERGE(0, 1))) ^ ((((safe_mul_func_int8_t_s_s(((((((safe_mul_func_int16_t_s_s((l_1188 = (~p_1467->g_1216[8][2][0])), ((safe_rshift_func_uint8_t_u_s(GROUP_DIVERGE(1, 1), ((l_1221 = &p_1467->g_742) != (void*)0))) != l_1222))) <= (-1L)) , (*l_1181)) ^ (*p_1467->g_802)) , &p_1467->g_403) == l_1223), 0x61L)) < l_1224) & 0x5BL) , l_1183[2][0][6])) , l_1189))) && p_1467->g_90[0][0]), 1)), 0))))), (*p_1467->g_1091))) | (-1L))), 0x97FAL));
                    }
                }
                for (p_1467->g_642.f7 = 0; p_1467->g_642.f7 < 1; p_1467->g_642.f7 += 1)
                {
                    for (l_1152 = 0; l_1152 < 1; l_1152 += 1)
                    {
                        struct S0 tmp = {{0x23D2980984DC4E53L,9L,0x7398729AL,0xB1D58187L,4294967288UL,1UL,-3L,0L,0x4CFD356A79B73453L}};
                        p_1467->g_363[p_1467->g_642.f7][l_1152] = tmp;
                    }
                }
            }
            for (p_1467->g_330 = 1; (p_1467->g_330 >= 0); p_1467->g_330 -= 1)
            { /* block id: 597 */
                uint32_t l_1231 = 4294967295UL;
                int32_t *l_1241 = &p_1467->g_69[2][0];
                uint64_t l_1259 = 1UL;
                int32_t l_1267 = 0x257A630FL;
                int32_t l_1268 = (-1L);
                int8_t l_1269 = 0L;
                for (p_1467->g_670.f0 = 0; (p_1467->g_670.f0 <= 1); p_1467->g_670.f0 += 1)
                { /* block id: 600 */
                    int32_t l_1236[10] = {(-1L),0x46CD42B3L,(-1L),(-1L),0x46CD42B3L,(-1L),(-1L),0x46CD42B3L,(-1L),(-1L)};
                    int32_t l_1240 = 0x16036BCEL;
                    int i;
                    for (p_1467->g_670.f4 = 0; (p_1467->g_670.f4 <= 1); p_1467->g_670.f4 += 1)
                    { /* block id: 603 */
                        int32_t l_1226 = (-2L);
                        int i, j, k;
                        if (l_1226)
                            break;
                    }
                    (*l_1192) ^= ((safe_rshift_func_uint8_t_u_s((l_1181 == ((((*l_1101) && (((safe_rshift_func_int16_t_s_s(l_1231, (l_1240 &= ((safe_lshift_func_int16_t_s_u(((p_1467->g_449.f5 < (l_1231 || ((safe_div_func_int64_t_s_s((!(+((-2L) | l_1236[2]))), ((l_1236[2] == ((safe_mod_func_int64_t_s_s((((1UL ^ l_1231) , l_1239[0]) , (*l_1101)), (*p_1467->g_802))) || 65535UL)) , (*l_1181)))) >= l_1236[2]))) >= l_1231), 3)) | l_1189)))) == p_1467->g_1216[2][3][0]) >= 3UL)) , GROUP_DIVERGE(0, 1)) , l_1241)), (*p_1467->g_152))) , (*l_1241));
                    if (l_1137[1])
                        continue;
                }
                for (p_1467->g_1081 = 0; (p_1467->g_1081 <= 1); p_1467->g_1081 += 1)
                { /* block id: 612 */
                    uint8_t *l_1246 = &p_1467->g_1049;
                    int32_t l_1265 = 0x3D05C874L;
                    int32_t l_1270 = 0x412D7795L;
                    int i, j, k;
                    (*p_1467->g_679) = ((l_1265 &= ((safe_div_func_uint8_t_u_u(((*l_1246)--), (safe_lshift_func_uint8_t_u_u(((GROUP_DIVERGE(2, 1) & (safe_rshift_func_int16_t_s_s((p_1467->g_721.f1 > (*l_1101)), ((((safe_add_func_uint64_t_u_u((((*l_1101) , l_1255) == p_1467->g_1257), (p_1467->g_1081 != (((l_1259 || (((safe_div_func_uint64_t_u_u((((*l_1181) ^ (safe_sub_func_uint16_t_u_u((((*p_1467->g_1258) >= (*p_1467->g_152)) <= 0L), l_1137[0]))) <= 1UL), (*l_1181))) > l_1264) >= (*l_1101))) != 0x317959F5A1262DA7L) != (*p_1467->g_152))))) & p_1467->g_521.f4) >= (-1L)) || 0x26652DF7FE2CA38AL)))) || (*l_1241)), (*p_1467->g_1258))))) ^ 0L)) , p_1467->g_1266);
                    l_1272--;
                    (*p_1467->g_1275) = &p_1467->g_1091;
                }
            }
        }
        (*l_1101) &= ((safe_lshift_func_int8_t_s_u(0x05L, ((*l_1181) == (GROUP_DIVERGE(1, 1) , (((l_1279 == (void*)0) || ((l_1280 == (l_1282 = (p_1467->g_1281 , l_30))) , ((l_1283 == (void*)0) , (*l_1192)))) , 6L))))) == GROUP_DIVERGE(1, 1));
        for (l_1185 = 0; (l_1185 <= 2); l_1185 += 1)
        { /* block id: 625 */
            int8_t l_1293[5][8][3] = {{{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)}},{{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)}},{{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)}},{{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)}},{{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)},{0x1EL,0x1EL,(-8L)}}};
            int32_t l_1305[2][9] = {{(-8L),(-2L),(-8L),(-8L),(-2L),(-8L),(-8L),(-2L),(-8L)},{(-8L),(-2L),(-8L),(-8L),(-2L),(-8L),(-8L),(-2L),(-8L)}};
            uint32_t l_1317 = 1UL;
            uint32_t **l_1337 = &l_1301;
            int64_t l_1371 = 0x66E24A11AFC73948L;
            int32_t *l_1377[7][7];
            uint64_t l_1408 = 18446744073709551615UL;
            int32_t l_1429 = 0x1BC62F75L;
            uint32_t l_1433 = 1UL;
            int i, j, k;
            for (i = 0; i < 7; i++)
            {
                for (j = 0; j < 7; j++)
                    l_1377[i][j] = &l_1239[0];
            }
            for (p_1467->g_521.f6 = 0; (p_1467->g_521.f6 <= 2); p_1467->g_521.f6 += 1)
            { /* block id: 628 */
                uint32_t *l_1294[10][5] = {{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0},{&l_1086,(void*)0,(void*)0,&l_1086,(void*)0}};
                int32_t l_1299 = 3L;
                uint64_t *l_1332 = (void*)0;
                int32_t l_1338 = 0x50115868L;
                int16_t l_1379[3];
                int i, j;
                for (i = 0; i < 3; i++)
                    l_1379[i] = 0x3DDCL;
                if (((p_1467->g_1284[0] , ((safe_sub_func_int16_t_s_s(((((((((p_1467->g_84 &= ((safe_add_func_int32_t_s_s((!0L), (((safe_mod_func_int32_t_s_s((safe_lshift_func_uint8_t_u_s(l_1293[0][3][2], 3)), (p_1467->g_11++))) , ((*l_30) &= ((safe_add_func_uint16_t_u_u(GROUP_DIVERGE(1, 1), p_1467->g_651.f2)) , ((-1L) >= (&l_1156 != (l_1293[0][6][2] , (((*p_1467->g_1258) ^= ((l_1299 & 0x040412BBCF1C1CC8L) >= l_1300)) , (void*)0))))))) <= l_1293[3][3][0]))) != (*p_1467->g_152))) ^ 1UL) , l_1301) == (void*)0) != 0x36L) , l_1302) & (*l_1101)) > p_1467->g_670.f6), 0x1C99L)) >= l_1293[0][3][2])) != 0x61D85121379794D7L))
                { /* block id: 633 */
                    int32_t *l_1303[5] = {&l_1239[1],&l_1239[1],&l_1239[1],&l_1239[1],&l_1239[1]};
                    int i;
                    for (p_1467->g_57 = 0; (p_1467->g_57 <= 2); p_1467->g_57 += 1)
                    { /* block id: 636 */
                        int32_t l_1329 = 0x23587ACFL;
                        int64_t *l_1333 = &l_1152;
                        uint16_t *l_1334[3];
                        int i;
                        for (i = 0; i < 3; i++)
                            l_1334[i] = (void*)0;
                        (*p_1467->g_1304) = l_1303[1];
                        l_1306[6][1]--;
                        l_1338 |= (((((**l_1279) ^= ((((((safe_div_func_uint64_t_u_u(((safe_div_func_uint16_t_u_u(((safe_sub_func_int64_t_s_s((safe_mul_func_uint8_t_u_u(l_1317, (safe_rshift_func_uint16_t_u_s((((*l_1181) != ((safe_add_func_uint32_t_u_u((safe_mul_func_int8_t_s_s((*p_1467->g_152), (((safe_lshift_func_int16_t_s_s((safe_unary_minus_func_int64_t_s(0L)), 7)) < (0x72B8203FL ^ p_1467->g_670.f1)) <= ((-8L) <= ((safe_rshift_func_uint16_t_u_s((p_1467->g_1335[1][1][3] = (l_1329 < ((((((safe_mul_func_uint16_t_u_u((l_1293[0][3][2] , p_1467->g_363[0][0].f4), l_1299)) , l_1080) == l_1332) , l_1333) != (void*)0) >= 0x30184B1FL))), 2)) <= GROUP_DIVERGE(1, 1)))))), (*l_1192))) == (*l_1101))) > (-7L)), 5)))), l_1336)) ^ (*p_1467->g_152)), 0xC7BFL)) || 1L), 3L)) >= (*l_1101)) , FAKE_DIVERGE(p_1467->global_2_offset, get_global_id(2), 10)) ^ (*l_1101)) , l_1337) == &l_1301)) && l_1317) && 0x08E68CD4L) != 0x9D4CCC48C9822647L);
                    }
                    for (p_1467->g_84 = 19; (p_1467->g_84 >= 1); p_1467->g_84 = safe_sub_func_int64_t_s_s(p_1467->g_84, 7))
                    { /* block id: 645 */
                        l_1341 = (void*)0;
                        (**p_1467->g_678) = p_1467->g_1342;
                    }
                    --l_1343[0][0];
                }
                else
                { /* block id: 650 */
                    int16_t l_1361 = (-4L);
                    for (l_1300 = 0; (l_1300 == 14); l_1300 = safe_add_func_uint8_t_u_u(l_1300, 7))
                    { /* block id: 653 */
                        uint64_t *l_1366 = &p_1467->g_1367;
                        int32_t l_1370 = 2L;
                        struct S1 l_1372 = {0x5D0D45ECC55A75D7L};
                        struct S1 *l_1373 = (void*)0;
                        struct S1 **l_1375 = &l_1373;
                        p_1467->g_1348[4]++;
                        l_1374 = l_1372;
                        (*l_1375) = (void*)0;
                    }
                    (*l_1181) = (*l_1101);
                    for (p_1467->g_407 = 0; (p_1467->g_407 <= 6); p_1467->g_407 += 1)
                    { /* block id: 663 */
                        int32_t **l_1376 = &l_1092[6];
                        (*l_1376) = l_1341;
                        l_1101 = l_1377[1][5];
                    }
                }
                if ((*l_1101))
                    continue;
                for (p_1467->g_57 = 1; (p_1467->g_57 >= 0); p_1467->g_57 -= 1)
                { /* block id: 671 */
                    int32_t l_1378 = (-1L);
                    int i, j;
                    l_1378 ^= ((*l_1101) = l_1306[p_1467->g_57][p_1467->g_57]);
                    l_1378 = ((*l_1181) = (GROUP_DIVERGE(1, 1) , l_1379[0]));
                }
                (*p_1467->g_679) = p_1467->g_1380;
            }
            for (p_1467->g_428.f0 = 7; (p_1467->g_428.f0 < 6); p_1467->g_428.f0 = safe_sub_func_int8_t_s_s(p_1467->g_428.f0, 4))
            { /* block id: 681 */
                uint8_t l_1395[7][6] = {{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL},{0xB8L,0xB8L,0x52L,0UL,255UL,0UL}};
                int8_t l_1413 = 0x5BL;
                int32_t l_1432 = 0x4F745CF5L;
                uint64_t *l_1450 = &p_1467->g_1081;
                int i, j;
                for (p_1467->g_1342.f7 = 14; (p_1467->g_1342.f7 < 11); p_1467->g_1342.f7--)
                { /* block id: 684 */
                    int16_t l_1389 = 0x5C22L;
                    int32_t l_1390 = (-1L);
                    int64_t l_1404[9] = {2L,(-5L),2L,2L,(-5L),2L,2L,(-5L),2L};
                    uint32_t ***l_1405 = &p_1467->g_1120;
                    struct S1 l_1411 = {0x4EEE6DA431915CD5L};
                    uint32_t l_1427[4] = {0x78EC391AL,0x78EC391AL,0x78EC391AL,0x78EC391AL};
                    int i;
                    for (p_1467->g_642.f7 = 0; (p_1467->g_642.f7 <= 2); p_1467->g_642.f7 += 1)
                    { /* block id: 687 */
                        (*l_1192) |= 0L;
                    }
                    if ((*p_1467->g_1091))
                    { /* block id: 690 */
                        int64_t *l_1388[3][7] = {{&l_1222,&p_1467->g_981,&p_1467->g_312,&l_1371,&p_1467->g_981,&l_1371,&p_1467->g_312},{&l_1222,&p_1467->g_981,&p_1467->g_312,&l_1371,&p_1467->g_981,&l_1371,&p_1467->g_312},{&l_1222,&p_1467->g_981,&p_1467->g_312,&l_1371,&p_1467->g_981,&l_1371,&p_1467->g_312}};
                        int32_t l_1391[10] = {9L,(-6L),9L,9L,(-6L),9L,9L,(-6L),9L,9L};
                        int32_t l_1392[8][1] = {{0L},{0L},{0L},{0L},{0L},{0L},{0L},{0L}};
                        uint16_t *l_1393 = &p_1467->g_407;
                        uint16_t *l_1394 = &p_1467->g_1335[1][1][3];
                        int i, j;
                        (*l_1101) = (((((((safe_div_func_uint32_t_u_u(((**l_1337) = (((*l_30) = (*l_1101)) & (l_1389 = l_1387[5][3][1]))), l_1390)) == ((l_1391[6] = 0x6CAEF40BE954692EL) != l_1392[5][0])) != (p_1467->g_1081 , ((((*l_1394) = ((*l_1393) = GROUP_DIVERGE(1, 1))) , (l_1390 , ((*l_1394) ^= (+(*l_1101))))) != l_1390))) ^ (*p_1467->g_802)) > l_1392[5][0]) >= (**p_1467->g_1257)) >= 0x3DE40415L);
                        if (l_1395[5][2])
                            break;
                    }
                    else
                    { /* block id: 700 */
                        uint64_t l_1406 = 0xBE6DCAA2BE3C18FBL;
                        int8_t *l_1407 = &l_10;
                        int32_t *l_1409 = &p_1467->g_727;
                        struct S1 l_1410 = {0L};
                        (*l_1181) &= (safe_add_func_uint8_t_u_u((((*l_1101) == ((safe_div_func_int8_t_s_s((((*l_1409) = (!((safe_rshift_func_int16_t_s_u(((safe_rshift_func_uint16_t_u_u(((l_1404[8] ^ (((*l_1407) = (((l_1374 , (-1L)) && ((((p_1467->g_1119 = l_1405) != (void*)0) > (((**l_1283) ^= 1L) ^ l_1406)) , (*l_1192))) > l_1395[5][2])) != l_1408)) , l_1395[1][1]), (*l_1101))) == FAKE_DIVERGE(p_1467->group_1_offset, get_group_id(1), 10)), p_1467->g_183)) && 0UL))) , l_1404[0]), 8L)) ^ 65535UL)) && p_1467->g_528.f3), l_1389));
                        (*p_1467->g_1194) = (p_1467->g_1042[1].f5 , &l_1390);
                        (*p_1467->g_91) ^= ((l_1406 && ((*p_1467->g_802) , ((l_1412 = (l_1411 = l_1410)) , (!l_1413)))) , ((((void*)0 == &p_1467->g_727) ^ (p_1467->g_521.f5 > ((safe_mod_func_uint16_t_u_u(((**p_1467->g_1257) > ((safe_mod_func_int8_t_s_s(((safe_mul_func_int8_t_s_s(((safe_rshift_func_int8_t_s_s((safe_div_func_uint8_t_u_u(((!(safe_mod_func_uint32_t_u_u(l_1426[3][7][0], l_1395[5][2]))) < 0x289B8B23L), (*p_1467->g_152))), (*p_1467->g_152))) > 0x45091F48L), l_1404[5])) || l_1427[1]), p_1467->g_1428)) < l_1389)), l_1429)) <= 0x214C32C7692AE4A3L))) > 0x34616A9FA155CFC6L));
                        (*l_1101) ^= (safe_lshift_func_uint16_t_u_u(GROUP_DIVERGE(0, 1), 1));
                    }
                    ++l_1433;
                }
                for (p_1467->g_1266.f4 = 0; (p_1467->g_1266.f4 >= 35); p_1467->g_1266.f4 = safe_add_func_int32_t_s_s(p_1467->g_1266.f4, 1))
                { /* block id: 716 */
                    int16_t l_1446[8];
                    int32_t l_1458 = (-3L);
                    int32_t l_1459 = (-6L);
                    uint32_t *l_1460 = (void*)0;
                    int i;
                    for (i = 0; i < 8; i++)
                        l_1446[i] = 0L;
                    for (l_1336 = 0; (l_1336 <= 1); l_1336 += 1)
                    { /* block id: 719 */
                        uint64_t **l_1449[10];
                        struct S0 ***l_1457 = &p_1467->g_678;
                        struct S0 ****l_1456 = &l_1457;
                        int i;
                        for (i = 0; i < 10; i++)
                            l_1449[i] = &l_1080;
                        (*p_1467->g_679) = p_1467->g_1042[(l_1185 + 2)];
                        (*l_1192) |= ((((**p_1467->g_1119) = ((safe_mul_func_int8_t_s_s(((*l_1101) && p_1467->g_1042[(l_1185 + 2)].f3), ((safe_div_func_int8_t_s_s((65535UL & (((*l_1301) = ((~(safe_mul_func_uint8_t_u_u((((((safe_add_func_uint16_t_u_u((+((l_1446[0] = (-5L)) && (safe_sub_func_int16_t_s_s((l_1280 == (p_1467->g_1451 = (l_1450 = &p_1467->g_1081))), p_1467->g_1216[8][2][0])))), (safe_mul_func_int16_t_s_s(((safe_lshift_func_int8_t_s_s((((*l_1456) = &p_1467->g_678) == (*p_1467->g_1208)), 6)) < l_1458), p_1467->g_1266.f4)))) <= l_1458) > (-6L)) || 0x6601FE71L) & l_1459), p_1467->g_1042[(l_1185 + 2)].f0))) != 0x135D9C29L)) == l_1395[5][2])), (*p_1467->g_152))) && 0x61D2L))) , l_1460)) == (void*)0) & 0x6F604116L);
                    }
                }
                for (p_1467->g_642.f7 = 0; (p_1467->g_642.f7 > 26); ++p_1467->g_642.f7)
                { /* block id: 732 */
                    return p_1467->g_651.f5;
                }
            }
            (*l_1101) &= ((l_1463 , (*p_1467->g_1275)) != &l_1101);
            if (p_1467->g_61)
                goto lbl_1464;
        }
    }
    (*l_1466) = l_1465;
    (*l_1465) &= (!0x736EC6B6L);
    return p_1467->g_1380.f0;
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_91
 * writes: p_1467->g_57 p_1467->g_91
 */
int64_t  func_4(int32_t  p_5, uint16_t  p_6, int16_t  p_7, uint64_t  p_8, uint64_t  p_9, struct S2 * p_1467)
{ /* block id: 500 */
    int16_t l_1082 = 0x1996L;
    int32_t **l_1083 = &p_1467->g_91;
    (*p_1467->g_91) = l_1082;
    (*l_1083) = (void*)0;
    return p_7;
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_73
 * writes: p_1467->g_428.f0 p_1467->g_528.f7 p_1467->g_363
 */
uint64_t  func_12(int8_t  p_13, uint32_t  p_14, struct S2 * p_1467)
{ /* block id: 496 */
    for (p_1467->g_428.f0 = 0; p_1467->g_428.f0 < 1; p_1467->g_428.f0 += 1)
    {
        for (p_1467->g_528.f7 = 0; p_1467->g_528.f7 < 1; p_1467->g_528.f7 += 1)
        {
            struct S0 tmp = {{0x7D0F16BB8DEDA6D5L,0x39BDD2E4L,0x7985AEF0L,0x3D226ED7L,4294967295UL,0xE68C82CEDD6ACD3BL,1L,-3L,4L}};
            p_1467->g_363[p_1467->g_428.f0][p_1467->g_528.f7] = tmp;
        }
    }
    return p_1467->g_73[2];
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_802 p_1467->g_132 p_1467->g_280 p_1467->g_91 p_1467->g_57 p_1467->g_152 p_1467->g_153 p_1467->g_363.f0 p_1467->g_69
 * writes: p_1467->g_132 p_1467->g_69
 */
struct S1  func_15(uint8_t  p_16, int64_t  p_17, uint64_t  p_18, uint8_t  p_19, struct S2 * p_1467)
{ /* block id: 491 */
    uint8_t l_1073 = 2UL;
    uint32_t *l_1076 = (void*)0;
    int32_t l_1077 = (-8L);
    int32_t *l_1078 = &p_1467->g_69[2][0];
    struct S1 l_1079 = {0x174D8E8D4CB77AF8L};
    (*l_1078) |= (((*p_1467->g_802)--) | (((safe_rshift_func_uint16_t_u_u((((safe_lshift_func_int16_t_s_u((6L && l_1073), 7)) ^ ((l_1077 ^= (safe_sub_func_uint32_t_u_u(0UL, (**p_1467->g_280)))) , (*p_1467->g_152))) != p_18), 10)) | 9L) <= ((~(p_1467->g_363[0][0].f0 == 0L)) == 0UL)));
    return l_1079;
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_870 p_1467->g_721.f7 p_1467->g_670.f0 p_1467->g_438.f0 p_1467->g_69 p_1467->g_comm_values p_1467->g_642.f2 p_1467->g_90 p_1467->g_91 p_1467->g_57 p_1467->g_84 p_1467->g_670.f7
 * writes: p_1467->g_91 p_1467->g_721.f7 p_1467->g_57 p_1467->g_31 p_1467->g_69 p_1467->g_84 p_1467->g_670.f7
 */
uint32_t  func_22(int64_t  p_23, uint8_t  p_24, uint8_t  p_25, struct S2 * p_1467)
{ /* block id: 410 */
    int32_t *l_868 = &p_1467->g_57;
    int8_t **l_885 = &p_1467->g_152;
    int32_t l_891 = 0x7A51DB30L;
    struct S0 **l_903 = &p_1467->g_679;
    int64_t l_906 = 0x17FA9EF19F6F4012L;
    int8_t ***l_910 = &l_885;
    uint32_t **l_943 = (void*)0;
    int32_t l_969 = (-2L);
    int32_t l_975 = 1L;
    int32_t l_976 = 8L;
    int32_t l_983 = 0x135DDA60L;
    int32_t l_986 = (-4L);
    int16_t l_987 = 0x1A3FL;
    int32_t l_988 = (-1L);
    int32_t l_989[10] = {0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L,0x47F15F13L};
    int8_t l_1066[3];
    int i;
    for (i = 0; i < 3; i++)
        l_1066[i] = 1L;
    (*p_1467->g_870) = l_868;
    for (p_1467->g_721.f7 = 3; (p_1467->g_721.f7 > (-28)); --p_1467->g_721.f7)
    { /* block id: 414 */
        int32_t l_888[8] = {1L,1L,1L,1L,1L,1L,1L,1L};
        uint8_t *l_889[7][3] = {{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]},{(void*)0,&p_1467->g_73[1],&p_1467->g_73[1]}};
        int64_t *l_890 = &p_1467->g_31[0][0][0];
        int32_t *l_892 = &l_888[3];
        int32_t *l_893 = (void*)0;
        int32_t *l_894 = &p_1467->g_69[0][0];
        int8_t **l_949 = &p_1467->g_152;
        int16_t l_952 = 0x74DBL;
        struct S1 l_1061 = {0L};
        struct S1 *l_1062 = &l_1061;
        int i, j;
        (*l_894) ^= ((*l_892) = ((safe_div_func_int64_t_s_s(0x580A2C228A97D4D3L, ((*l_890) = (safe_div_func_int64_t_s_s(((safe_sub_func_uint32_t_u_u((safe_sub_func_int32_t_s_s(((((safe_mul_func_uint8_t_u_u((((safe_rshift_func_uint8_t_u_u((1L | ((p_23 , l_885) != &p_1467->g_152)), (p_24 = ((((((*l_868) = p_23) != (safe_sub_func_int32_t_s_s((-2L), l_888[7]))) | p_1467->g_670.f0) , l_888[2]) , 0UL)))) >= p_23) ^ l_888[4]), 4UL)) | 0x15L) , p_23) , l_888[6]), p_23)), l_888[7])) ^ p_1467->g_438.f0), FAKE_DIVERGE(p_1467->group_1_offset, get_group_id(1), 10)))))) | l_891));
        (*p_1467->g_91) &= (safe_mul_func_uint8_t_u_u(0xACL, (((safe_mul_func_int16_t_s_s((((safe_sub_func_int16_t_s_s(((!(safe_sub_func_int64_t_s_s((*l_892), 0L))) ^ (&p_1467->g_679 == l_903)), p_1467->g_comm_values[p_1467->tid])) , ((*l_894) = p_23)) ^ ((safe_div_func_uint32_t_u_u(l_906, p_1467->g_642.f2)) ^ p_1467->g_90[1][0])), 0x5BB0L)) || (*l_892)) ^ FAKE_DIVERGE(p_1467->local_1_offset, get_local_id(1), 10))));
        for (p_1467->g_84 = 16; (p_1467->g_84 < 21); p_1467->g_84 = safe_add_func_uint32_t_u_u(p_1467->g_84, 9))
        { /* block id: 424 */
            int8_t ***l_909 = &l_885;
            int32_t l_927 = 0L;
            uint32_t *l_945 = &p_1467->g_521.f4;
            int32_t l_968 = 1L;
            int32_t l_971[8][1] = {{0x1283907BL},{0x1283907BL},{0x1283907BL},{0x1283907BL},{0x1283907BL},{0x1283907BL},{0x1283907BL},{0x1283907BL}};
            struct S1 l_1028 = {-3L};
            uint64_t l_1058 = 1UL;
            int i, j;
            (1 + 1);
        }
        (*l_1062) = l_1061;
    }
    for (p_1467->g_670.f7 = (-10); (p_1467->g_670.f7 <= (-25)); p_1467->g_670.f7 = safe_sub_func_uint64_t_u_u(p_1467->g_670.f7, 3))
    { /* block id: 487 */
        int32_t *l_1065 = &l_975;
        l_1065 = l_1065;
    }
    return l_1066[0];
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->l_comm_values p_1467->g_31 p_1467->g_61 p_1467->g_91 p_1467->g_comm_values p_1467->g_152 p_1467->g_153 p_1467->g_363.f8 p_1467->g_84 p_1467->g_73 p_1467->g_70.f8 p_1467->g_391 p_1467->g_403 p_1467->g_330 p_1467->g_363.f7 p_1467->g_68 p_1467->g_90 p_1467->g_363.f2 p_1467->g_312 p_1467->g_407 p_1467->g_427 p_1467->g_132 p_1467->g_70.f0 p_1467->g_438 p_1467->g_441 p_1467->g_443 p_1467->g_449 p_1467->g_70.f1 p_1467->g_183 p_1467->g_69 p_1467->g_70.f6 p_1467->g_428.f0 p_1467->g_521.f4 p_1467->g_721 p_1467->g_679 p_1467->g_363 p_1467->g_642.f7 p_1467->g_642.f4 p_1467->g_521.f6 p_1467->g_584 p_1467->g_514 p_1467->g_801 p_1467->g_522 p_1467->g_802 p_1467->g_670.f6 p_1467->g_280
 * writes: p_1467->g_69 p_1467->g_73 p_1467->g_403 p_1467->g_61 p_1467->g_407 p_1467->g_132 p_1467->g_68 p_1467->g_438 p_1467->g_444 p_1467->g_363.f4 p_1467->g_428.f0 p_1467->g_521.f4 p_1467->g_31 p_1467->g_642.f4 p_1467->g_312 p_1467->g_741 p_1467->g_521.f6 p_1467->g_84 p_1467->g_153 p_1467->g_801 p_1467->g_91 p_1467->g_670.f4
 */
uint8_t  func_26(int64_t  p_27, struct S2 * p_1467)
{ /* block id: 7 */
    int64_t *l_36 = &p_1467->g_31[1][2][3];
    int64_t *l_42 = &p_1467->g_31[0][0][0];
    int64_t *l_54 = &p_1467->g_31[0][0][0];
    int32_t l_432 = 0L;
    int16_t l_433 = (-5L);
    int64_t *l_447[6] = {&p_1467->g_312,&p_1467->g_312,&p_1467->g_312,&p_1467->g_312,&p_1467->g_312,&p_1467->g_312};
    int32_t l_867 = 0x4A38A2D9L;
    int i;
    l_867 ^= func_32((l_36 == &p_1467->g_31[0][0][0]), ((func_37(p_1467->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1467->tid, 132))], p_27, l_42, func_43(func_49(l_54, l_54, &p_1467->g_31[0][0][0], p_1467->g_31[0][1][4], p_1467), &p_1467->g_183, l_432, l_433, p_1467->g_70[2][4][1].f0, p_1467), p_1467) >= p_27) , l_54), l_447[4], p_1467);
    return p_1467->g_721.f5;
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_449 p_1467->g_70.f1 p_1467->g_comm_values p_1467->g_183 p_1467->g_69 p_1467->g_84 p_1467->g_70.f6 p_1467->g_91 p_1467->g_152 p_1467->g_153 p_1467->g_73 p_1467->l_comm_values p_1467->g_428.f0 p_1467->g_31 p_1467->g_521.f4 p_1467->g_721 p_1467->g_679 p_1467->g_363 p_1467->g_312 p_1467->g_642.f7 p_1467->g_642.f4 p_1467->g_521.f6 p_1467->g_403 p_1467->g_584 p_1467->g_68 p_1467->g_514 p_1467->g_801 p_1467->g_522 p_1467->g_438.f0 p_1467->g_802 p_1467->g_670.f6 p_1467->g_280
 * writes: p_1467->g_363.f4 p_1467->g_69 p_1467->g_73 p_1467->g_428.f0 p_1467->g_521.f4 p_1467->g_31 p_1467->g_642.f4 p_1467->g_312 p_1467->g_741 p_1467->g_521.f6 p_1467->g_403 p_1467->g_84 p_1467->g_153 p_1467->g_801 p_1467->g_91 p_1467->g_670.f4 p_1467->g_132
 */
int32_t  func_32(int32_t  p_33, int64_t * p_34, int64_t * p_35, struct S2 * p_1467)
{ /* block id: 202 */
    uint64_t l_448 = 18446744073709551615UL;
    uint32_t *l_460 = (void*)0;
    int32_t l_461 = 0x4B5BBBC5L;
    int64_t l_468[6][2] = {{(-9L),(-1L)},{(-9L),(-1L)},{(-9L),(-1L)},{(-9L),(-1L)},{(-9L),(-1L)},{(-9L),(-1L)}};
    struct S1 *l_471 = &p_1467->g_428;
    int32_t l_474 = (-1L);
    int32_t l_483 = 0x2292816EL;
    int32_t l_484[1][4];
    uint32_t l_485 = 1UL;
    int64_t l_510 = 0x29ECEACA403CABB0L;
    int64_t l_567 = 0x0B28479BE9FCD0AFL;
    uint8_t *l_623[10] = {&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1],&p_1467->g_73[1]};
    uint8_t **l_622 = &l_623[1];
    uint8_t ***l_621 = &l_622;
    int64_t *l_728 = (void*)0;
    struct S0 ***l_734 = (void*)0;
    int32_t l_760 = 0x4E465F8FL;
    int8_t **l_835 = &p_1467->g_152;
    int8_t **l_836 = &p_1467->g_152;
    int32_t *l_863[10];
    uint32_t l_864[4];
    int i, j;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 4; j++)
            l_484[i][j] = 6L;
    }
    for (i = 0; i < 10; i++)
        l_863[i] = &l_474;
    for (i = 0; i < 4; i++)
        l_864[i] = 0xA90D0DD1L;
lbl_862:
    if (l_448)
    { /* block id: 203 */
        int32_t l_458 = 4L;
        uint32_t *l_459[2];
        uint32_t *l_466 = (void*)0;
        uint32_t **l_467 = &l_466;
        uint8_t *l_469[8] = {&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2],&p_1467->g_73[2]};
        int32_t l_470 = 0x5976F123L;
        int32_t l_479[3];
        int32_t *l_480 = &p_1467->g_57;
        int32_t *l_481 = (void*)0;
        int32_t *l_482[8][6][5] = {{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}},{{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]},{&l_461,&l_470,&l_461,&l_474,&p_1467->g_69[2][0]}}};
        int i, j, k;
        for (i = 0; i < 2; i++)
            l_459[i] = (void*)0;
        for (i = 0; i < 3; i++)
            l_479[i] = 6L;
        (*p_1467->g_91) = ((l_460 = ((p_1467->g_363[0][0].f4 = ((((p_34 == (p_1467->g_449 , (void*)0)) , (((safe_mul_func_uint8_t_u_u((p_1467->g_70[2][4][1].f1 < (safe_add_func_int8_t_s_s(((p_1467->g_comm_values[p_1467->tid] && (~0x07DDD494L)) & p_1467->g_183), (safe_div_func_uint16_t_u_u((safe_mod_func_uint8_t_u_u(p_1467->g_comm_values[p_1467->tid], p_1467->g_69[2][0])), l_448))))), p_1467->g_84)) != (-7L)) & l_448)) ^ l_458) , p_1467->g_70[2][4][1].f6)) , (void*)0)) != &p_1467->g_84);
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        p_1467->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 132)), permutations[(safe_mod_func_uint32_t_u_u(((l_461 , ((safe_add_func_int64_t_s_s((((safe_mul_func_int8_t_s_s(0x6BL, ((5L < ((l_459[0] = l_459[0]) != ((*l_467) = l_466))) ^ (l_470 &= l_468[2][0])))) , l_471) != ((!((((safe_add_func_int8_t_s_s((*p_1467->g_152), (++p_1467->g_73[1]))) || (safe_div_func_uint32_t_u_u(p_33, 5L))) && p_33) >= 0x6DC296AF5F8B7990L)) , (void*)0)), p_1467->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1467->tid, 132))])) < l_474)) , l_458), 10))][(safe_mod_func_uint32_t_u_u(p_1467->tid, 132))]));
        ++l_485;
        for (p_1467->g_428.f0 = 0; (p_1467->g_428.f0 == (-25)); --p_1467->g_428.f0)
        { /* block id: 217 */
            uint32_t l_490 = 4294967295UL;
            uint8_t *l_511 = &p_1467->g_73[2];
            int32_t l_513 = (-1L);
            if (l_483)
                break;
            if (l_490)
                continue;
        }
    }
    else
    { /* block id: 245 */
        struct S1 l_541 = {9L};
        int32_t l_577[7] = {(-1L),(-1L),(-1L),(-1L),(-1L),(-1L),(-1L)};
        int32_t l_630 = (-1L);
        uint64_t *l_706 = &l_448;
        struct S1 **l_724[8][6] = {{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471},{&l_471,&l_471,&l_471,&l_471,&l_471,&l_471}};
        int64_t *l_729 = &p_1467->g_428.f0;
        uint32_t l_753[3][6] = {{4294967291UL,1UL,8UL,0x3B5C4D1CL,1UL,0x3B5C4D1CL},{4294967291UL,1UL,8UL,0x3B5C4D1CL,1UL,0x3B5C4D1CL},{4294967291UL,1UL,8UL,0x3B5C4D1CL,1UL,0x3B5C4D1CL}};
        int32_t *l_815 = (void*)0;
        int i, j;
        if ((safe_sub_func_int64_t_s_s((safe_rshift_func_uint16_t_u_s(l_468[2][0], 6)), (*p_34))))
        { /* block id: 246 */
            uint32_t l_542 = 0x0745909CL;
            int32_t l_544 = 0x53EA30B1L;
            int32_t l_566 = 0x200F4BD8L;
            uint8_t ***l_625 = &l_622;
            uint64_t **l_705 = (void*)0;
            struct S1 **l_725 = &l_471;
            int32_t *l_726[2][2];
            int32_t l_748 = 0x57A4282CL;
            int32_t l_752 = 5L;
            int32_t l_761 = 7L;
            int32_t l_762 = (-1L);
            int32_t l_763 = 0x478E3F5CL;
            int32_t l_764[1][9][6] = {{{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)},{(-6L),1L,(-6L),(-6L),1L,(-6L)}}};
            int i, j, k;
            for (i = 0; i < 2; i++)
            {
                for (j = 0; j < 2; j++)
                    l_726[i][j] = &p_1467->g_727;
            }
            for (p_1467->g_521.f4 = 0; (p_1467->g_521.f4 <= 0); p_1467->g_521.f4 += 1)
            { /* block id: 249 */
                int64_t l_543[1][4] = {{0L,0L,0L,0L}};
                int32_t l_550 = 0x5082E9DBL;
                int32_t l_578 = (-4L);
                int32_t l_579 = 0x61214B31L;
                int32_t l_580 = 9L;
                uint16_t l_581 = 0x86B0L;
                int32_t ***l_645[10] = {&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5],&p_1467->g_109[5]};
                uint32_t l_671 = 1UL;
                struct S1 l_674 = {0x10484CC0761BE87CL};
                uint16_t l_675 = 65535UL;
                struct S0 ***l_680 = &p_1467->g_678;
                struct S0 **l_682 = &p_1467->g_679;
                struct S0 ***l_681 = &l_682;
                int i, j;
                (1 + 1);
            }
            if (((((((*p_34) = (((GROUP_DIVERGE(0, 1) ^ 1L) | (&p_1467->g_132 != (l_706 = &l_448))) <= 0x66A5B1D8L)) > ((((safe_lshift_func_int16_t_s_u(((safe_div_func_uint64_t_u_u((((safe_mul_func_int16_t_s_s((safe_sub_func_uint64_t_u_u(((((l_544 = (safe_mul_func_uint16_t_u_u(((((l_728 = ((l_630 |= (safe_mul_func_uint16_t_u_u(l_577[4], ((9UL ^ (safe_rshift_func_uint8_t_u_u(FAKE_DIVERGE(p_1467->group_2_offset, get_group_id(2), 10), (p_1467->g_721 , ((((*p_1467->g_679) , ((safe_div_func_int16_t_s_s((((*p_35) , l_724[7][3]) == l_725), 0x215CL)) || p_33)) > p_33) < p_1467->g_642.f7))))) == GROUP_DIVERGE(1, 1))))) , l_728)) != l_729) || p_1467->g_521.f4) , 6UL), 65530UL))) <= 0x3E48C99E50F570D2L) , l_630) | p_33), 4L)), p_33)) , l_630) <= (-1L)), FAKE_DIVERGE(p_1467->global_2_offset, get_global_id(2), 10))) , 0L), 2)) & l_566) , 65534UL) != 65530UL)) == 0x54L) <= GROUP_DIVERGE(1, 1)) > 1UL))
            { /* block id: 339 */
                int16_t *l_739 = (void*)0;
                int16_t **l_738 = &l_739;
                int16_t ***l_740[9][7] = {{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,&l_738,&l_738,(void*)0,(void*)0,(void*)0,(void*)0}};
                int i, j;
                for (p_1467->g_642.f4 = (-1); (p_1467->g_642.f4 > 3); p_1467->g_642.f4 = safe_add_func_int32_t_s_s(p_1467->g_642.f4, 9))
                { /* block id: 342 */
                    struct S0 ****l_735 = &l_734;
                    (*p_1467->g_91) ^= (safe_lshift_func_int8_t_s_u((((*p_35) = ((*p_34) = ((((*l_735) = l_734) != &p_1467->g_678) != (safe_mod_func_uint32_t_u_u(GROUP_DIVERGE(2, 1), ((l_577[4] & FAKE_DIVERGE(p_1467->group_1_offset, get_group_id(1), 10)) , 0x5C2E1844L)))))) != l_542), l_566));
                }
                p_1467->g_741 = l_738;
            }
            else
            { /* block id: 349 */
                int16_t l_747 = 1L;
                int32_t l_756 = 0x4514EDDEL;
                int32_t l_757 = 0x726FADFAL;
                int32_t l_758 = 0x68F1337DL;
                int32_t l_759 = 0x5343381AL;
                int32_t l_765 = 0x639C9FC2L;
                int32_t l_766 = 0x01FE1117L;
                int32_t l_798 = 0x7BD0C67FL;
                int32_t *l_812 = &p_1467->g_727;
                int64_t l_813 = 8L;
                for (p_1467->g_521.f6 = 1; (p_1467->g_521.f6 >= 0); p_1467->g_521.f6 -= 1)
                { /* block id: 352 */
                    int32_t l_746 = 0x78852401L;
                    int32_t l_749 = 0x5547D885L;
                    int32_t l_750 = (-1L);
                    int32_t l_751 = 0x0F1EE73FL;
                    for (p_1467->g_403 = 0; (p_1467->g_403 <= 2); p_1467->g_403 += 1)
                    { /* block id: 355 */
                        int32_t *l_743 = &p_1467->g_69[2][0];
                        int32_t *l_744 = (void*)0;
                        int32_t *l_745[4][10][6] = {{{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]}},{{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]}},{{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]}},{{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]},{&l_484[0][2],&p_1467->g_57,&p_1467->g_69[2][0],&l_474,&l_474,&p_1467->g_69[2][0]}}};
                        uint8_t l_767 = 0xA3L;
                        int i, j, k;
                        l_753[0][3]--;
                        if (p_1467->g_312)
                            goto lbl_862;
                        --l_767;
                        return p_1467->g_73[(p_1467->g_521.f6 + 1)];
                    }
                    for (l_766 = 1; (l_766 >= 0); l_766 -= 1)
                    { /* block id: 362 */
                        uint32_t *l_782 = &l_753[2][1];
                        uint32_t *l_783[8][7][1] = {{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}},{{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542},{&l_542}}};
                        int32_t l_788 = 0x43E02258L;
                        int32_t l_789 = 0x760EDEC9L;
                        uint64_t ***l_803 = (void*)0;
                        uint64_t ***l_804 = (void*)0;
                        uint64_t ***l_805 = &p_1467->g_801[1][5];
                        int32_t **l_814 = &p_1467->g_91;
                        int i, j, k;
                        if ((**p_1467->g_584))
                            break;
                        (*p_1467->g_91) = ((18446744073709551615UL != ((safe_rshift_func_int8_t_s_s((safe_add_func_uint8_t_u_u(((p_1467->g_68 != (void*)0) != (safe_lshift_func_uint8_t_u_u(l_751, 2))), ((safe_mod_func_uint8_t_u_u(0xF1L, 1UL)) | ((*p_34) |= l_485)))), 2)) & ((safe_add_func_int32_t_s_s((((((*p_1467->g_152) != (safe_sub_func_uint32_t_u_u((p_1467->g_84 = ((*l_782) ^= GROUP_DIVERGE(0, 1))), ((~((safe_mod_func_int16_t_s_s((safe_lshift_func_uint16_t_u_u((FAKE_DIVERGE(p_1467->group_2_offset, get_group_id(2), 10) || ((**p_1467->g_514) && l_749)), 15)), FAKE_DIVERGE(p_1467->local_0_offset, get_local_id(0), 10))) && l_750)) < FAKE_DIVERGE(p_1467->group_1_offset, get_group_id(1), 10))))) , p_33) <= FAKE_DIVERGE(p_1467->global_2_offset, get_global_id(2), 10)) || 0x1336F4C8L), l_788)) | l_746))) | l_789);
                        (*p_1467->g_91) |= (safe_mul_func_uint8_t_u_u((safe_rshift_func_uint8_t_u_s(((safe_mul_func_int16_t_s_s((((safe_rshift_func_uint16_t_u_u((((*p_1467->g_152) |= ((++(*l_706)) && (&p_1467->g_84 != (void*)0))) ^ (0x5631121339544FBCL == (((((*l_805) = p_1467->g_801[1][5]) == (void*)0) || ((p_33 , (safe_rshift_func_int16_t_s_u(((safe_mod_func_uint32_t_u_u(((l_788 , ((--p_1467->g_73[p_1467->g_521.f6]) >= (-1L))) != (l_812 == (void*)0)), l_746)) || p_1467->g_449.f1), p_33))) < l_813)) < l_757))), 3)) < 0x7BB6L) ^ l_751), l_749)) , p_33), 0)), 0x01L));
                        (*l_814) = (*p_1467->g_522);
                    }
                }
                if (p_1467->g_521.f4)
                    goto lbl_862;
            }
            l_815 = (*p_1467->g_522);
        }
        else
        { /* block id: 378 */
            int32_t l_837 = 0x0C3B16D4L;
            int32_t l_839 = 0x207413A4L;
            struct S1 l_858 = {0x504402707F91AD28L};
            for (l_448 = (-13); (l_448 <= 51); l_448 = safe_add_func_uint8_t_u_u(l_448, 9))
            { /* block id: 381 */
                int32_t *l_820 = &l_461;
                uint32_t *l_838 = &l_753[2][4];
                for (l_483 = 7; (l_483 != 1); l_483--)
                { /* block id: 384 */
                    (*p_1467->g_91) ^= p_33;
                    l_820 = l_820;
                    for (p_1467->g_670.f4 = (-13); (p_1467->g_670.f4 > 31); p_1467->g_670.f4++)
                    { /* block id: 389 */
                        return p_33;
                    }
                }
                l_839 |= (((((l_474 , (safe_mod_func_uint32_t_u_u(((*l_838) = ((safe_div_func_int64_t_s_s((safe_mul_func_uint8_t_u_u(((**l_622) |= 0UL), ((safe_mul_func_uint8_t_u_u((((((safe_lshift_func_int16_t_s_s((l_835 != (l_836 = (void*)0)), (*l_820))) ^ ((*p_35) &= (p_1467->g_438.f0 == (0xE640L < 0x0C47L)))) > ((*p_1467->g_802) = (!(0x0DD2L || l_567)))) , l_837) || p_33), l_484[0][3])) | 0x3A52L))), l_837)) ^ p_33)), p_1467->g_670.f6))) && 0x3ED261495E837F94L) <= GROUP_DIVERGE(1, 1)) != 0L) || (*p_34));
                (*p_1467->g_91) = (safe_mul_func_uint8_t_u_u((safe_div_func_int16_t_s_s(p_33, (((*p_1467->g_152) ^= (4294967289UL > (*l_820))) , (safe_sub_func_int64_t_s_s((~(((safe_div_func_int32_t_s_s((!l_468[2][1]), p_33)) & (safe_rshift_func_uint16_t_u_s(((safe_rshift_func_int16_t_s_u((((safe_sub_func_uint16_t_u_u((safe_sub_func_int64_t_s_s((((safe_div_func_int8_t_s_s(((l_858 , (0x0E656C199849B1E7L ^ (safe_rshift_func_int8_t_s_s(p_33, 0)))) < (((safe_unary_minus_func_int8_t_s(p_33)) & 0L) | p_33)), p_33)) || (*p_34)) <= (*l_820)), (-1L))), (-1L))) < (*l_820)) || 18446744073709551606UL), l_858.f0)) || 18446744073709551608UL), l_858.f0))) , 7L)), (*p_34)))))), p_33));
            }
        }
    }
    ++l_864[0];
    return (**p_1467->g_280);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
uint64_t  func_37(uint64_t  p_38, int32_t  p_39, int64_t * p_40, uint32_t  p_41, struct S2 * p_1467)
{ /* block id: 200 */
    uint16_t l_446[5] = {0x8AF7L,0x8AF7L,0x8AF7L,0x8AF7L,0x8AF7L};
    int i;
    return l_446[3];
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_61 p_1467->g_438 p_1467->g_441 p_1467->g_443
 * writes: p_1467->g_68 p_1467->g_61 p_1467->g_438 p_1467->g_444
 */
uint32_t  func_43(int64_t * p_44, int64_t * p_45, int8_t  p_46, uint32_t  p_47, uint16_t  p_48, struct S2 * p_1467)
{ /* block id: 191 */
    int32_t **l_434 = (void*)0;
    int32_t **l_435 = &p_1467->g_68;
    int64_t **l_442 = (void*)0;
    int32_t l_445[8];
    int i;
    for (i = 0; i < 8; i++)
        l_445[i] = 0x7905DF63L;
    (*l_435) = (void*)0;
    for (p_1467->g_61 = (-22); (p_1467->g_61 <= 24); p_1467->g_61 = safe_add_func_uint32_t_u_u(p_1467->g_61, 8))
    { /* block id: 195 */
        volatile struct S1 *l_439 = (void*)0;
        (*p_1467->g_441) = p_1467->g_438;
        (*p_1467->g_443) = l_442;
    }
    return l_445[1];
}


/* ------------------------------------------ */
/* 
 * reads : p_1467->g_61 p_1467->g_91 p_1467->g_comm_values p_1467->g_152 p_1467->g_153 p_1467->g_363.f8 p_1467->g_84 p_1467->g_73 p_1467->g_70.f8 p_1467->g_391 p_1467->g_403 p_1467->g_330 p_1467->g_363.f7 p_1467->g_68 p_1467->g_90 p_1467->g_363.f2 p_1467->g_312 p_1467->g_407 p_1467->g_427 p_1467->g_132 p_1467->g_31
 * writes: p_1467->g_69 p_1467->g_73 p_1467->g_403 p_1467->g_61 p_1467->g_407 p_1467->g_132
 */
int64_t * func_49(int64_t * p_50, int64_t * p_51, int64_t * p_52, uint16_t  p_53, struct S2 * p_1467)
{ /* block id: 8 */
    int16_t l_78 = (-8L);
    int32_t l_81 = 1L;
    int32_t l_85 = 0x2A1A66ECL;
    int32_t *l_133 = &l_85;
    struct S1 l_174 = {-1L};
    uint16_t *l_189 = (void*)0;
    int8_t *l_205 = &p_1467->g_153;
    int32_t l_231 = 1L;
    uint64_t l_257[8][10][2] = {{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}},{{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL},{1UL,18446744073709551606UL}}};
    uint8_t *l_290 = &p_1467->g_73[1];
    uint8_t **l_289 = &l_290;
    uint8_t *l_301 = &p_1467->g_73[1];
    uint8_t **l_319[1][3];
    uint32_t l_334 = 0x70209357L;
    uint32_t *l_355[7] = {&p_1467->g_84,&p_1467->g_84,&p_1467->g_84,&p_1467->g_84,&p_1467->g_84,&p_1467->g_84,&p_1467->g_84};
    uint32_t l_360 = 0xB92F6809L;
    int64_t l_368 = 6L;
    int16_t *l_371 = &l_78;
    int64_t l_378 = 0L;
    uint32_t l_405[9][1] = {{1UL},{1UL},{1UL},{1UL},{1UL},{1UL},{1UL},{1UL},{1UL}};
    uint8_t ***l_412[9][10] = {{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]},{&l_319[0][1],(void*)0,(void*)0,&l_289,(void*)0,(void*)0,&l_289,(void*)0,&l_319[0][2],&l_319[0][2]}};
    uint8_t ****l_411 = &l_412[2][8];
    int i, j, k;
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 3; j++)
            l_319[i][j] = (void*)0;
    }
    for (p_53 = 8; (p_53 == 38); p_53 = safe_add_func_uint8_t_u_u(p_53, 9))
    { /* block id: 11 */
        int32_t l_86 = 9L;
        int32_t l_87[4][7][3] = {{{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L}},{{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L}},{{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L}},{{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L},{0L,1L,0x288F3F27L}}};
        int32_t l_96 = 0x6171C30DL;
        int32_t *l_103 = &l_85;
        int64_t *l_136 = (void*)0;
        int32_t *l_175 = &l_81;
        int64_t *l_181 = (void*)0;
        int64_t *l_182[1][3];
        uint16_t *l_188 = &p_1467->g_61;
        int32_t l_229 = (-6L);
        uint32_t l_258 = 0x72D1C52CL;
        uint8_t **l_292 = (void*)0;
        uint16_t l_302 = 0x43DAL;
        uint32_t *l_352 = &p_1467->g_70[2][4][1].f4;
        int8_t *l_361[1];
        int32_t l_362 = 0x4ECDEFE2L;
        struct S1 l_364 = {-1L};
        struct S1 *l_365 = &l_364;
        int i, j, k;
        for (i = 0; i < 1; i++)
        {
            for (j = 0; j < 3; j++)
                l_182[i][j] = &p_1467->g_183;
        }
        for (i = 0; i < 1; i++)
            l_361[i] = &p_1467->g_330;
        (1 + 1);
    }
    if ((((*l_301) &= (((-3L) >= (safe_lshift_func_int16_t_s_u((p_1467->g_61 , ((~((*p_1467->g_91) = 1L)) & ((l_368 > ((safe_add_func_uint32_t_u_u((((((p_53 , (((*l_133) = ((((*l_371) = (*l_133)) , (((safe_sub_func_int16_t_s_s((safe_add_func_int16_t_s_s((-7L), (safe_add_func_int32_t_s_s(((l_290 != (l_205 = l_205)) < 0L), p_53)))), (*l_133))) != p_1467->g_comm_values[p_1467->tid]) , p_51)) != (void*)0)) || (*p_1467->g_152))) || 0UL) > l_378) , (*l_133)) || p_1467->g_363[0][0].f8), p_53)) || (*l_133))) < p_1467->g_84))), 14))) , p_53)) != 0x6DL))
    { /* block id: 169 */
        uint8_t ***l_392[8][4] = {{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0},{&l_289,&l_289,&l_289,(void*)0}};
        uint8_t ****l_393 = &l_392[5][1];
        int16_t *l_402 = &p_1467->g_403;
        int32_t l_404[3][1];
        uint16_t *l_406 = &p_1467->g_407;
        int64_t *l_408 = &l_368;
        int i, j;
        for (i = 0; i < 3; i++)
        {
            for (j = 0; j < 1; j++)
                l_404[i][j] = 1L;
        }
        (*p_1467->g_68) = (safe_mul_func_uint16_t_u_u(((safe_mod_func_uint8_t_u_u(p_1467->g_70[2][4][1].f8, (safe_sub_func_uint16_t_u_u(((~0L) , ((*l_406) = (p_1467->g_61 = ((safe_sub_func_uint16_t_u_u(((safe_mod_func_int8_t_s_s(((+255UL) && (safe_mul_func_int16_t_s_s((p_1467->g_391 == ((*l_393) = l_392[2][0])), p_53))), ((**l_289) = (((safe_mod_func_int64_t_s_s((safe_div_func_uint32_t_u_u((p_53 , (safe_rshift_func_uint16_t_u_s(((((((*l_402) &= ((*l_371) = p_53)) | (((((l_404[1][0] || 0xA9L) || l_405[1][0]) > p_53) | l_404[1][0]) > p_1467->g_330)) , &p_1467->g_330) == &p_1467->g_330) && FAKE_DIVERGE(p_1467->global_0_offset, get_global_id(0), 10)), 5))), 1UL)), GROUP_DIVERGE(2, 1))) >= 0x3CF4L) & (-1L))))) == 0UL), p_1467->g_363[0][0].f7)) | 0x727FE8F8L)))), p_53)))) > 7UL), l_404[1][0]));
        return &p_1467->g_312;
    }
    else
    { /* block id: 178 */
        uint32_t l_409 = 4294967295UL;
        int32_t *l_410[4];
        int16_t *l_415 = &l_78;
        int8_t *l_431 = &p_1467->g_153;
        int i;
        for (i = 0; i < 4; i++)
            l_410[i] = &l_231;
        if (((0L && (p_1467->g_73[1] = (l_409 , (((l_410[2] == (void*)0) && p_1467->g_90[0][0]) != ((&p_1467->g_391 != l_411) , (safe_add_func_int16_t_s_s((((void*)0 == l_415) & p_1467->g_363[0][0].f2), p_1467->g_312))))))) & 1UL))
        { /* block id: 180 */
            uint16_t *l_418 = &p_1467->g_407;
            (*l_133) = (((*l_415) = (safe_mul_func_uint16_t_u_u(((*l_418)--), (((safe_rshift_func_uint16_t_u_u(p_53, (safe_sub_func_int64_t_s_s(0x5F29F166644B8B2BL, (p_1467->g_132 = (safe_add_func_int64_t_s_s((p_1467->g_427[1] != &p_1467->g_428), ((((safe_rshift_func_int8_t_s_s(((void*)0 != &l_334), 0)) > 1L) <= ((l_431 == (l_205 = &p_1467->g_330)) < (-1L))) == p_1467->g_132)))))))) || p_53) < (*p_51))))) , 0x7A63ABE4L);
        }
        else
        { /* block id: 186 */
            (*l_133) |= p_53;
        }
        return p_52;
    }
}


__kernel void entry(__global ulong *result, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local int64_t l_comm_values[132];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 132; i++)
            l_comm_values[i] = 1;
    struct S2 c_1468;
    struct S2* p_1467 = &c_1468;
    struct S2 c_1469 = {
        0xB79F6A71L, // p_1467->g_11
        {{{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL},{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL},{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL}},{{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL},{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL},{0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL,0x50D1D8475761AC7EL,0x50D1D8475761AC7EL,0x7E511BD77DFCC86FL}}}, // p_1467->g_31
        8L, // p_1467->g_57
        0x47EAL, // p_1467->g_61
        {{0x7B405A81L},{0x7B405A81L},{0x7B405A81L}}, // p_1467->g_69
        &p_1467->g_69[2][0], // p_1467->g_68
        {{{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}}},{{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}}},{{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}}},{{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}}},{{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}},{{-5L,2L,0x1B8AB881L,4294967287UL,0x52D1907DL,0xADECF76F22C25585L,-7L,0x3498444E19612CB4L,2L},{0x4E2569E2B6F6ADDBL,4L,4294967286UL,5UL,0x2F905912L,0xBB44E860B7F1185DL,0x0C29A95C713BC382L,0x6E1B0D58D138890AL,1L},{0L,-5L,0UL,2UL,0xFC44ED0FL,0x43C1BD20607D1F71L,2L,0x27CFB3C6D7EFADBBL,0x006AC6A8B0DAE1A5L},{0L,-1L,0UL,1UL,0x92080279L,0xF4C68921B15B012AL,0x724DF3FE578949FBL,0x7E930A53C3C2260EL,-5L},{-1L,0L,0UL,0xEC8E115BL,0xA5FABF03L,7UL,3L,0x4CF1313BA82727C9L,0x44C330A9AF7D07E1L},{6L,-4L,0xDAA0A8E6L,4294967292UL,8UL,18446744073709551609UL,-2L,-10L,2L}}}}, // p_1467->g_70
        {1UL,1UL,1UL}, // p_1467->g_73
        4294967292UL, // p_1467->g_84
        {{0x6A25E125L},{0x6A25E125L}}, // p_1467->g_90
        &p_1467->g_69[2][0], // p_1467->g_91
        {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}, // p_1467->g_109
        0x9DCE7C9F0504AAD3L, // p_1467->g_132
        (-6L), // p_1467->g_153
        &p_1467->g_153, // p_1467->g_152
        1UL, // p_1467->g_163
        (-2L), // p_1467->g_183
        {&p_1467->g_68,&p_1467->g_68,&p_1467->g_68,&p_1467->g_68,&p_1467->g_68,&p_1467->g_68,&p_1467->g_68,&p_1467->g_68}, // p_1467->g_235
        {{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}},{{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91},{&p_1467->g_91}}}, // p_1467->g_279
        &p_1467->g_91, // p_1467->g_280
        0x68216349C9A97775L, // p_1467->g_312
        0x61L, // p_1467->g_330
        {{{0x7EA75A99416CA32FL,0L,4294967289UL,0UL,4294967291UL,0x7D6BE693E5A8500BL,0x7C7337A005E58524L,0x29724FD674DFE667L,5L}}}, // p_1467->g_363
        (void*)0, // p_1467->g_391
        (-1L), // p_1467->g_403
        1UL, // p_1467->g_407
        {0L}, // p_1467->g_428
        {&p_1467->g_428,&p_1467->g_428,&p_1467->g_428,&p_1467->g_428,&p_1467->g_428,&p_1467->g_428}, // p_1467->g_427
        {-1L}, // p_1467->g_438
        (void*)0, // p_1467->g_440
        &p_1467->g_438, // p_1467->g_441
        {(void*)0,(void*)0,(void*)0}, // p_1467->g_444
        &p_1467->g_444[1], // p_1467->g_443
        {0x48CFD13615DBC05FL,0x50782A9CL,4294967290UL,4294967295UL,0UL,0xBA8CE425E296FDCCL,0x68EE33DA46D844ECL,0x233053CCBE0A77FAL,0x084545AFD174573DL}, // p_1467->g_449
        {{{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91,&p_1467->g_91,&p_1467->g_68,&p_1467->g_91}}}, // p_1467->g_494
        {{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}},{{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91},{&p_1467->g_91,&p_1467->g_91}}}, // p_1467->g_495
        &p_1467->g_91, // p_1467->g_514
        {-2L,-9L,0x0926ACC9L,0UL,0x84960622L,0x721E8C44075C5F57L,3L,0x2A3C34515A079221L,-1L}, // p_1467->g_521
        &p_1467->g_91, // p_1467->g_522
        {1L,0x6FEF6921L,4294967295UL,0x754D5A0EL,0x2C3A79CAL,1UL,1L,1L,-1L}, // p_1467->g_528
        &p_1467->g_528, // p_1467->g_529
        (-8L), // p_1467->g_536
        &p_1467->g_91, // p_1467->g_584
        {-1L,1L,0xF1BE7E3EL,0xCE44F7A0L,1UL,8UL,0x6A80FE72442EDC6FL,-1L,-1L}, // p_1467->g_642
        {0x6B792FE9A42F9A53L,9L,0xCDCF0290L,0xCB98D55DL,6UL,6UL,0L,-1L,0x38308D551D6B8B5FL}, // p_1467->g_651
        {2L,-4L,0UL,0x16B74CEAL,4294967287UL,0x09FC73FF699CD340L,0L,0x79A09D38C9A35B2BL,0x25E70AA556877262L}, // p_1467->g_670
        &p_1467->g_363[0][0], // p_1467->g_679
        &p_1467->g_679, // p_1467->g_678
        {1L,0L,0x63105EA8L,0x767D5CC5L,0x4691E67BL,0x5727F28DB00B9DE6L,-1L,0x7F5406B172D396EAL,0L}, // p_1467->g_721
        0L, // p_1467->g_727
        (void*)0, // p_1467->g_742
        &p_1467->g_742, // p_1467->g_741
        &p_1467->g_132, // p_1467->g_802
        {{(void*)0,(void*)0,&p_1467->g_802,&p_1467->g_802,(void*)0,&p_1467->g_802,&p_1467->g_802,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,&p_1467->g_802,&p_1467->g_802,(void*)0,&p_1467->g_802,&p_1467->g_802,(void*)0,(void*)0,(void*)0}}, // p_1467->g_801
        {{&p_1467->g_68,&p_1467->g_68,(void*)0,&p_1467->g_68,(void*)0,&p_1467->g_68,(void*)0,&p_1467->g_68,&p_1467->g_68,(void*)0},{&p_1467->g_68,&p_1467->g_68,(void*)0,&p_1467->g_68,(void*)0,&p_1467->g_68,(void*)0,&p_1467->g_68,&p_1467->g_68,(void*)0}}, // p_1467->g_869
        &p_1467->g_91, // p_1467->g_870
        0L, // p_1467->g_972
        (-1L), // p_1467->g_981
        (void*)0, // p_1467->g_1038
        {{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L},{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L},{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L},{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L},{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L},{-1L,0x16B04434L,0x824AB0FDL,0x8FA88C7BL,0xBF3D62C5L,18446744073709551615UL,0x6B006B76D0F58045L,0x4D40666799D8295EL,8L}}, // p_1467->g_1042
        0x7FL, // p_1467->g_1049
        &p_1467->g_68, // p_1467->g_1051
        0x2369BE3C0966E9CEL, // p_1467->g_1081
        &p_1467->g_69[0][0], // p_1467->g_1091
        0x76FAL, // p_1467->g_1099
        &p_1467->g_521.f4, // p_1467->g_1121
        &p_1467->g_1121, // p_1467->g_1120
        &p_1467->g_1120, // p_1467->g_1119
        (void*)0, // p_1467->g_1155
        &p_1467->g_1155, // p_1467->g_1154
        &p_1467->g_91, // p_1467->g_1159
        &p_1467->g_70[2][4][1].f4, // p_1467->g_1162
        {&p_1467->g_91,&p_1467->g_91,&p_1467->g_91}, // p_1467->g_1193
        &p_1467->g_91, // p_1467->g_1194
        {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}, // p_1467->g_1209
        &p_1467->g_1209[4], // p_1467->g_1208
        {{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}},{{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L},{0xDF22L,0x3FC6L,0xDF22L}}}, // p_1467->g_1216
        &p_1467->g_73[0], // p_1467->g_1258
        &p_1467->g_1258, // p_1467->g_1257
        {0x4DC06A0811BD2EB3L,5L,4294967295UL,4294967295UL,0x0DFBEAEFL,1UL,9L,-1L,0x23D6213F7DB4268CL}, // p_1467->g_1266
        {{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68},{&p_1467->g_68,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_1091,&p_1467->g_68}}, // p_1467->g_1276
        &p_1467->g_1276[0][0], // p_1467->g_1275
        {1L,-1L,0x1D5B3E1DL,0x672066CEL,0x01A5D64AL,18446744073709551607UL,-1L,0x39B54B98B8B1F1F4L,-1L}, // p_1467->g_1281
        {{0x0A3E795067B8B7FFL,-10L,0x6C45FFD6L,0x2605B76EL,0x67E46344L,0xB928464885AB95B9L,0x0B2D756B5B1307E9L,0L,0x1EE1DBCAD461CC96L},{0x0A3E795067B8B7FFL,-10L,0x6C45FFD6L,0x2605B76EL,0x67E46344L,0xB928464885AB95B9L,0x0B2D756B5B1307E9L,0L,0x1EE1DBCAD461CC96L}}, // p_1467->g_1284
        &p_1467->g_68, // p_1467->g_1304
        {{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}},{{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL},{65535UL,65535UL,0x5264L,65534UL,1UL,0x76C2L,0x354DL}}}, // p_1467->g_1335
        {4L,0x25BC338BL,0x6E36369AL,0x10BF2836L,1UL,0xBC2421A8FD0C8569L,1L,0x5C5E7191DD954C8BL,3L}, // p_1467->g_1342
        {0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL,0xD56812321A3D208DL}, // p_1467->g_1348
        0x5625C2C98C0A9BC9L, // p_1467->g_1367
        {0x31D73C1C5C65BCEBL,1L,0xB5983FACL,4294967292UL,0xC3B6DC15L,0xFCF9E3C980D6EC27L,-10L,0x40FB77A68D0AE4F5L,0x1063A5B45F74FDF1L}, // p_1467->g_1380
        0xC744L, // p_1467->g_1428
        &p_1467->g_1081, // p_1467->g_1451
        sequence_input[get_global_id(0)], // p_1467->global_0_offset
        sequence_input[get_global_id(1)], // p_1467->global_1_offset
        sequence_input[get_global_id(2)], // p_1467->global_2_offset
        sequence_input[get_local_id(0)], // p_1467->local_0_offset
        sequence_input[get_local_id(1)], // p_1467->local_1_offset
        sequence_input[get_local_id(2)], // p_1467->local_2_offset
        sequence_input[get_group_id(0)], // p_1467->group_0_offset
        sequence_input[get_group_id(1)], // p_1467->group_1_offset
        sequence_input[get_group_id(2)], // p_1467->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 132)), permutations[0][get_linear_local_id()])), // p_1467->tid
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_1468 = c_1469;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_1467);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_1467->g_11, "p_1467->g_11", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 3; j++)
        {
            for (k = 0; k < 5; k++)
            {
                transparent_crc(p_1467->g_31[i][j][k], "p_1467->g_31[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1467->g_57, "p_1467->g_57", print_hash_value);
    transparent_crc(p_1467->g_61, "p_1467->g_61", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 1; j++)
        {
            transparent_crc(p_1467->g_69[i][j], "p_1467->g_69[i][j]", print_hash_value);

        }
    }
    for (i = 0; i < 5; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 6; k++)
            {
                transparent_crc(p_1467->g_70[i][j][k].f0, "p_1467->g_70[i][j][k].f0", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f1, "p_1467->g_70[i][j][k].f1", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f2, "p_1467->g_70[i][j][k].f2", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f3, "p_1467->g_70[i][j][k].f3", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f4, "p_1467->g_70[i][j][k].f4", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f5, "p_1467->g_70[i][j][k].f5", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f6, "p_1467->g_70[i][j][k].f6", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f7, "p_1467->g_70[i][j][k].f7", print_hash_value);
                transparent_crc(p_1467->g_70[i][j][k].f8, "p_1467->g_70[i][j][k].f8", print_hash_value);

            }
        }
    }
    for (i = 0; i < 3; i++)
    {
        transparent_crc(p_1467->g_73[i], "p_1467->g_73[i]", print_hash_value);

    }
    transparent_crc(p_1467->g_84, "p_1467->g_84", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 1; j++)
        {
            transparent_crc(p_1467->g_90[i][j], "p_1467->g_90[i][j]", print_hash_value);

        }
    }
    transparent_crc(p_1467->g_132, "p_1467->g_132", print_hash_value);
    transparent_crc(p_1467->g_153, "p_1467->g_153", print_hash_value);
    transparent_crc(p_1467->g_163, "p_1467->g_163", print_hash_value);
    transparent_crc(p_1467->g_183, "p_1467->g_183", print_hash_value);
    transparent_crc(p_1467->g_312, "p_1467->g_312", print_hash_value);
    transparent_crc(p_1467->g_330, "p_1467->g_330", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        for (j = 0; j < 1; j++)
        {
            transparent_crc(p_1467->g_363[i][j].f0, "p_1467->g_363[i][j].f0", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f1, "p_1467->g_363[i][j].f1", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f2, "p_1467->g_363[i][j].f2", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f3, "p_1467->g_363[i][j].f3", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f4, "p_1467->g_363[i][j].f4", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f5, "p_1467->g_363[i][j].f5", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f6, "p_1467->g_363[i][j].f6", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f7, "p_1467->g_363[i][j].f7", print_hash_value);
            transparent_crc(p_1467->g_363[i][j].f8, "p_1467->g_363[i][j].f8", print_hash_value);

        }
    }
    transparent_crc(p_1467->g_403, "p_1467->g_403", print_hash_value);
    transparent_crc(p_1467->g_407, "p_1467->g_407", print_hash_value);
    transparent_crc(p_1467->g_428.f0, "p_1467->g_428.f0", print_hash_value);
    transparent_crc(p_1467->g_438.f0, "p_1467->g_438.f0", print_hash_value);
    transparent_crc(p_1467->g_449.f0, "p_1467->g_449.f0", print_hash_value);
    transparent_crc(p_1467->g_449.f1, "p_1467->g_449.f1", print_hash_value);
    transparent_crc(p_1467->g_449.f2, "p_1467->g_449.f2", print_hash_value);
    transparent_crc(p_1467->g_449.f3, "p_1467->g_449.f3", print_hash_value);
    transparent_crc(p_1467->g_449.f4, "p_1467->g_449.f4", print_hash_value);
    transparent_crc(p_1467->g_449.f5, "p_1467->g_449.f5", print_hash_value);
    transparent_crc(p_1467->g_449.f6, "p_1467->g_449.f6", print_hash_value);
    transparent_crc(p_1467->g_449.f7, "p_1467->g_449.f7", print_hash_value);
    transparent_crc(p_1467->g_449.f8, "p_1467->g_449.f8", print_hash_value);
    transparent_crc(p_1467->g_521.f0, "p_1467->g_521.f0", print_hash_value);
    transparent_crc(p_1467->g_521.f1, "p_1467->g_521.f1", print_hash_value);
    transparent_crc(p_1467->g_521.f2, "p_1467->g_521.f2", print_hash_value);
    transparent_crc(p_1467->g_521.f3, "p_1467->g_521.f3", print_hash_value);
    transparent_crc(p_1467->g_521.f4, "p_1467->g_521.f4", print_hash_value);
    transparent_crc(p_1467->g_521.f5, "p_1467->g_521.f5", print_hash_value);
    transparent_crc(p_1467->g_521.f6, "p_1467->g_521.f6", print_hash_value);
    transparent_crc(p_1467->g_521.f7, "p_1467->g_521.f7", print_hash_value);
    transparent_crc(p_1467->g_521.f8, "p_1467->g_521.f8", print_hash_value);
    transparent_crc(p_1467->g_528.f0, "p_1467->g_528.f0", print_hash_value);
    transparent_crc(p_1467->g_528.f1, "p_1467->g_528.f1", print_hash_value);
    transparent_crc(p_1467->g_528.f2, "p_1467->g_528.f2", print_hash_value);
    transparent_crc(p_1467->g_528.f3, "p_1467->g_528.f3", print_hash_value);
    transparent_crc(p_1467->g_528.f4, "p_1467->g_528.f4", print_hash_value);
    transparent_crc(p_1467->g_528.f5, "p_1467->g_528.f5", print_hash_value);
    transparent_crc(p_1467->g_528.f6, "p_1467->g_528.f6", print_hash_value);
    transparent_crc(p_1467->g_528.f7, "p_1467->g_528.f7", print_hash_value);
    transparent_crc(p_1467->g_528.f8, "p_1467->g_528.f8", print_hash_value);
    transparent_crc(p_1467->g_536, "p_1467->g_536", print_hash_value);
    transparent_crc(p_1467->g_642.f0, "p_1467->g_642.f0", print_hash_value);
    transparent_crc(p_1467->g_642.f1, "p_1467->g_642.f1", print_hash_value);
    transparent_crc(p_1467->g_642.f2, "p_1467->g_642.f2", print_hash_value);
    transparent_crc(p_1467->g_642.f3, "p_1467->g_642.f3", print_hash_value);
    transparent_crc(p_1467->g_642.f4, "p_1467->g_642.f4", print_hash_value);
    transparent_crc(p_1467->g_642.f5, "p_1467->g_642.f5", print_hash_value);
    transparent_crc(p_1467->g_642.f6, "p_1467->g_642.f6", print_hash_value);
    transparent_crc(p_1467->g_642.f7, "p_1467->g_642.f7", print_hash_value);
    transparent_crc(p_1467->g_642.f8, "p_1467->g_642.f8", print_hash_value);
    transparent_crc(p_1467->g_651.f0, "p_1467->g_651.f0", print_hash_value);
    transparent_crc(p_1467->g_651.f1, "p_1467->g_651.f1", print_hash_value);
    transparent_crc(p_1467->g_651.f2, "p_1467->g_651.f2", print_hash_value);
    transparent_crc(p_1467->g_651.f3, "p_1467->g_651.f3", print_hash_value);
    transparent_crc(p_1467->g_651.f4, "p_1467->g_651.f4", print_hash_value);
    transparent_crc(p_1467->g_651.f5, "p_1467->g_651.f5", print_hash_value);
    transparent_crc(p_1467->g_651.f6, "p_1467->g_651.f6", print_hash_value);
    transparent_crc(p_1467->g_651.f7, "p_1467->g_651.f7", print_hash_value);
    transparent_crc(p_1467->g_651.f8, "p_1467->g_651.f8", print_hash_value);
    transparent_crc(p_1467->g_670.f0, "p_1467->g_670.f0", print_hash_value);
    transparent_crc(p_1467->g_670.f1, "p_1467->g_670.f1", print_hash_value);
    transparent_crc(p_1467->g_670.f2, "p_1467->g_670.f2", print_hash_value);
    transparent_crc(p_1467->g_670.f3, "p_1467->g_670.f3", print_hash_value);
    transparent_crc(p_1467->g_670.f4, "p_1467->g_670.f4", print_hash_value);
    transparent_crc(p_1467->g_670.f5, "p_1467->g_670.f5", print_hash_value);
    transparent_crc(p_1467->g_670.f6, "p_1467->g_670.f6", print_hash_value);
    transparent_crc(p_1467->g_670.f7, "p_1467->g_670.f7", print_hash_value);
    transparent_crc(p_1467->g_670.f8, "p_1467->g_670.f8", print_hash_value);
    transparent_crc(p_1467->g_721.f0, "p_1467->g_721.f0", print_hash_value);
    transparent_crc(p_1467->g_721.f1, "p_1467->g_721.f1", print_hash_value);
    transparent_crc(p_1467->g_721.f2, "p_1467->g_721.f2", print_hash_value);
    transparent_crc(p_1467->g_721.f3, "p_1467->g_721.f3", print_hash_value);
    transparent_crc(p_1467->g_721.f4, "p_1467->g_721.f4", print_hash_value);
    transparent_crc(p_1467->g_721.f5, "p_1467->g_721.f5", print_hash_value);
    transparent_crc(p_1467->g_721.f6, "p_1467->g_721.f6", print_hash_value);
    transparent_crc(p_1467->g_721.f7, "p_1467->g_721.f7", print_hash_value);
    transparent_crc(p_1467->g_721.f8, "p_1467->g_721.f8", print_hash_value);
    transparent_crc(p_1467->g_727, "p_1467->g_727", print_hash_value);
    transparent_crc(p_1467->g_972, "p_1467->g_972", print_hash_value);
    transparent_crc(p_1467->g_981, "p_1467->g_981", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(p_1467->g_1042[i].f0, "p_1467->g_1042[i].f0", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f1, "p_1467->g_1042[i].f1", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f2, "p_1467->g_1042[i].f2", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f3, "p_1467->g_1042[i].f3", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f4, "p_1467->g_1042[i].f4", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f5, "p_1467->g_1042[i].f5", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f6, "p_1467->g_1042[i].f6", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f7, "p_1467->g_1042[i].f7", print_hash_value);
        transparent_crc(p_1467->g_1042[i].f8, "p_1467->g_1042[i].f8", print_hash_value);

    }
    transparent_crc(p_1467->g_1049, "p_1467->g_1049", print_hash_value);
    transparent_crc(p_1467->g_1081, "p_1467->g_1081", print_hash_value);
    transparent_crc(p_1467->g_1099, "p_1467->g_1099", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 3; k++)
            {
                transparent_crc(p_1467->g_1216[i][j][k], "p_1467->g_1216[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1467->g_1266.f0, "p_1467->g_1266.f0", print_hash_value);
    transparent_crc(p_1467->g_1266.f1, "p_1467->g_1266.f1", print_hash_value);
    transparent_crc(p_1467->g_1266.f2, "p_1467->g_1266.f2", print_hash_value);
    transparent_crc(p_1467->g_1266.f3, "p_1467->g_1266.f3", print_hash_value);
    transparent_crc(p_1467->g_1266.f4, "p_1467->g_1266.f4", print_hash_value);
    transparent_crc(p_1467->g_1266.f5, "p_1467->g_1266.f5", print_hash_value);
    transparent_crc(p_1467->g_1266.f6, "p_1467->g_1266.f6", print_hash_value);
    transparent_crc(p_1467->g_1266.f7, "p_1467->g_1266.f7", print_hash_value);
    transparent_crc(p_1467->g_1266.f8, "p_1467->g_1266.f8", print_hash_value);
    transparent_crc(p_1467->g_1281.f0, "p_1467->g_1281.f0", print_hash_value);
    transparent_crc(p_1467->g_1281.f1, "p_1467->g_1281.f1", print_hash_value);
    transparent_crc(p_1467->g_1281.f2, "p_1467->g_1281.f2", print_hash_value);
    transparent_crc(p_1467->g_1281.f3, "p_1467->g_1281.f3", print_hash_value);
    transparent_crc(p_1467->g_1281.f4, "p_1467->g_1281.f4", print_hash_value);
    transparent_crc(p_1467->g_1281.f5, "p_1467->g_1281.f5", print_hash_value);
    transparent_crc(p_1467->g_1281.f6, "p_1467->g_1281.f6", print_hash_value);
    transparent_crc(p_1467->g_1281.f7, "p_1467->g_1281.f7", print_hash_value);
    transparent_crc(p_1467->g_1281.f8, "p_1467->g_1281.f8", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        transparent_crc(p_1467->g_1284[i].f0, "p_1467->g_1284[i].f0", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f1, "p_1467->g_1284[i].f1", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f2, "p_1467->g_1284[i].f2", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f3, "p_1467->g_1284[i].f3", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f4, "p_1467->g_1284[i].f4", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f5, "p_1467->g_1284[i].f5", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f6, "p_1467->g_1284[i].f6", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f7, "p_1467->g_1284[i].f7", print_hash_value);
        transparent_crc(p_1467->g_1284[i].f8, "p_1467->g_1284[i].f8", print_hash_value);

    }
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 5; j++)
        {
            for (k = 0; k < 7; k++)
            {
                transparent_crc(p_1467->g_1335[i][j][k], "p_1467->g_1335[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1467->g_1342.f0, "p_1467->g_1342.f0", print_hash_value);
    transparent_crc(p_1467->g_1342.f1, "p_1467->g_1342.f1", print_hash_value);
    transparent_crc(p_1467->g_1342.f2, "p_1467->g_1342.f2", print_hash_value);
    transparent_crc(p_1467->g_1342.f3, "p_1467->g_1342.f3", print_hash_value);
    transparent_crc(p_1467->g_1342.f4, "p_1467->g_1342.f4", print_hash_value);
    transparent_crc(p_1467->g_1342.f5, "p_1467->g_1342.f5", print_hash_value);
    transparent_crc(p_1467->g_1342.f6, "p_1467->g_1342.f6", print_hash_value);
    transparent_crc(p_1467->g_1342.f7, "p_1467->g_1342.f7", print_hash_value);
    transparent_crc(p_1467->g_1342.f8, "p_1467->g_1342.f8", print_hash_value);
    for (i = 0; i < 10; i++)
    {
        transparent_crc(p_1467->g_1348[i], "p_1467->g_1348[i]", print_hash_value);

    }
    transparent_crc(p_1467->g_1367, "p_1467->g_1367", print_hash_value);
    transparent_crc(p_1467->g_1380.f0, "p_1467->g_1380.f0", print_hash_value);
    transparent_crc(p_1467->g_1380.f1, "p_1467->g_1380.f1", print_hash_value);
    transparent_crc(p_1467->g_1380.f2, "p_1467->g_1380.f2", print_hash_value);
    transparent_crc(p_1467->g_1380.f3, "p_1467->g_1380.f3", print_hash_value);
    transparent_crc(p_1467->g_1380.f4, "p_1467->g_1380.f4", print_hash_value);
    transparent_crc(p_1467->g_1380.f5, "p_1467->g_1380.f5", print_hash_value);
    transparent_crc(p_1467->g_1380.f6, "p_1467->g_1380.f6", print_hash_value);
    transparent_crc(p_1467->g_1380.f7, "p_1467->g_1380.f7", print_hash_value);
    transparent_crc(p_1467->g_1380.f8, "p_1467->g_1380.f8", print_hash_value);
    transparent_crc(p_1467->g_1428, "p_1467->g_1428", print_hash_value);
    transparent_crc(p_1467->l_comm_values[get_linear_local_id()], "p_1467->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_1467->g_comm_values[get_linear_group_id() * 132 + get_linear_local_id()], "p_1467->g_comm_values[get_linear_group_id() * 132 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

// ---fake_divergence ---inter_thread_comm -g 29,7,49 -l 29,1,7
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][203] = {
{154,159,24,201,153,65,23,169,59,149,49,147,69,121,144,163,77,157,116,10,94,101,195,122,102,108,70,158,47,129,25,173,150,46,111,66,13,200,142,86,39,155,187,5,37,58,89,148,98,16,72,165,117,28,17,118,146,96,192,74,9,193,57,43,120,152,33,62,183,3,137,110,134,78,185,161,190,82,26,80,14,156,42,103,92,168,63,91,93,188,180,112,54,175,171,12,189,48,4,194,174,95,184,105,109,38,11,32,127,119,8,6,179,56,41,143,21,132,44,164,0,178,2,50,186,138,133,79,51,123,124,68,61,104,136,88,135,197,7,22,27,166,34,126,131,182,114,71,87,60,170,15,115,97,198,75,202,181,31,29,67,53,18,1,76,85,55,106,199,162,20,40,113,151,90,125,81,139,73,84,176,52,30,99,196,140,160,19,128,64,83,145,167,107,177,141,45,100,191,130,172,36,35}, // permutation 0
{164,178,176,91,62,175,41,48,87,36,135,101,95,202,35,44,127,26,58,68,5,117,125,61,84,21,163,156,174,142,145,109,6,154,90,94,22,146,119,33,40,53,4,121,157,104,43,124,172,140,193,153,89,69,34,8,59,120,118,0,75,50,177,97,199,105,67,70,15,64,185,29,76,138,99,165,144,46,160,23,123,180,200,143,103,32,20,179,181,108,18,136,57,12,42,147,132,52,37,98,188,71,167,130,60,191,112,51,115,122,129,166,111,96,11,77,49,107,137,66,128,133,85,106,72,38,152,10,81,170,161,80,93,13,63,88,187,45,102,83,7,197,19,14,148,173,196,55,92,17,79,150,162,2,1,100,158,65,28,131,194,114,155,78,139,73,25,54,189,198,169,159,24,39,171,74,126,47,141,9,110,82,56,113,116,151,149,31,86,201,190,186,16,192,195,3,183,27,134,184,182,30,168}, // permutation 1
{108,153,21,107,143,163,85,87,192,180,118,140,150,68,200,78,95,46,177,195,131,194,10,185,22,122,169,56,12,137,112,62,28,19,170,58,134,114,106,167,139,55,40,64,102,18,135,82,182,105,138,148,77,155,63,189,93,98,92,14,201,193,11,52,183,0,81,67,27,96,130,165,23,161,65,69,71,43,59,38,75,35,160,162,16,128,145,39,48,53,199,151,42,61,186,70,181,2,154,15,190,146,84,32,133,174,149,117,49,91,179,97,54,99,101,121,127,86,24,8,141,29,6,94,132,9,100,1,30,159,88,125,3,156,158,157,44,80,111,73,113,166,188,37,60,5,142,103,116,72,198,57,175,74,178,90,176,41,45,83,184,196,36,197,25,202,13,47,144,164,172,120,126,89,152,50,34,7,4,104,33,20,119,109,168,171,31,124,76,136,147,26,51,129,17,110,123,115,66,79,191,187,173}, // permutation 2
{61,138,26,74,19,174,140,25,20,121,181,178,167,123,161,193,110,126,71,190,33,35,55,148,125,91,116,79,68,6,198,50,166,172,127,28,92,106,27,130,150,124,2,194,158,59,188,42,101,132,9,107,149,84,168,29,36,80,171,114,139,162,24,34,39,196,56,3,83,46,180,119,115,141,43,154,195,78,76,99,176,49,89,103,117,12,112,164,85,159,75,37,90,21,82,145,0,13,98,156,202,66,137,146,175,177,16,184,5,53,72,143,183,48,32,87,70,51,94,44,11,120,93,58,185,31,73,47,105,102,201,170,63,151,104,64,88,108,169,100,131,40,8,128,41,182,15,133,30,163,155,14,142,38,17,22,54,65,147,153,157,7,135,95,191,96,189,136,69,57,23,77,86,109,144,192,134,160,62,173,52,60,18,179,122,197,1,45,4,67,187,81,186,97,118,113,152,129,165,200,10,111,199}, // permutation 3
{66,197,179,78,107,24,32,57,2,126,9,46,55,75,13,129,119,17,26,169,192,127,149,11,3,37,135,184,123,81,171,20,30,53,104,45,47,159,80,105,185,116,18,168,193,145,51,6,144,201,72,93,90,62,146,19,167,173,110,137,49,63,58,65,1,154,61,41,69,182,158,106,140,98,89,87,150,124,141,115,170,52,33,96,56,31,112,14,92,139,133,160,43,68,188,70,147,4,156,143,196,16,102,113,39,183,166,103,195,101,142,15,38,132,12,25,35,189,42,136,40,60,186,164,79,100,44,151,202,163,152,109,99,71,125,5,48,85,27,94,8,178,74,97,174,122,181,67,131,64,120,148,84,117,130,176,10,175,23,161,162,36,121,157,138,108,153,88,187,22,111,190,73,50,29,114,77,7,91,34,177,54,194,21,83,0,199,180,198,134,191,86,82,59,28,118,172,165,200,128,155,95,76}, // permutation 4
{92,134,38,180,82,34,109,25,183,121,44,130,22,86,95,161,117,17,14,62,8,80,168,79,138,29,75,182,142,162,24,20,189,50,116,19,81,35,52,119,73,48,97,110,175,191,102,167,40,174,98,49,151,18,139,159,15,43,188,108,202,154,0,101,192,152,77,120,39,123,158,124,84,94,10,112,178,28,118,132,133,193,78,157,74,42,30,36,149,23,63,115,2,67,100,186,4,72,184,85,21,201,190,163,91,170,33,141,181,90,127,143,185,55,61,31,179,45,5,64,41,131,166,53,147,6,107,56,83,89,125,71,51,69,156,96,111,165,195,11,93,16,173,37,197,12,140,99,169,103,146,128,135,198,70,54,196,171,153,13,114,88,160,58,113,7,60,177,3,137,46,155,66,27,87,145,1,164,199,76,105,172,26,176,65,126,144,200,32,68,122,148,106,194,57,136,150,187,104,9,47,59,129}, // permutation 5
{3,90,6,80,186,200,96,50,159,136,9,74,134,198,14,153,162,120,32,91,53,65,201,36,85,150,176,101,114,28,174,168,142,183,105,196,78,51,140,111,2,164,64,73,143,172,15,55,72,180,25,100,182,54,154,42,84,97,44,158,113,76,1,131,40,112,195,47,152,104,117,122,45,145,129,27,167,62,71,8,194,89,116,141,93,133,138,37,102,41,29,132,23,30,88,86,157,151,39,144,108,57,61,33,126,118,20,58,149,83,87,13,95,68,7,175,26,166,185,70,82,160,127,5,24,60,12,139,34,125,171,202,35,107,98,0,192,46,123,193,94,199,179,66,163,130,110,63,99,121,165,69,77,115,18,92,155,146,17,184,173,187,43,135,4,49,106,177,189,22,190,103,56,148,10,38,109,79,147,11,59,67,178,81,19,21,169,181,128,48,191,137,119,170,31,16,52,197,156,124,161,75,188}, // permutation 6
{82,21,95,44,194,63,174,23,37,151,126,200,75,132,122,62,180,83,135,121,169,55,182,166,177,33,146,170,159,61,112,128,85,15,104,118,184,164,165,93,107,201,47,9,67,125,172,155,7,17,16,102,74,157,0,117,77,56,143,158,13,54,26,191,142,131,130,199,46,2,110,149,64,179,186,65,134,66,114,145,105,136,197,84,48,171,39,51,59,175,91,141,190,185,120,18,183,96,123,42,162,196,10,29,119,94,97,100,73,35,138,43,198,38,150,115,152,76,20,89,140,173,34,25,167,176,161,147,28,178,3,156,181,133,137,86,40,50,70,31,30,187,57,5,90,160,98,154,80,8,188,148,11,6,127,99,60,81,32,106,12,108,101,139,111,19,27,53,163,49,144,71,92,22,113,189,52,45,68,79,72,36,14,124,4,58,193,78,88,195,168,202,24,153,41,103,69,1,192,116,129,87,109}, // permutation 7
{181,86,186,87,45,12,63,157,11,38,115,50,55,180,135,136,116,101,123,33,168,148,152,39,40,142,31,125,4,42,146,114,102,155,43,151,160,161,89,126,59,162,185,105,131,66,118,184,192,28,19,153,82,174,130,179,107,80,98,199,88,53,56,64,202,121,14,97,164,188,196,21,183,47,198,49,139,108,99,112,193,144,23,25,5,194,201,141,29,117,2,48,1,71,74,65,9,26,35,91,137,127,52,92,72,24,104,187,175,149,18,10,62,54,159,156,128,94,78,93,189,6,129,109,195,96,177,163,171,158,61,165,20,120,147,111,173,143,167,34,58,170,106,41,75,3,169,83,13,68,132,113,15,76,178,0,154,30,191,133,60,172,7,81,145,110,138,182,16,70,150,100,190,46,119,22,85,166,69,134,8,124,122,17,79,197,77,200,73,140,32,36,57,27,37,90,67,51,84,103,176,44,95}, // permutation 8
{49,8,122,22,97,83,109,189,143,100,92,67,196,74,18,86,153,84,139,162,114,11,159,188,41,138,39,110,145,151,37,78,136,183,46,73,172,3,79,105,32,93,91,34,36,128,170,176,134,181,5,113,127,140,23,94,95,179,40,13,30,160,186,15,177,26,48,87,31,75,33,193,10,0,158,185,169,166,149,45,171,199,101,1,50,29,147,88,108,6,16,202,184,164,107,53,118,116,192,156,191,144,125,65,137,194,142,112,155,56,168,102,59,43,64,47,81,133,28,27,14,190,152,117,180,167,20,119,76,62,121,38,85,111,161,35,129,154,80,44,82,157,58,178,195,24,124,123,115,135,9,104,89,70,182,57,7,99,175,71,77,174,17,187,63,148,198,12,60,201,61,54,141,120,131,51,103,55,66,96,72,19,21,90,106,2,200,126,165,173,98,197,4,52,42,146,130,132,68,69,163,25,150} // permutation 9
};

// Seed: 60

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S1 {
    volatile int32_t g_2[4][3][2];
    int32_t g_3;
    volatile int32_t g_6;
    volatile int32_t g_7[8][10];
    volatile int32_t g_8;
    volatile int32_t g_9[6];
    volatile int32_t g_10;
    int32_t g_11;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
uint32_t  func_1(struct S1 * p_26);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_26->g_3 p_26->g_11 p_26->g_9
 * writes: p_26->g_3 p_26->g_11
 */
uint32_t  func_1(struct S1 * p_26)
{ /* block id: 4 */
    int16_t l_18[4];
    int32_t *l_19 = (void*)0;
    int32_t *l_20 = &p_26->g_3;
    int32_t *l_21 = (void*)0;
    int32_t *l_22[2][6] = {{&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11},{&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11,&p_26->g_11}};
    uint8_t l_23 = 0xB8L;
    int i, j;
    for (i = 0; i < 4; i++)
        l_18[i] = 1L;
    for (p_26->g_3 = 0; (p_26->g_3 == (-11)); p_26->g_3 = safe_sub_func_uint16_t_u_u(p_26->g_3, 1))
    { /* block id: 7 */
        uint32_t l_16 = 9UL;
        uint32_t l_17 = 0xFEAF86F2L;
        for (p_26->g_11 = 0; (p_26->g_11 <= (-16)); --p_26->g_11)
        { /* block id: 10 */
            volatile int32_t *l_15[3];
            volatile int32_t **l_14 = &l_15[1];
            int i;
            for (i = 0; i < 3; i++)
                l_15[i] = (void*)0;
            (*l_14) = &p_26->g_8;
            if (l_16)
                break;
        }
        if (l_17)
            break;
    }
    (*l_20) |= l_18[3];
    l_23++;
    return p_26->g_9[1];
}


__kernel void entry(__global ulong *result, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local int64_t l_comm_values[203];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 203; i++)
            l_comm_values[i] = 1;
    struct S1 c_27;
    struct S1* p_26 = &c_27;
    struct S1 c_28 = {
        {{{(-3L),0L},{(-3L),0L},{(-3L),0L}},{{(-3L),0L},{(-3L),0L},{(-3L),0L}},{{(-3L),0L},{(-3L),0L},{(-3L),0L}},{{(-3L),0L},{(-3L),0L},{(-3L),0L}}}, // p_26->g_2
        0x3FC88EB9L, // p_26->g_3
        (-1L), // p_26->g_6
        {{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L},{0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L,0x2A165420L,0L,0L}}, // p_26->g_7
        0L, // p_26->g_8
        {0x1DCEE34EL,0x1DCEE34EL,0x1DCEE34EL,0x1DCEE34EL,0x1DCEE34EL,0x1DCEE34EL}, // p_26->g_9
        (-7L), // p_26->g_10
        (-8L), // p_26->g_11
        sequence_input[get_global_id(0)], // p_26->global_0_offset
        sequence_input[get_global_id(1)], // p_26->global_1_offset
        sequence_input[get_global_id(2)], // p_26->global_2_offset
        sequence_input[get_local_id(0)], // p_26->local_0_offset
        sequence_input[get_local_id(1)], // p_26->local_1_offset
        sequence_input[get_local_id(2)], // p_26->local_2_offset
        sequence_input[get_group_id(0)], // p_26->group_0_offset
        sequence_input[get_group_id(1)], // p_26->group_1_offset
        sequence_input[get_group_id(2)], // p_26->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 203)), permutations[0][get_linear_local_id()])), // p_26->tid
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_27 = c_28;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_26);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    for (i = 0; i < 4; i++)
    {
        for (j = 0; j < 3; j++)
        {
            for (k = 0; k < 2; k++)
            {
                transparent_crc(p_26->g_2[i][j][k], "p_26->g_2[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_26->g_3, "p_26->g_3", print_hash_value);
    transparent_crc(p_26->g_6, "p_26->g_6", print_hash_value);
    for (i = 0; i < 8; i++)
    {
        for (j = 0; j < 10; j++)
        {
            transparent_crc(p_26->g_7[i][j], "p_26->g_7[i][j]", print_hash_value);

        }
    }
    transparent_crc(p_26->g_8, "p_26->g_8", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(p_26->g_9[i], "p_26->g_9[i]", print_hash_value);

    }
    transparent_crc(p_26->g_10, "p_26->g_10", print_hash_value);
    transparent_crc(p_26->g_11, "p_26->g_11", print_hash_value);
    transparent_crc(p_26->l_comm_values[get_linear_local_id()], "p_26->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_26->g_comm_values[get_linear_group_id() * 203 + get_linear_local_id()], "p_26->g_comm_values[get_linear_group_id() * 203 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

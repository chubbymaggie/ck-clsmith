// ---fake_divergence ---inter_thread_comm -g 5,86,1 -l 5,43,1
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][215] = {
{146,25,159,81,29,148,52,53,160,157,91,128,55,154,108,3,90,60,49,85,193,64,99,89,11,198,18,75,150,51,156,102,199,133,162,134,172,186,44,28,39,170,176,147,143,110,13,207,79,177,149,130,213,16,196,2,107,179,163,84,197,151,14,8,182,209,101,10,158,132,63,34,33,93,208,21,135,43,4,46,164,69,167,112,201,82,22,183,7,31,190,180,191,111,30,118,6,105,103,131,210,40,58,174,56,74,121,114,202,152,161,171,0,211,42,23,47,142,67,178,138,137,120,214,127,188,104,205,155,192,57,92,195,169,5,12,77,32,168,116,117,141,145,1,95,73,71,194,54,100,59,61,78,26,115,189,185,113,165,109,66,83,140,87,36,48,86,119,19,37,45,72,80,24,200,123,126,96,124,181,9,41,206,68,76,129,38,139,175,17,173,166,62,187,65,15,106,70,204,122,97,212,27,125,98,184,136,20,50,88,153,94,203,144,35}, // permutation 0
{113,199,167,36,33,11,62,131,130,195,7,169,79,105,137,109,32,93,78,160,34,52,208,39,58,38,76,23,148,67,51,73,94,43,55,22,48,57,126,31,66,37,189,83,59,138,4,197,170,46,53,140,188,65,75,27,60,17,209,68,26,114,190,194,119,15,110,191,96,8,214,151,95,166,150,125,127,106,132,181,107,25,121,1,63,193,77,0,92,99,49,112,97,142,186,54,115,88,192,111,204,202,102,179,162,85,198,117,118,12,10,163,42,103,147,212,69,64,21,40,153,35,143,6,3,174,19,175,56,139,144,50,165,123,86,184,82,141,18,5,200,13,108,161,183,72,180,74,159,172,89,30,157,20,196,203,122,14,71,213,185,116,176,80,24,145,120,47,205,70,61,41,136,211,173,16,101,91,45,90,177,2,9,29,201,182,28,187,146,149,133,171,154,164,155,81,84,158,44,156,210,98,128,178,152,135,206,168,124,207,100,129,134,104,87}, // permutation 1
{153,193,97,43,172,134,212,17,199,188,2,206,131,37,174,150,158,163,47,116,173,19,122,197,16,99,187,21,95,209,161,147,28,96,160,62,86,10,171,72,141,9,30,137,157,44,63,7,68,38,49,112,98,59,27,176,179,65,111,109,32,154,0,4,113,60,139,135,35,169,194,211,88,159,208,167,23,80,54,90,152,67,149,82,14,202,214,181,185,201,48,183,81,186,58,71,142,196,138,85,118,129,64,121,29,5,78,20,101,94,124,22,6,56,34,92,210,184,45,51,89,33,57,103,146,87,31,143,26,77,104,125,207,40,170,180,156,175,46,70,205,177,189,126,114,136,25,166,148,123,50,198,192,190,42,15,110,132,119,24,178,155,144,18,128,182,115,84,195,200,76,127,168,145,75,106,105,1,191,73,36,133,203,140,74,66,3,79,93,204,117,39,41,102,162,120,69,151,165,83,11,61,52,91,13,164,213,130,108,107,100,12,8,55,53}, // permutation 2
{37,138,102,87,82,113,79,192,195,75,35,202,106,42,4,205,152,62,207,121,19,129,92,130,193,36,47,159,32,214,183,9,18,10,146,29,201,140,141,187,115,7,22,78,77,168,46,166,167,16,132,44,39,28,88,128,133,200,124,6,51,11,80,67,45,5,65,212,198,151,181,55,86,206,98,52,40,182,25,142,194,76,26,147,114,54,204,57,41,14,69,144,110,34,17,150,30,109,95,97,117,203,176,127,13,173,126,156,94,49,131,23,136,71,60,185,125,27,177,137,180,139,123,8,104,31,111,81,84,163,161,108,91,148,210,100,63,101,85,162,154,73,208,135,134,190,48,213,33,120,157,145,12,38,112,178,58,149,59,175,3,103,21,107,20,197,66,122,116,64,90,155,188,72,56,105,119,189,174,43,211,160,96,70,196,68,164,50,2,93,99,24,74,15,169,118,61,89,1,172,186,153,53,209,158,199,179,143,83,191,170,0,184,165,171}, // permutation 3
{146,104,198,30,67,206,47,116,90,78,103,74,208,181,13,5,3,31,17,123,81,156,23,79,134,169,213,83,106,197,70,46,147,100,128,66,108,65,9,203,131,151,113,22,21,180,69,211,86,118,212,28,58,152,190,62,164,25,184,32,20,94,112,115,11,129,124,109,137,148,96,157,95,43,126,6,40,210,114,8,141,29,133,15,71,101,16,130,159,24,54,99,85,143,0,44,166,171,37,132,14,1,84,56,140,12,174,98,119,185,163,150,183,88,7,39,77,178,33,19,160,49,202,204,167,192,107,51,209,122,127,57,188,73,175,125,76,187,161,179,36,27,139,170,38,110,155,4,194,120,138,145,201,87,158,82,111,142,80,60,42,105,182,173,10,205,26,165,214,48,172,117,136,177,75,135,18,176,149,35,102,191,186,168,52,64,50,55,162,196,34,92,199,68,2,121,63,89,153,53,195,72,97,93,189,193,41,59,61,154,144,45,91,207,200}, // permutation 4
{212,145,194,81,184,49,53,175,27,19,108,39,160,162,43,28,23,148,134,146,67,129,102,136,56,2,85,37,172,89,114,182,178,59,48,35,5,211,61,123,86,144,153,120,72,94,20,197,113,125,200,124,116,14,68,79,41,189,98,119,84,91,181,185,74,110,156,135,60,54,152,161,201,36,87,31,1,167,82,75,29,92,165,168,70,190,149,40,55,150,93,195,24,126,157,18,97,21,66,13,118,11,3,115,16,128,100,104,204,15,171,154,199,203,164,76,32,214,176,12,213,206,133,80,208,42,137,90,47,132,64,62,88,121,6,107,155,207,0,179,174,163,99,71,183,209,188,147,105,38,109,138,127,44,57,158,143,205,30,96,140,139,50,33,69,106,193,51,17,10,111,45,159,180,196,202,52,78,169,131,26,7,192,95,22,198,34,142,65,191,130,25,170,63,77,166,8,173,46,83,112,177,186,210,101,122,117,9,4,58,73,187,141,151,103}, // permutation 5
{95,52,61,212,177,208,139,9,161,85,114,126,175,31,120,198,45,77,172,50,197,108,111,113,35,97,48,143,5,171,180,163,213,188,107,205,151,189,103,24,80,14,62,91,13,17,25,11,146,78,118,81,41,26,40,211,190,20,169,51,16,203,63,201,128,145,86,155,36,76,122,53,34,185,96,15,140,162,79,119,12,121,56,204,164,75,193,147,131,195,67,59,39,46,170,150,148,101,99,10,66,112,192,210,84,64,184,165,2,133,93,27,152,92,105,29,38,179,90,33,202,199,186,94,132,129,116,83,18,54,158,191,57,87,8,196,109,127,187,43,182,149,23,19,153,135,73,160,74,207,28,104,0,106,55,142,167,166,110,214,47,6,70,157,125,1,49,71,72,141,21,102,138,4,89,183,32,123,130,200,65,124,3,37,134,22,156,100,69,159,209,136,194,7,174,44,42,168,154,173,60,58,30,144,206,82,68,178,98,115,88,117,181,137,176}, // permutation 6
{178,153,75,68,16,97,17,160,7,165,84,36,124,134,2,149,200,184,31,122,50,94,72,65,37,12,115,213,14,173,44,27,188,58,51,156,42,56,41,78,136,96,135,121,53,62,158,0,63,116,70,154,103,199,100,101,98,76,45,161,71,198,55,159,183,195,73,4,162,202,167,82,145,30,182,128,87,38,170,148,119,54,211,114,146,64,40,59,140,176,172,137,174,214,139,92,113,117,212,179,152,132,33,112,60,118,5,150,46,89,105,34,24,13,189,81,10,6,80,194,52,207,177,8,21,90,83,49,186,111,69,175,126,181,164,108,180,192,187,208,210,66,93,143,43,209,141,163,22,57,79,206,28,193,147,95,127,197,9,185,11,203,106,144,91,74,204,191,151,19,47,110,99,1,3,131,102,29,196,61,166,125,120,18,35,201,88,138,130,109,48,86,25,20,26,157,15,205,171,67,85,39,77,104,155,142,133,168,107,129,169,23,190,123,32}, // permutation 7
{211,35,44,19,25,21,138,148,175,149,20,134,90,83,158,127,113,95,195,66,23,152,163,145,24,11,22,42,97,118,50,139,67,150,70,51,172,6,194,49,7,78,214,144,143,120,110,191,102,210,9,107,53,121,36,54,10,186,32,38,161,2,105,91,26,13,115,71,39,147,31,153,188,98,5,207,63,45,96,106,85,179,156,197,62,167,119,142,181,151,99,206,81,184,169,176,132,133,72,55,187,27,126,16,199,18,73,205,108,88,192,198,12,201,75,166,3,8,162,34,170,4,204,82,17,136,28,47,94,77,92,46,200,160,183,174,114,101,209,41,154,15,129,64,0,173,37,1,182,123,76,112,141,58,135,178,57,87,208,69,157,125,56,164,185,130,52,165,177,30,212,48,109,74,29,159,116,86,103,89,40,43,168,190,79,180,111,117,122,100,137,196,203,193,128,155,93,146,59,33,124,80,65,60,131,213,68,202,171,140,104,189,61,14,84}, // permutation 8
{41,167,70,22,166,171,131,104,143,189,147,155,2,8,136,100,144,23,128,31,56,180,173,206,204,68,179,198,186,176,126,145,177,91,125,185,134,199,88,42,77,159,181,164,200,174,61,62,107,90,75,194,142,74,52,96,158,93,156,46,99,119,57,30,207,86,210,146,138,109,188,4,124,43,59,135,201,13,120,192,53,202,101,39,36,34,172,193,170,45,83,113,139,168,76,40,141,151,32,19,27,49,38,195,6,67,149,21,98,197,20,137,163,203,116,29,212,37,48,87,123,17,169,187,196,117,97,121,103,211,0,95,15,12,157,66,24,9,72,33,148,81,63,7,55,161,92,50,105,191,3,184,122,152,205,10,94,132,102,11,1,60,18,175,80,47,133,85,129,14,44,28,111,73,108,71,110,154,150,114,82,51,69,190,58,16,89,214,153,183,182,65,208,25,209,115,213,160,54,35,118,84,162,79,26,5,106,178,140,112,127,130,78,165,64} // permutation 9
};

// Seed: 49

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
   volatile uint32_t  f0;
   volatile int64_t  f1;
   uint8_t  f2;
   volatile int16_t  f3;
};

union U1 {
   int64_t  f0;
   uint32_t  f1;
   uint32_t  f2;
   uint16_t  f3;
};

union U2 {
   volatile uint8_t  f0;
   int8_t  f1;
};

struct S3 {
    int64_t *g_34;
    int64_t *g_36;
    int64_t *g_37;
    int64_t g_59;
    union U2 g_68;
    int32_t g_72;
    int32_t g_80[3][8];
    int32_t * volatile g_84;
    int32_t *g_97;
    int32_t ** volatile g_96[10][1];
    uint16_t g_136;
    uint16_t g_138;
    volatile struct S0 g_140;
    uint64_t g_154;
    uint64_t *g_161;
    uint64_t *g_163;
    int32_t g_190;
    volatile struct S0 g_204;
    int16_t g_212;
    uint64_t **g_220;
    volatile union U2 g_224;
    uint64_t **g_225;
    union U1 g_238;
    union U1 *g_237;
    volatile int64_t g_246[3];
    volatile int64_t *g_245;
    volatile int64_t ** volatile g_244[7][6];
    volatile int64_t ** volatile * volatile g_243[8];
    uint32_t g_248;
    uint16_t g_266;
    uint8_t g_273[7];
    volatile union U2 *g_301;
    uint8_t *g_310;
    uint8_t **g_309;
    uint8_t *** volatile g_308;
    uint32_t g_343;
    int16_t g_358[2][9][3];
    union U2 *g_410[2][5];
    uint16_t g_411;
    struct S0 g_412;
    struct S0 * volatile g_414;
    uint8_t *** volatile g_418;
    struct S0 g_450;
    int32_t ** volatile g_498[6];
    int32_t ** volatile g_565;
    struct S0 g_573;
    int32_t g_574[5];
    struct S0 g_584[7][8][4];
    int32_t ** volatile g_598;
    int32_t ** volatile g_610;
    int32_t ** volatile g_622;
    int32_t ** volatile g_623;
    uint32_t g_638;
    uint32_t g_677;
    struct S0 g_712;
    struct S0 g_714;
    struct S0 g_736;
    volatile struct S0 *g_752;
    volatile struct S0 **g_751;
    int64_t g_761;
    uint8_t g_771;
    volatile struct S0 g_801[6];
    int32_t ** volatile g_802;
    volatile int32_t g_880;
    volatile int32_t *g_879;
    volatile int32_t ** volatile g_881;
    volatile int8_t * volatile * volatile g_949;
    int32_t ** volatile g_961;
    volatile int32_t ** volatile g_962;
    int32_t g_963;
    union U1 g_965[6];
    volatile union U2 ** volatile g_966;
    int16_t *g_989;
    int16_t **g_988;
    volatile struct S0 g_994;
    volatile struct S0 g_996;
    union U2 **g_1011;
    int32_t ** volatile g_1022[1][2][2];
    struct S0 g_1042;
    struct S0 * volatile g_1043[6];
    struct S0 * volatile g_1045;
    struct S0 * volatile g_1046;
    int32_t ** volatile g_1047;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
uint32_t  func_1(struct S3 * p_1048);
struct S0  func_2(uint32_t  p_3, union U1  p_4, uint64_t  p_5, struct S3 * p_1048);
uint32_t  func_6(uint32_t  p_7, int32_t  p_8, int64_t  p_9, struct S3 * p_1048);
uint8_t  func_29(int64_t  p_30, int64_t * p_31, int64_t * p_32, int64_t * p_33, struct S3 * p_1048);
int64_t * func_38(int64_t * p_39, int64_t  p_40, uint64_t  p_41, struct S3 * p_1048);
int64_t  func_43(int32_t  p_44, struct S3 * p_1048);
int8_t  func_47(int32_t  p_48, int32_t  p_49, int64_t * p_50, int64_t * p_51, int64_t ** p_52, struct S3 * p_1048);
int16_t  func_54(int64_t ** p_55, struct S3 * p_1048);
int64_t ** func_56(int64_t * p_57, struct S3 * p_1048);
int64_t ** func_60(int64_t ** p_61, uint32_t  p_62, struct S3 * p_1048);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_1048->l_comm_values p_1048->g_34 p_1048->g_comm_values p_1048->g_68 p_1048->g_72 p_1048->g_68.f0 p_1048->g_80 p_1048->g_68.f1 p_1048->g_84 p_1048->g_59 p_1048->g_97 p_1048->g_161 p_1048->g_154 p_1048->g_140.f1 p_1048->g_136 p_1048->g_163 p_1048->g_204 p_1048->g_224 p_1048->g_225 p_1048->g_212 p_1048->g_140.f3 p_1048->g_237 p_1048->g_243 p_1048->g_246 p_1048->g_266 p_1048->g_138 p_1048->g_245 p_1048->g_308 p_1048->g_273 p_1048->g_238 p_1048->g_238.f3 p_1048->g_573 p_1048->g_414 p_1048->g_248 p_1048->g_343 p_1048->g_574 p_1048->g_963 p_1048->g_965 p_1048->g_736.f2 p_1048->g_966 p_1048->g_638 p_1048->g_1042 p_1048->g_1046 p_1048->g_1047 p_1048->g_736.f3
 * writes: p_1048->g_36 p_1048->g_37 p_1048->g_72 p_1048->g_80 p_1048->g_68.f1 p_1048->g_59 p_1048->g_97 p_1048->g_163 p_1048->g_138 p_1048->g_190 p_1048->g_154 p_1048->g_136 p_1048->g_220 p_1048->g_237 p_1048->g_238.f0 p_1048->g_212 p_1048->g_273 p_1048->g_301 p_1048->g_309 p_1048->g_238.f3 p_1048->g_412.f0 p_1048->g_204.f3 p_1048->g_96 p_1048->g_412 p_1048->g_574 p_1048->g_638 p_1048->g_584
 */
uint32_t  func_1(struct S3 * p_1048)
{ /* block id: 4 */
    uint64_t l_12 = 0x1D0188753E1E01B1L;
    int64_t *l_13 = (void*)0;
    int64_t *l_14 = (void*)0;
    int64_t *l_15 = (void*)0;
    int64_t *l_16 = (void*)0;
    int64_t *l_17 = (void*)0;
    int64_t *l_18 = (void*)0;
    int64_t *l_19 = (void*)0;
    int64_t *l_20 = (void*)0;
    int64_t *l_21[3][9] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
    int32_t l_22[6][3][10] = {{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}},{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}},{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}},{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}},{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}},{{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L},{5L,1L,4L,9L,0x48E12B6AL,(-5L),0x0A0F8393L,0x5700D1A0L,0x30E88FEFL,0L}}};
    int64_t **l_35[9][5][2] = {{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}},{{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13},{&l_21[1][8],&l_13}}};
    int32_t l_42 = 1L;
    int32_t l_570 = 6L;
    uint32_t *l_964[3];
    struct S0 *l_1044 = (void*)0;
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_964[i] = &p_1048->g_638;
    (*p_1048->g_1046) = func_2((p_1048->g_638 = func_6((p_1048->g_574[1] ^= (safe_add_func_int32_t_s_s(((l_22[5][0][6] = (0x27L & l_12)) == (safe_rshift_func_int16_t_s_u((safe_add_func_int64_t_s_s((safe_rshift_func_uint8_t_u_u(func_29(p_1048->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))], p_1048->g_34, (p_1048->g_37 = (p_1048->g_36 = p_1048->g_34)), func_38(p_1048->g_34, ((l_42 &= 18446744073709551608UL) <= (l_570 = func_43(p_1048->g_comm_values[p_1048->tid], p_1048))), l_12, p_1048), p_1048), 4)), p_1048->g_248)), 15))), p_1048->g_343))), p_1048->g_573.f2, p_1048->g_266, p_1048)), p_1048->g_965[0], p_1048->g_736.f2, p_1048);
    (*p_1048->g_1047) = &l_570;
    (*p_1048->g_1047) = &l_42;
    return p_1048->g_736.f3;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_966 p_1048->g_638 p_1048->g_1042
 * writes: p_1048->g_301 p_1048->g_638
 */
struct S0  func_2(uint32_t  p_3, union U1  p_4, uint64_t  p_5, struct S3 * p_1048)
{ /* block id: 551 */
    uint16_t l_991 = 0UL;
    int8_t l_992 = (-1L);
    union U2 **l_1015[1][8][9] = {{{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]},{&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],(void*)0,&p_1048->g_410[1][3],&p_1048->g_410[0][0],&p_1048->g_410[1][3],&p_1048->g_410[1][3],&p_1048->g_410[0][4]}}};
    int32_t *l_1016 = (void*)0;
    int16_t **l_1029 = (void*)0;
    int8_t l_1040 = 1L;
    int i, j, k;
    (*p_1048->g_966) = &p_1048->g_224;
    for (p_1048->g_638 = 0; (p_1048->g_638 >= 17); p_1048->g_638 = safe_add_func_int16_t_s_s(p_1048->g_638, 3))
    { /* block id: 555 */
        uint32_t l_971 = 0x3611FDD3L;
        int32_t *l_972 = (void*)0;
        (1 + 1);
    }
    return p_1048->g_1042;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_963
 * writes:
 */
uint32_t  func_6(uint32_t  p_7, int32_t  p_8, int64_t  p_9, struct S3 * p_1048)
{ /* block id: 284 */
    int32_t l_579 = 0x344950D6L;
    uint64_t *l_582 = &p_1048->g_154;
    union U1 l_585[7] = {{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L},{0x0E0F1795CB5C9C67L}};
    uint16_t *l_592 = &p_1048->g_136;
    int8_t l_595 = 6L;
    union U1 *l_596[2][4][9] = {{{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]}},{{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]},{&l_585[2],&p_1048->g_238,&l_585[6],&l_585[1],&p_1048->g_238,&l_585[2],&l_585[2],&p_1048->g_238,&l_585[1]}}};
    int32_t *l_621[3][9][1] = {{{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0}},{{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0}},{{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0}}};
    int32_t l_625 = 0L;
    uint8_t l_634 = 253UL;
    uint8_t l_709 = 0x60L;
    int64_t l_756 = 0x736ED41FF5463404L;
    uint16_t l_936 = 5UL;
    uint32_t l_947[9] = {0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L,0xE58B06B1L};
    uint16_t l_953 = 0xF21FL;
    int i, j, k;
    return p_1048->g_963;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_573 p_1048->g_414
 * writes: p_1048->g_412
 */
uint8_t  func_29(int64_t  p_30, int64_t * p_31, int64_t * p_32, int64_t * p_33, struct S3 * p_1048)
{ /* block id: 280 */
    (*p_1048->g_414) = p_1048->g_573;
    return p_30;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_154
 * writes: p_1048->g_154 p_1048->g_412.f0 p_1048->g_204.f3 p_1048->g_96
 */
int64_t * func_38(int64_t * p_39, int64_t  p_40, uint64_t  p_41, struct S3 * p_1048)
{ /* block id: 271 */
    int32_t l_572 = 0x398DAD9AL;
    for (p_1048->g_154 = 0; (p_1048->g_154 <= 1); p_1048->g_154 += 1)
    { /* block id: 274 */
        for (p_1048->g_412.f0 = 0; p_1048->g_412.f0 < 10; p_1048->g_412.f0 += 1)
        {
            for (p_1048->g_204.f3 = 0; p_1048->g_204.f3 < 1; p_1048->g_204.f3 += 1)
            {
                p_1048->g_96[p_1048->g_412.f0][p_1048->g_204.f3] = &p_1048->g_97;
            }
        }
        return &p_1048->g_59;
    }
    l_572 = (safe_unary_minus_func_uint64_t_u(l_572));
    return &p_1048->g_59;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_comm_values p_1048->g_68 p_1048->g_72 p_1048->g_68.f0 p_1048->l_comm_values p_1048->g_80 p_1048->g_68.f1 p_1048->g_84 p_1048->g_59 p_1048->g_97 p_1048->g_161 p_1048->g_154 p_1048->g_140.f1 p_1048->g_136 p_1048->g_163 p_1048->g_204 p_1048->g_224 p_1048->g_225 p_1048->g_212 p_1048->g_140.f3 p_1048->g_237 p_1048->g_243 p_1048->g_246 p_1048->g_266 p_1048->g_138 p_1048->g_245 p_1048->g_308 p_1048->g_273 p_1048->g_238 p_1048->g_238.f3
 * writes: p_1048->g_72 p_1048->g_80 p_1048->g_68.f1 p_1048->g_59 p_1048->g_97 p_1048->g_163 p_1048->g_138 p_1048->g_190 p_1048->g_154 p_1048->g_136 p_1048->g_220 p_1048->g_237 p_1048->g_238.f0 p_1048->g_212 p_1048->g_273 p_1048->g_301 p_1048->g_309 p_1048->g_238.f3
 */
int64_t  func_43(int32_t  p_44, struct S3 * p_1048)
{ /* block id: 9 */
    int16_t l_53 = 3L;
    int64_t *l_58[4] = {&p_1048->g_59,&p_1048->g_59,&p_1048->g_59,&p_1048->g_59};
    int64_t *l_192[8][2][7] = {{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}},{{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}}};
    int64_t *l_193 = (void*)0;
    int32_t **l_566 = &p_1048->g_97;
    uint16_t l_569 = 1UL;
    int i, j, k;
    p_44 = ((((0xB6ADD7081DC493A7L < ((safe_sub_func_int8_t_s_s(func_47((p_1048->g_comm_values[p_1048->tid] > 18446744073709551613UL), (l_53 , (func_54(func_56((l_58[0] = (void*)0), p_1048), p_1048) || (p_44 != p_44))), l_192[1][0][1], l_193, &l_193, p_1048), l_53)) && (*p_1048->g_163))) , 1L) , p_44) , (*p_1048->g_97));
    (*l_566) = &p_44;
    for (p_1048->g_238.f3 = (-5); (p_1048->g_238.f3 < 46); ++p_1048->g_238.f3)
    { /* block id: 266 */
        return p_44;
    }
    return l_569;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_163 p_1048->g_154 p_1048->g_204 p_1048->g_comm_values p_1048->g_224 p_1048->g_225 p_1048->g_140.f1 p_1048->g_84 p_1048->g_80 p_1048->g_212 p_1048->g_161 p_1048->g_72 p_1048->g_140.f3 p_1048->g_237 p_1048->g_243 p_1048->g_246 p_1048->g_266 p_1048->g_68.f1 p_1048->g_138 p_1048->g_245 p_1048->g_308 p_1048->g_273 p_1048->g_238 p_1048->g_97 p_1048->g_59 p_1048->l_comm_values
 * writes: p_1048->g_154 p_1048->g_136 p_1048->g_220 p_1048->g_72 p_1048->g_190 p_1048->g_80 p_1048->g_237 p_1048->g_238.f0 p_1048->g_212 p_1048->g_273 p_1048->g_138 p_1048->g_301 p_1048->g_309 p_1048->g_238.f3
 */
int8_t  func_47(int32_t  p_48, int32_t  p_49, int64_t * p_50, int64_t * p_51, int64_t ** p_52, struct S3 * p_1048)
{ /* block id: 93 */
    uint64_t **l_194 = &p_1048->g_163;
    int32_t l_197 = 0x0B3495F2L;
    int64_t l_209 = 0x5E5B9BBD235115D6L;
    int32_t l_213 = 0x2193FA8DL;
    int32_t *l_222 = &p_1048->g_80[2][3];
    int32_t l_223 = 0x1A9F0981L;
    int32_t l_226 = 0x1802581AL;
    union U1 l_291[6][3][7] = {{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}},{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}},{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}},{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}},{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}},{{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}},{{1L},{1L},{-1L},{-5L},{0x660102FAF71C8740L},{0x429A087F769C6632L},{0L}}}};
    uint8_t *l_307 = &p_1048->g_273[6];
    uint8_t **l_306[2][8][2] = {{{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307}},{{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307},{&l_307,&l_307}}};
    int32_t l_316 = 0L;
    int32_t l_317[7];
    uint64_t l_326 = 1UL;
    uint32_t l_341 = 1UL;
    union U1 **l_464 = &p_1048->g_237;
    union U2 *l_530 = &p_1048->g_68;
    struct S0 *l_560[5][5][6] = {{{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450}},{{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450}},{{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450}},{{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450}},{{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450},{(void*)0,(void*)0,&p_1048->g_450,&p_1048->g_412,(void*)0,&p_1048->g_450}}};
    struct S0 **l_559 = &l_560[2][2][1];
    struct S0 ***l_558[3];
    uint32_t l_564[5];
    int i, j, k;
    for (i = 0; i < 7; i++)
        l_317[i] = (-9L);
    for (i = 0; i < 3; i++)
        l_558[i] = &l_559;
    for (i = 0; i < 5; i++)
        l_564[i] = 0x8AA1EB59L;
    if ((l_194 == l_194))
    { /* block id: 94 */
        uint16_t *l_210 = &p_1048->g_136;
        int16_t *l_211[6][5] = {{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212},{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212},{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212},{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212},{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212},{&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,(void*)0,&p_1048->g_212}};
        uint64_t **l_219 = &p_1048->g_163;
        uint64_t ***l_218[1];
        int32_t **l_221[9][2] = {{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97},{&p_1048->g_97,&p_1048->g_97}};
        int i, j;
        for (i = 0; i < 1; i++)
            l_218[i] = &l_219;
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        p_1048->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 215)), permutations[(safe_mod_func_uint32_t_u_u((safe_lshift_func_uint16_t_u_s((!(l_197 != ((**l_194) = (*p_1048->g_163)))), 4)), 10))][(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))]));
        p_1048->g_72 |= ((safe_lshift_func_uint16_t_u_u((((((safe_add_func_int8_t_s_s((+0x40L), (p_1048->g_204 , (safe_rshift_func_int8_t_s_s(p_48, (+(safe_lshift_func_uint8_t_u_s(((((*l_210) = l_209) >= (l_213 = p_49)) ^ (safe_mul_func_int8_t_s_s((((safe_mul_func_int16_t_s_s((((p_1048->g_comm_values[p_1048->tid] < ((p_1048->g_220 = l_194) != (((((l_222 = &l_197) != ((l_223 = (255UL >= 251UL)) , &l_223)) , p_1048->g_224) , p_1048->g_204.f0) , p_1048->g_225))) && p_1048->g_140.f1) >= l_226), l_209)) == l_226) || (*p_1048->g_84)), p_1048->g_212))), p_48)))))))) <= 0x2329L) || (*p_1048->g_161)) , FAKE_DIVERGE(p_1048->group_1_offset, get_group_id(1), 10)) | 0x7D709BB6L), p_49)) && 0UL);
    }
    else
    { /* block id: 105 */
        int64_t *l_232 = (void*)0;
        int32_t l_236 = 0x76C5CB49L;
        union U1 *l_240 = (void*)0;
        int32_t *l_277 = &p_1048->g_72;
        int16_t l_290 = 1L;
        int32_t l_318 = (-1L);
        int32_t l_319 = (-1L);
        int32_t l_320 = 0L;
        int32_t l_321 = 0L;
        int32_t l_322 = 6L;
        int32_t l_324[1];
        int32_t *l_334 = (void*)0;
        int i;
        for (i = 0; i < 1; i++)
            l_324[i] = 0L;
        for (p_48 = 0; (p_48 <= (-6)); p_48--)
        { /* block id: 108 */
            int64_t l_233 = 0x79E89E9252BB6930L;
            int32_t l_280 = (-5L);
            uint32_t l_281 = 0x75A65928L;
            struct S0 *l_299 = (void*)0;
            int32_t *l_313 = &p_1048->g_80[2][3];
            int32_t *l_314 = (void*)0;
            int32_t *l_315[3];
            int8_t l_323[9][1][5] = {{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}},{{1L,1L,0x69L,0x58L,0x6EL}}};
            int32_t l_325[1][9] = {{0x7320E88AL,(-1L),0x7320E88AL,0x7320E88AL,(-1L),0x7320E88AL,0x7320E88AL,(-1L),0x7320E88AL}};
            int32_t **l_333[5];
            uint32_t *l_335 = &l_281;
            uint32_t *l_336[5][3][1];
            int i, j, k;
            for (i = 0; i < 3; i++)
                l_315[i] = (void*)0;
            for (i = 0; i < 5; i++)
                l_333[i] = &l_277;
            for (i = 0; i < 5; i++)
            {
                for (j = 0; j < 3; j++)
                {
                    for (k = 0; k < 1; k++)
                        l_336[i][j][k] = &p_1048->g_248;
                }
            }
            for (l_213 = 0; (l_213 >= 0); l_213 -= 1)
            { /* block id: 111 */
                int32_t *l_231 = &p_1048->g_190;
                int64_t *l_271[9] = {&l_209,&l_209,&l_209,&l_209,&l_209,&l_209,&l_209,&l_209,&l_209};
                uint64_t **l_276 = (void*)0;
                int i, j;
                if (((*l_222) = ((p_48 || p_49) >= (0xF4957EAFF6CA641DL > (safe_mod_func_int32_t_s_s(((p_48 != ((*p_52) != (((*l_231) = (-1L)) , l_232))) , p_48), l_233))))))
                { /* block id: 114 */
                    union U1 **l_239 = &p_1048->g_237;
                    uint32_t *l_247[6] = {(void*)0,&p_1048->g_248,(void*)0,(void*)0,&p_1048->g_248,(void*)0};
                    int32_t l_249 = (-1L);
                    int32_t l_250 = 0x6757407DL;
                    int32_t l_294[5][2];
                    int i, j;
                    for (i = 0; i < 5; i++)
                    {
                        for (j = 0; j < 2; j++)
                            l_294[i][j] = (-4L);
                    }
                    if (((*l_222) = (p_49 < ((p_1048->g_140.f3 , (0x77FB3CA9L > (l_236 = (((l_249 = ((safe_sub_func_int16_t_s_s(l_236, 0x18A9L)) > (p_48 , ((((*l_239) = p_1048->g_237) != l_240) >= ((((safe_sub_func_uint32_t_u_u(p_49, 0xA6D4A181L)) | 1UL) , p_1048->g_243[1]) != &p_52))))) == l_250) <= (*l_222))))) != l_250))))
                    { /* block id: 119 */
                        int64_t *l_257 = &p_1048->g_238.f0;
                        int16_t *l_259 = &p_1048->g_212;
                        int64_t *l_267 = &l_209;
                        int32_t *l_268[7] = {&p_1048->g_72,&p_1048->g_72,&p_1048->g_72,&p_1048->g_72,&p_1048->g_72,&p_1048->g_72,&p_1048->g_72};
                        int i;
                        p_1048->g_72 ^= (safe_lshift_func_uint16_t_u_s(((~((safe_add_func_uint8_t_u_u((safe_add_func_int64_t_s_s(((*l_257) = (*l_222)), (-9L))), (l_233 || p_48))) && (safe_unary_minus_func_uint32_t_u((p_49 == ((*l_259) = l_236)))))) <= (safe_add_func_int64_t_s_s(((*l_267) = (l_249 || (p_1048->g_246[0] < (safe_mul_func_int8_t_s_s((&p_1048->g_59 == &l_233), p_1048->g_266))))), (*p_1048->g_163)))), 10));
                        if (p_49)
                            break;
                    }
                    else
                    { /* block id: 125 */
                        uint8_t *l_272[2][8] = {{&p_1048->g_273[2],&p_1048->g_273[4],&p_1048->g_273[2],&p_1048->g_273[2],&p_1048->g_273[4],&p_1048->g_273[2],&p_1048->g_273[2],&p_1048->g_273[4]},{&p_1048->g_273[2],&p_1048->g_273[4],&p_1048->g_273[2],&p_1048->g_273[2],&p_1048->g_273[4],&p_1048->g_273[2],&p_1048->g_273[2],&p_1048->g_273[4]}};
                        int i, j;
                        l_250 = ((*l_222) = ((((*l_239) != &p_1048->g_238) >= (((safe_lshift_func_int8_t_s_u(((p_1048->g_273[6] = ((*p_52) != l_271[0])) == ((safe_mul_func_int8_t_s_s(l_233, p_1048->g_68.f1)) ^ (p_1048->g_comm_values[p_1048->tid] , (!(l_276 != l_276))))), 1)) && p_1048->g_212) ^ 0xB389C633L)) < 0x78A0L));
                        l_277 = &p_48;
                        if ((*p_1048->g_84))
                            break;
                        if (p_49)
                            break;
                    }
                    if (((*l_222) = (-8L)))
                    { /* block id: 134 */
                        int32_t *l_278 = &l_250;
                        int32_t *l_279[8][1];
                        int16_t *l_295 = (void*)0;
                        int16_t *l_296[8] = {&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,&p_1048->g_212,&p_1048->g_212};
                        int i, j;
                        for (i = 0; i < 8; i++)
                        {
                            for (j = 0; j < 1; j++)
                                l_279[i][j] = &l_249;
                        }
                        l_281++;
                        (*l_278) ^= ((0x1B27L & (l_280 = (p_1048->g_68.f1 && (((safe_lshift_func_int8_t_s_u(((safe_rshift_func_uint16_t_u_u((safe_rshift_func_int16_t_s_s(l_290, 10)), 10)) >= p_1048->g_comm_values[p_1048->tid]), ((p_1048->g_138 <= ((l_291[4][1][0] , ((*p_1048->g_245) && (((safe_lshift_func_uint8_t_u_u(p_48, 3)) == (((((*p_52) = (*p_52)) == p_51) > p_48) , l_294[2][0])) && p_49))) , 0UL)) || p_1048->g_204.f0))) && 1UL) != 0xC5L)))) || 4294967295UL);
                    }
                    else
                    { /* block id: 139 */
                        return p_1048->g_204.f0;
                    }
                    for (p_1048->g_138 = (-9); (p_1048->g_138 != 7); p_1048->g_138++)
                    { /* block id: 144 */
                        struct S0 **l_300 = &l_299;
                        (*l_300) = l_299;
                    }
                }
                else
                { /* block id: 147 */
                    int32_t *l_304 = (void*)0;
                    p_1048->g_301 = &p_1048->g_224;
                    for (l_233 = 0; (l_233 >= (-15)); --l_233)
                    { /* block id: 151 */
                        int32_t **l_305 = &l_304;
                        (*l_305) = l_304;
                        (*p_1048->g_308) = l_306[1][1][1];
                        return p_1048->g_273[4];
                    }
                    for (p_1048->g_238.f3 = 0; (p_1048->g_238.f3 != 29); ++p_1048->g_238.f3)
                    { /* block id: 158 */
                        (*l_222) = l_233;
                    }
                }
            }
            l_326--;
            l_223 ^= (safe_rshift_func_uint8_t_u_u(((*p_1048->g_237) , ((p_48 != (l_318 = ((*l_335) = (safe_lshift_func_int16_t_s_s(p_49, ((*p_1048->g_97) >= ((l_277 = &l_317[0]) == (l_334 = &p_48)))))))) | (safe_add_func_int32_t_s_s((-1L), (safe_div_func_uint16_t_u_u((65529UL ^ ((*l_222) > l_341)), 0xA69CL)))))), p_48));
        }
    }
    if ((((*l_222) &= p_1048->g_59) & p_1048->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))]))
    { /* block id: 172 */
        int32_t *l_342 = &p_1048->g_72;
        int i, j;
        (*l_342) &= (*l_222);
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        p_1048->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 215)), permutations[(safe_mod_func_uint32_t_u_u(9UL, 10))][(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))]));
    }
    else
    { /* block id: 177 */
        int64_t l_348 = (-4L);
        int16_t *l_355 = &p_1048->g_212;
        int32_t l_356 = 0x2462DA25L;
        int16_t *l_357 = &p_1048->g_358[1][3][2];
        int32_t *l_359 = &p_1048->g_190;
        int32_t *l_360 = &l_316;
        int32_t l_387 = (-8L);
        union U2 *l_398[8][2] = {{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0},{(void*)0,(void*)0}};
        uint16_t l_436 = 65533UL;
        int32_t *l_455 = &p_1048->g_190;
        int32_t l_471 = 0x28135809L;
        int32_t l_473 = 0x0DC056ECL;
        int32_t l_474 = 0x49186F91L;
        int32_t l_476 = 3L;
        int32_t l_478[7];
        struct S0 *l_516 = &p_1048->g_412;
        struct S0 **l_515 = &l_516;
        uint64_t **l_517[2];
        uint32_t l_538 = 0x41C5B854L;
        int i, j;
        for (i = 0; i < 7; i++)
            l_478[i] = 0x241F9B21L;
        for (i = 0; i < 2; i++)
            l_517[i] = &p_1048->g_163;
        (1 + 1);
    }
    return l_564[1];
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_163 p_1048->g_154 p_1048->g_72 p_1048->g_comm_values p_1048->g_59 p_1048->g_97 p_1048->g_80
 * writes: p_1048->g_190 p_1048->g_80
 */
int16_t  func_54(int64_t ** p_55, struct S3 * p_1048)
{ /* block id: 89 */
    uint16_t *l_179 = &p_1048->g_136;
    int32_t *l_180 = &p_1048->g_72;
    int32_t *l_188 = (void*)0;
    int32_t *l_189 = &p_1048->g_190;
    int8_t l_191 = 8L;
    (*p_1048->g_97) &= ((safe_sub_func_int8_t_s_s(((void*)0 == l_179), (l_180 == ((((safe_mul_func_uint16_t_u_u(((safe_mod_func_uint16_t_u_u((safe_lshift_func_int8_t_s_s(((safe_unary_minus_func_uint64_t_u((*p_1048->g_163))) & (!((*l_180) , (((*l_189) = ((0xE2L == ((GROUP_DIVERGE(2, 1) ^ 0x67762DA6596622A9L) <= (*l_180))) , (*l_180))) , 0x12F1B8ECEDB7DDFEL)))), p_1048->g_comm_values[p_1048->tid])), p_1048->g_59)) | FAKE_DIVERGE(p_1048->local_0_offset, get_local_id(0), 10)), (*l_180))) != l_191) >= (*l_180)) , (void*)0)))) < (*l_180));
    return (*l_180);
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_comm_values p_1048->g_68 p_1048->g_72 p_1048->g_68.f0 p_1048->l_comm_values p_1048->g_80 p_1048->g_68.f1 p_1048->g_84 p_1048->g_59 p_1048->g_97 p_1048->g_161 p_1048->g_154 p_1048->g_140.f1 p_1048->g_136
 * writes: p_1048->g_72 p_1048->g_80 p_1048->g_68.f1 p_1048->g_59 p_1048->g_97 p_1048->g_163 p_1048->g_138
 */
int64_t ** func_56(int64_t * p_57, struct S3 * p_1048)
{ /* block id: 11 */
    uint32_t l_67 = 0x2BA733A7L;
    int32_t *l_71 = &p_1048->g_72;
    int64_t **l_75 = &p_1048->g_34;
    int64_t ***l_76 = &l_75;
    uint8_t l_77 = 255UL;
    uint32_t l_78 = 5UL;
    uint64_t *l_79 = (void*)0;
    int32_t l_101 = 1L;
    int32_t l_103 = 0L;
    int32_t l_108 = 2L;
    int32_t l_109 = (-9L);
    int32_t l_110 = (-9L);
    uint32_t l_111 = 4294967295UL;
    (*l_76) = func_60(&p_1048->g_34, ((p_1048->g_80[2][3] &= (safe_rshift_func_uint8_t_u_s(((safe_sub_func_uint64_t_u_u(((~(((p_1048->g_comm_values[p_1048->tid] ^ l_67) , p_1048->g_68) , (((l_67 || FAKE_DIVERGE(p_1048->local_0_offset, get_local_id(0), 10)) ^ (((((((l_67 ^ (safe_sub_func_int16_t_s_s((((l_67 , (((*l_71) |= (-1L)) | (safe_mod_func_int16_t_s_s((((*l_76) = l_75) != (void*)0), p_1048->g_68.f0)))) | 3L) <= GROUP_DIVERGE(2, 1)), l_67))) || FAKE_DIVERGE(p_1048->local_1_offset, get_local_id(1), 10)) , 4294967295UL) | 0x788EE36BL) <= l_67) <= l_77) != p_1048->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))])) >= 0xBDL))) && 0L), p_1048->g_comm_values[p_1048->tid])) >= l_78), p_1048->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1048->tid, 215))]))) || (*l_71)), p_1048);
    (*l_71) = ((safe_add_func_int8_t_s_s(p_1048->g_59, p_1048->g_59)) || 0x49A3L);
    for (p_1048->g_68.f1 = 2; (p_1048->g_68.f1 >= 0); p_1048->g_68.f1 -= 1)
    { /* block id: 38 */
        int32_t **l_95 = &l_71;
        int32_t **l_98 = &p_1048->g_97;
        int32_t l_100 = 1L;
        int32_t l_102 = 0x6480CDBFL;
        int32_t l_104[3];
        int i;
        for (i = 0; i < 3; i++)
            l_104[i] = (-5L);
        (*l_98) = ((*l_95) = &p_1048->g_80[1][7]);
        if ((*p_1048->g_97))
            continue;
        for (l_78 = 0; (l_78 <= 2); l_78 += 1)
        { /* block id: 44 */
            int32_t *l_99[4][3] = {{&p_1048->g_80[1][2],&p_1048->g_80[l_78][(p_1048->g_68.f1 + 3)],&p_1048->g_80[0][2]},{&p_1048->g_80[1][2],&p_1048->g_80[l_78][(p_1048->g_68.f1 + 3)],&p_1048->g_80[0][2]},{&p_1048->g_80[1][2],&p_1048->g_80[l_78][(p_1048->g_68.f1 + 3)],&p_1048->g_80[0][2]},{&p_1048->g_80[1][2],&p_1048->g_80[l_78][(p_1048->g_68.f1 + 3)],&p_1048->g_80[0][2]}};
            uint32_t l_105 = 1UL;
            int32_t l_150 = 0x465C19EBL;
            uint64_t l_151[6];
            uint64_t **l_162 = &l_79;
            union U1 l_168 = {0x01FF659E5E0E0025L};
            union U1 *l_169 = &l_168;
            uint16_t *l_176[7][3] = {{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0},{&p_1048->g_138,&p_1048->g_136,(void*)0}};
            int i, j;
            for (i = 0; i < 6; i++)
                l_151[i] = 5UL;
            ++l_105;
            ++l_111;
            for (l_77 = 0; (l_77 <= 2); l_77 += 1)
            { /* block id: 49 */
                uint32_t l_134 = 0UL;
                int32_t l_143[8] = {0x0B7478A2L,0x0B7478A2L,0x0B7478A2L,0x0B7478A2L,0x0B7478A2L,0x0B7478A2L,0x0B7478A2L,0x0B7478A2L};
                int i;
                (1 + 1);
            }
            l_109 |= (((p_1048->g_163 = ((*l_162) = p_1048->g_161)) == (void*)0) < (safe_sub_func_uint8_t_u_u(((*l_71) , (safe_mul_func_int8_t_s_s(p_1048->g_80[2][3], (((*l_169) = l_168) , ((~(*p_1048->g_161)) , (safe_rshift_func_uint16_t_u_u((p_1048->g_138 = ((safe_lshift_func_uint16_t_u_s(((((void*)0 == &l_101) <= (safe_lshift_func_int8_t_s_s((&l_71 != &l_99[2][2]), p_1048->g_140.f1))) < (-1L)), p_1048->g_72)) , p_1048->g_136)), p_1048->g_80[2][3]))))))), p_1048->g_comm_values[p_1048->tid])));
        }
    }
    return &p_1048->g_34;
}


/* ------------------------------------------ */
/* 
 * reads : p_1048->g_68.f1 p_1048->g_84 p_1048->g_59 p_1048->g_72 p_1048->g_80
 * writes: p_1048->g_68.f1 p_1048->g_80 p_1048->g_59 p_1048->g_72
 */
int64_t ** func_60(int64_t ** p_61, uint32_t  p_62, struct S3 * p_1048)
{ /* block id: 15 */
    uint8_t l_88 = 255UL;
    int32_t *l_91 = &p_1048->g_80[2][0];
    int32_t **l_92 = &l_91;
    for (p_1048->g_68.f1 = (-3); (p_1048->g_68.f1 == 25); p_1048->g_68.f1++)
    { /* block id: 18 */
        int32_t *l_83 = (void*)0;
        int64_t **l_87 = &p_1048->g_34;
        (*p_1048->g_84) = p_62;
        for (p_1048->g_59 = 0; (p_1048->g_59 < 7); p_1048->g_59++)
        { /* block id: 22 */
            for (p_1048->g_72 = 2; (p_1048->g_72 >= 0); p_1048->g_72 -= 1)
            { /* block id: 25 */
                int i, j;
                p_1048->g_80[p_1048->g_72][(p_1048->g_72 + 3)] = p_1048->g_80[p_1048->g_72][(p_1048->g_72 + 3)];
                return l_87;
            }
        }
        l_88++;
    }
    (*l_92) = l_91;
    return p_61;
}


__kernel void entry(__global ulong *result, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local int64_t l_comm_values[215];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 215; i++)
            l_comm_values[i] = 1;
    struct S3 c_1049;
    struct S3* p_1048 = &c_1049;
    struct S3 c_1050 = {
        (void*)0, // p_1048->g_34
        (void*)0, // p_1048->g_36
        (void*)0, // p_1048->g_37
        (-1L), // p_1048->g_59
        {0UL}, // p_1048->g_68
        1L, // p_1048->g_72
        {{0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL},{0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL},{0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL,0x3463C3EAL}}, // p_1048->g_80
        &p_1048->g_80[2][3], // p_1048->g_84
        &p_1048->g_80[0][0], // p_1048->g_97
        {{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97},{&p_1048->g_97}}, // p_1048->g_96
        0x27B8L, // p_1048->g_136
        0x7D12L, // p_1048->g_138
        {4UL,0x04FA82FB5A38379FL,0x39L,0x5215L}, // p_1048->g_140
        18446744073709551612UL, // p_1048->g_154
        &p_1048->g_154, // p_1048->g_161
        &p_1048->g_154, // p_1048->g_163
        (-1L), // p_1048->g_190
        {0xD862EAF8L,0x6F9A348AB5514BFDL,0xD4L,0x2746L}, // p_1048->g_204
        (-6L), // p_1048->g_212
        &p_1048->g_161, // p_1048->g_220
        {249UL}, // p_1048->g_224
        &p_1048->g_161, // p_1048->g_225
        {-1L}, // p_1048->g_238
        &p_1048->g_238, // p_1048->g_237
        {2L,2L,2L}, // p_1048->g_246
        &p_1048->g_246[1], // p_1048->g_245
        {{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245},{&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,&p_1048->g_245,(void*)0,&p_1048->g_245}}, // p_1048->g_244
        {&p_1048->g_244[4][5],&p_1048->g_244[3][3],&p_1048->g_244[4][5],&p_1048->g_244[4][5],&p_1048->g_244[3][3],&p_1048->g_244[4][5],&p_1048->g_244[4][5],&p_1048->g_244[3][3]}, // p_1048->g_243
        0x55B130C0L, // p_1048->g_248
        0x95EEL, // p_1048->g_266
        {0x28L,0x28L,0x28L,0x28L,0x28L,0x28L,0x28L}, // p_1048->g_273
        &p_1048->g_224, // p_1048->g_301
        &p_1048->g_273[0], // p_1048->g_310
        &p_1048->g_310, // p_1048->g_309
        &p_1048->g_309, // p_1048->g_308
        5UL, // p_1048->g_343
        {{{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L}},{{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L},{(-9L),0x31B3L,0x0896L}}}, // p_1048->g_358
        {{&p_1048->g_68,&p_1048->g_68,&p_1048->g_68,&p_1048->g_68,&p_1048->g_68},{&p_1048->g_68,&p_1048->g_68,&p_1048->g_68,&p_1048->g_68,&p_1048->g_68}}, // p_1048->g_410
        0UL, // p_1048->g_411
        {0UL,0x50A76803D11F8EAEL,0x48L,1L}, // p_1048->g_412
        &p_1048->g_412, // p_1048->g_414
        &p_1048->g_309, // p_1048->g_418
        {0x6B10498EL,0x0423314E759213B3L,251UL,0x75C3L}, // p_1048->g_450
        {&p_1048->g_97,&p_1048->g_97,&p_1048->g_97,&p_1048->g_97,&p_1048->g_97,&p_1048->g_97}, // p_1048->g_498
        (void*)0, // p_1048->g_565
        {4294967292UL,5L,0xFAL,-1L}, // p_1048->g_573
        {0x3B6347D6L,0x3B6347D6L,0x3B6347D6L,0x3B6347D6L,0x3B6347D6L}, // p_1048->g_574
        {{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}},{{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}},{{0xA1BE2086L,0x215C90B1624597E2L,0x29L,1L},{4294967295UL,0x42753671D19DCCB7L,0xACL,0x1A77L},{0UL,0x782ED76E6C08B3B9L,0xBCL,0x26D8L},{4294967295UL,0x30575B33903ADAD5L,1UL,-3L}}}}, // p_1048->g_584
        &p_1048->g_97, // p_1048->g_598
        &p_1048->g_97, // p_1048->g_610
        (void*)0, // p_1048->g_622
        &p_1048->g_97, // p_1048->g_623
        6UL, // p_1048->g_638
        0x52A05DF0L, // p_1048->g_677
        {4294967295UL,0x7F51C536E63B68A5L,255UL,-1L}, // p_1048->g_712
        {0x028DF8B1L,-1L,9UL,-4L}, // p_1048->g_714
        {1UL,-3L,0x7CL,5L}, // p_1048->g_736
        (void*)0, // p_1048->g_752
        &p_1048->g_752, // p_1048->g_751
        (-1L), // p_1048->g_761
        0UL, // p_1048->g_771
        {{9UL,0x1BA1C822212D97D0L,0UL,0x0D80L},{0x141F464EL,-1L,0x5FL,-7L},{9UL,0x1BA1C822212D97D0L,0UL,0x0D80L},{9UL,0x1BA1C822212D97D0L,0UL,0x0D80L},{0x141F464EL,-1L,0x5FL,-7L},{9UL,0x1BA1C822212D97D0L,0UL,0x0D80L}}, // p_1048->g_801
        &p_1048->g_97, // p_1048->g_802
        1L, // p_1048->g_880
        &p_1048->g_880, // p_1048->g_879
        &p_1048->g_879, // p_1048->g_881
        (void*)0, // p_1048->g_949
        &p_1048->g_97, // p_1048->g_961
        &p_1048->g_879, // p_1048->g_962
        0x6A36AE19L, // p_1048->g_963
        {{0x2F792E407BAE69D2L},{0x2F792E407BAE69D2L},{0x2F792E407BAE69D2L},{0x2F792E407BAE69D2L},{0x2F792E407BAE69D2L},{0x2F792E407BAE69D2L}}, // p_1048->g_965
        &p_1048->g_301, // p_1048->g_966
        &p_1048->g_358[1][3][2], // p_1048->g_989
        &p_1048->g_989, // p_1048->g_988
        {1UL,9L,255UL,6L}, // p_1048->g_994
        {9UL,-10L,0xB0L,0x3932L}, // p_1048->g_996
        (void*)0, // p_1048->g_1011
        {{{(void*)0,(void*)0},{(void*)0,(void*)0}}}, // p_1048->g_1022
        {0x6FAB5458L,7L,0UL,0L}, // p_1048->g_1042
        {&p_1048->g_573,&p_1048->g_573,&p_1048->g_573,&p_1048->g_573,&p_1048->g_573,&p_1048->g_573}, // p_1048->g_1043
        (void*)0, // p_1048->g_1045
        &p_1048->g_584[4][6][1], // p_1048->g_1046
        &p_1048->g_97, // p_1048->g_1047
        sequence_input[get_global_id(0)], // p_1048->global_0_offset
        sequence_input[get_global_id(1)], // p_1048->global_1_offset
        sequence_input[get_global_id(2)], // p_1048->global_2_offset
        sequence_input[get_local_id(0)], // p_1048->local_0_offset
        sequence_input[get_local_id(1)], // p_1048->local_1_offset
        sequence_input[get_local_id(2)], // p_1048->local_2_offset
        sequence_input[get_group_id(0)], // p_1048->group_0_offset
        sequence_input[get_group_id(1)], // p_1048->group_1_offset
        sequence_input[get_group_id(2)], // p_1048->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 215)), permutations[0][get_linear_local_id()])), // p_1048->tid
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_1049 = c_1050;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_1048);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_1048->g_59, "p_1048->g_59", print_hash_value);
    transparent_crc(p_1048->g_68.f1, "p_1048->g_68.f1", print_hash_value);
    transparent_crc(p_1048->g_72, "p_1048->g_72", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 8; j++)
        {
            transparent_crc(p_1048->g_80[i][j], "p_1048->g_80[i][j]", print_hash_value);

        }
    }
    transparent_crc(p_1048->g_136, "p_1048->g_136", print_hash_value);
    transparent_crc(p_1048->g_138, "p_1048->g_138", print_hash_value);
    transparent_crc(p_1048->g_140.f0, "p_1048->g_140.f0", print_hash_value);
    transparent_crc(p_1048->g_140.f1, "p_1048->g_140.f1", print_hash_value);
    transparent_crc(p_1048->g_140.f2, "p_1048->g_140.f2", print_hash_value);
    transparent_crc(p_1048->g_140.f3, "p_1048->g_140.f3", print_hash_value);
    transparent_crc(p_1048->g_154, "p_1048->g_154", print_hash_value);
    transparent_crc(p_1048->g_190, "p_1048->g_190", print_hash_value);
    transparent_crc(p_1048->g_204.f0, "p_1048->g_204.f0", print_hash_value);
    transparent_crc(p_1048->g_204.f1, "p_1048->g_204.f1", print_hash_value);
    transparent_crc(p_1048->g_204.f2, "p_1048->g_204.f2", print_hash_value);
    transparent_crc(p_1048->g_204.f3, "p_1048->g_204.f3", print_hash_value);
    transparent_crc(p_1048->g_212, "p_1048->g_212", print_hash_value);
    transparent_crc(p_1048->g_224.f0, "p_1048->g_224.f0", print_hash_value);
    transparent_crc(p_1048->g_238.f3, "p_1048->g_238.f3", print_hash_value);
    for (i = 0; i < 3; i++)
    {
        transparent_crc(p_1048->g_246[i], "p_1048->g_246[i]", print_hash_value);

    }
    transparent_crc(p_1048->g_248, "p_1048->g_248", print_hash_value);
    transparent_crc(p_1048->g_266, "p_1048->g_266", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        transparent_crc(p_1048->g_273[i], "p_1048->g_273[i]", print_hash_value);

    }
    transparent_crc(p_1048->g_343, "p_1048->g_343", print_hash_value);
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 9; j++)
        {
            for (k = 0; k < 3; k++)
            {
                transparent_crc(p_1048->g_358[i][j][k], "p_1048->g_358[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1048->g_411, "p_1048->g_411", print_hash_value);
    transparent_crc(p_1048->g_412.f0, "p_1048->g_412.f0", print_hash_value);
    transparent_crc(p_1048->g_412.f1, "p_1048->g_412.f1", print_hash_value);
    transparent_crc(p_1048->g_412.f2, "p_1048->g_412.f2", print_hash_value);
    transparent_crc(p_1048->g_412.f3, "p_1048->g_412.f3", print_hash_value);
    transparent_crc(p_1048->g_450.f0, "p_1048->g_450.f0", print_hash_value);
    transparent_crc(p_1048->g_450.f1, "p_1048->g_450.f1", print_hash_value);
    transparent_crc(p_1048->g_450.f2, "p_1048->g_450.f2", print_hash_value);
    transparent_crc(p_1048->g_450.f3, "p_1048->g_450.f3", print_hash_value);
    transparent_crc(p_1048->g_573.f0, "p_1048->g_573.f0", print_hash_value);
    transparent_crc(p_1048->g_573.f1, "p_1048->g_573.f1", print_hash_value);
    transparent_crc(p_1048->g_573.f2, "p_1048->g_573.f2", print_hash_value);
    transparent_crc(p_1048->g_573.f3, "p_1048->g_573.f3", print_hash_value);
    for (i = 0; i < 5; i++)
    {
        transparent_crc(p_1048->g_574[i], "p_1048->g_574[i]", print_hash_value);

    }
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 8; j++)
        {
            for (k = 0; k < 4; k++)
            {
                transparent_crc(p_1048->g_584[i][j][k].f0, "p_1048->g_584[i][j][k].f0", print_hash_value);
                transparent_crc(p_1048->g_584[i][j][k].f1, "p_1048->g_584[i][j][k].f1", print_hash_value);
                transparent_crc(p_1048->g_584[i][j][k].f2, "p_1048->g_584[i][j][k].f2", print_hash_value);
                transparent_crc(p_1048->g_584[i][j][k].f3, "p_1048->g_584[i][j][k].f3", print_hash_value);

            }
        }
    }
    transparent_crc(p_1048->g_638, "p_1048->g_638", print_hash_value);
    transparent_crc(p_1048->g_677, "p_1048->g_677", print_hash_value);
    transparent_crc(p_1048->g_712.f0, "p_1048->g_712.f0", print_hash_value);
    transparent_crc(p_1048->g_712.f1, "p_1048->g_712.f1", print_hash_value);
    transparent_crc(p_1048->g_712.f2, "p_1048->g_712.f2", print_hash_value);
    transparent_crc(p_1048->g_712.f3, "p_1048->g_712.f3", print_hash_value);
    transparent_crc(p_1048->g_714.f0, "p_1048->g_714.f0", print_hash_value);
    transparent_crc(p_1048->g_714.f1, "p_1048->g_714.f1", print_hash_value);
    transparent_crc(p_1048->g_714.f2, "p_1048->g_714.f2", print_hash_value);
    transparent_crc(p_1048->g_714.f3, "p_1048->g_714.f3", print_hash_value);
    transparent_crc(p_1048->g_736.f0, "p_1048->g_736.f0", print_hash_value);
    transparent_crc(p_1048->g_736.f1, "p_1048->g_736.f1", print_hash_value);
    transparent_crc(p_1048->g_736.f2, "p_1048->g_736.f2", print_hash_value);
    transparent_crc(p_1048->g_736.f3, "p_1048->g_736.f3", print_hash_value);
    transparent_crc(p_1048->g_761, "p_1048->g_761", print_hash_value);
    transparent_crc(p_1048->g_771, "p_1048->g_771", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(p_1048->g_801[i].f0, "p_1048->g_801[i].f0", print_hash_value);
        transparent_crc(p_1048->g_801[i].f1, "p_1048->g_801[i].f1", print_hash_value);
        transparent_crc(p_1048->g_801[i].f2, "p_1048->g_801[i].f2", print_hash_value);
        transparent_crc(p_1048->g_801[i].f3, "p_1048->g_801[i].f3", print_hash_value);

    }
    transparent_crc(p_1048->g_880, "p_1048->g_880", print_hash_value);
    transparent_crc(p_1048->g_963, "p_1048->g_963", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        transparent_crc(p_1048->g_965[i].f0, "p_1048->g_965[i].f0", print_hash_value);

    }
    transparent_crc(p_1048->g_994.f0, "p_1048->g_994.f0", print_hash_value);
    transparent_crc(p_1048->g_994.f1, "p_1048->g_994.f1", print_hash_value);
    transparent_crc(p_1048->g_994.f2, "p_1048->g_994.f2", print_hash_value);
    transparent_crc(p_1048->g_994.f3, "p_1048->g_994.f3", print_hash_value);
    transparent_crc(p_1048->g_996.f0, "p_1048->g_996.f0", print_hash_value);
    transparent_crc(p_1048->g_996.f1, "p_1048->g_996.f1", print_hash_value);
    transparent_crc(p_1048->g_996.f2, "p_1048->g_996.f2", print_hash_value);
    transparent_crc(p_1048->g_996.f3, "p_1048->g_996.f3", print_hash_value);
    transparent_crc(p_1048->g_1042.f0, "p_1048->g_1042.f0", print_hash_value);
    transparent_crc(p_1048->g_1042.f1, "p_1048->g_1042.f1", print_hash_value);
    transparent_crc(p_1048->g_1042.f2, "p_1048->g_1042.f2", print_hash_value);
    transparent_crc(p_1048->g_1042.f3, "p_1048->g_1042.f3", print_hash_value);
    transparent_crc(p_1048->l_comm_values[get_linear_local_id()], "p_1048->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_1048->g_comm_values[get_linear_group_id() * 215 + get_linear_local_id()], "p_1048->g_comm_values[get_linear_group_id() * 215 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

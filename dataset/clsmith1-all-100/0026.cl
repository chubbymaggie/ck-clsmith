// --atomics 63 ---atomic_reductions ---fake_divergence ---inter_thread_comm -g 40,42,1 -l 5,42,1
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][210] = {
{65,163,113,206,194,164,170,30,33,182,148,92,193,21,89,59,160,128,199,69,147,152,99,207,141,29,79,204,56,143,93,70,197,116,134,36,47,2,25,19,192,95,84,5,62,144,9,64,142,37,106,98,201,120,22,32,109,159,156,40,0,153,81,61,31,175,176,100,55,4,86,87,27,171,127,145,28,41,3,191,26,162,72,200,58,6,91,53,137,123,158,102,181,136,85,46,121,118,14,51,73,133,96,122,132,94,71,49,60,198,13,161,154,165,202,140,185,108,130,12,139,195,103,150,18,189,77,68,166,10,179,203,125,208,205,155,74,172,111,114,42,188,167,97,104,82,180,57,138,117,88,44,149,157,124,16,48,38,135,126,183,174,45,39,23,35,8,101,186,115,112,50,190,146,178,107,75,110,90,66,184,1,119,52,17,129,43,83,169,15,173,151,67,187,7,80,168,196,131,11,24,105,76,54,20,78,177,63,209,34}, // permutation 0
{190,179,11,174,115,37,32,180,2,202,197,165,87,132,187,78,58,193,162,178,159,176,133,113,177,170,1,208,50,34,151,143,128,88,120,69,19,127,4,172,155,41,48,136,152,72,183,56,45,135,83,28,12,6,167,207,142,33,114,44,140,42,64,20,62,160,31,89,109,184,93,61,206,191,185,163,35,36,122,26,108,186,30,63,107,198,112,104,192,116,188,158,121,102,148,168,166,67,125,53,13,95,209,5,0,38,131,10,124,153,27,105,7,71,90,101,110,55,130,118,196,75,43,137,68,195,85,111,129,86,57,203,14,141,164,205,138,96,147,66,81,15,18,181,22,119,74,73,157,46,99,199,154,47,106,201,204,97,70,25,49,171,9,21,145,194,156,17,40,92,51,79,77,117,65,100,3,8,84,29,98,94,175,52,200,144,123,82,54,126,76,189,173,91,103,24,146,182,139,149,161,134,23,60,39,80,59,150,16,169}, // permutation 1
{67,80,1,82,51,53,127,78,38,4,131,41,149,46,28,69,97,173,110,63,96,21,70,200,101,206,120,209,146,109,194,0,87,77,72,117,185,167,171,114,208,145,86,182,2,55,83,168,126,73,143,88,122,107,14,52,136,115,93,121,13,64,196,16,49,35,104,26,47,202,187,18,190,90,129,60,201,30,76,43,59,178,199,65,197,20,147,140,48,139,119,203,195,94,155,113,84,163,42,31,66,130,105,174,62,128,192,36,181,98,50,108,33,37,92,75,150,19,91,170,204,15,184,169,152,61,141,99,102,9,134,186,106,7,95,103,205,154,151,177,40,135,11,74,176,5,132,161,142,183,138,157,12,153,180,32,118,45,39,27,6,71,29,85,111,148,3,165,17,68,89,112,116,175,189,123,191,125,56,160,166,8,22,100,188,58,10,133,144,57,207,162,54,198,156,137,23,124,79,193,25,172,81,179,159,24,164,158,34,44}, // permutation 2
{115,88,184,183,157,73,9,145,166,106,148,3,156,18,140,19,111,130,67,41,135,84,77,26,94,190,151,147,69,198,172,38,20,14,114,127,110,17,92,187,125,12,121,185,188,75,143,50,103,107,105,171,11,49,150,52,10,137,2,200,152,95,85,163,78,86,204,80,59,42,160,192,71,141,118,16,206,153,22,149,120,39,25,74,138,83,1,54,112,36,66,182,58,133,194,208,174,47,87,144,15,175,180,169,82,102,139,117,207,100,155,165,108,199,203,154,7,161,33,40,89,189,24,202,128,126,79,93,37,196,64,113,43,159,5,197,109,191,177,124,35,136,61,91,201,195,60,8,23,101,51,76,158,170,90,62,186,162,29,57,205,104,32,167,122,209,70,65,179,63,68,116,55,6,123,99,72,98,142,178,193,129,4,168,176,53,45,132,119,164,21,131,173,146,13,27,31,28,34,0,181,44,30,46,134,97,48,96,81,56}, // permutation 3
{21,17,123,140,121,38,183,23,156,65,157,158,56,95,152,97,61,132,64,94,0,148,59,170,118,62,87,182,68,31,84,75,18,151,207,133,11,66,147,173,171,14,108,37,45,88,6,60,106,28,16,13,34,174,92,191,162,146,57,155,128,117,101,164,48,200,90,139,104,77,187,105,129,24,51,30,177,145,10,52,40,180,136,2,186,63,150,131,73,39,107,167,100,172,47,153,69,124,103,149,46,119,74,176,144,161,206,53,55,44,7,165,83,116,137,115,111,208,178,93,5,26,160,25,198,86,22,71,204,188,114,168,96,35,185,4,193,205,20,130,109,138,113,50,154,49,72,159,98,127,141,169,175,179,190,209,15,33,199,102,91,197,194,19,82,112,166,79,125,43,80,12,1,143,36,42,54,192,189,163,41,134,126,3,202,9,78,184,58,181,81,195,27,203,76,29,142,32,120,70,201,99,67,110,122,89,196,135,8,85}, // permutation 4
{52,131,208,57,10,134,84,179,178,132,40,123,136,28,19,157,91,99,42,65,183,122,169,181,74,144,127,184,104,51,29,64,49,89,116,156,27,112,145,33,202,58,196,187,8,182,79,176,107,12,13,0,147,114,66,87,22,162,152,137,59,165,173,126,73,139,32,108,14,120,170,50,16,207,88,177,72,3,129,167,200,101,96,92,62,133,142,185,159,7,36,48,2,94,198,106,117,17,61,20,149,31,189,39,35,100,203,119,163,130,67,174,38,6,188,121,83,21,25,46,55,5,199,191,15,175,53,172,118,81,76,41,95,63,43,194,160,93,201,44,113,128,168,105,150,155,180,54,186,68,151,45,195,71,166,103,77,85,1,69,193,34,26,143,23,47,56,11,190,70,146,161,153,4,148,197,125,135,24,97,111,110,82,206,18,9,138,30,154,205,60,90,192,204,75,80,209,98,140,86,109,171,37,141,102,78,158,164,115,124}, // permutation 5
{149,196,106,97,99,112,119,94,9,0,134,59,157,178,21,191,41,18,103,136,177,35,49,116,125,24,143,200,88,44,188,141,180,151,6,179,23,124,16,54,192,115,197,100,123,208,56,50,183,166,33,57,174,163,69,74,199,8,198,126,19,26,205,120,209,109,4,172,129,91,128,73,131,55,83,78,82,138,127,161,175,22,77,122,190,65,193,140,206,3,52,160,71,66,146,203,13,75,48,142,121,185,68,130,32,171,62,181,28,96,2,20,15,162,202,81,104,204,39,154,10,43,139,17,135,45,167,169,102,147,25,93,86,1,37,118,40,36,156,70,80,170,7,27,42,189,47,31,11,38,182,148,168,153,155,159,111,60,132,133,184,158,113,187,46,64,79,51,173,84,105,12,90,5,107,29,89,150,98,110,95,72,76,58,144,195,114,87,164,117,176,53,61,34,152,108,145,92,207,201,85,194,186,101,14,165,63,30,67,137}, // permutation 6
{57,7,120,169,114,195,37,109,93,182,140,117,51,47,104,178,130,145,103,162,105,176,189,203,25,80,150,63,14,127,173,106,164,55,199,171,0,134,65,137,136,154,27,41,153,26,121,99,15,172,128,198,68,132,188,143,102,33,83,69,148,90,6,116,71,87,192,67,185,190,209,76,204,125,17,175,149,21,200,196,70,18,111,75,16,159,165,110,194,180,161,197,97,191,45,201,52,44,152,157,167,34,174,112,42,29,23,61,73,205,133,151,107,163,181,62,24,22,170,156,3,35,183,54,129,46,184,94,207,10,38,126,36,19,66,12,155,59,50,91,4,58,48,81,135,1,92,28,8,82,60,95,2,98,53,108,208,85,39,139,115,32,179,187,122,5,72,100,206,40,9,43,193,147,56,118,177,124,202,77,158,138,89,123,141,113,74,96,119,186,13,142,88,84,166,79,31,78,144,86,64,131,49,101,20,30,160,146,11,168}, // permutation 7
{188,134,190,195,107,113,14,203,167,83,37,25,176,196,16,159,164,201,158,157,106,27,163,42,177,90,137,104,84,156,43,191,79,162,21,96,74,114,127,70,173,119,88,133,125,54,202,77,204,150,165,78,161,76,55,18,2,11,130,166,194,15,23,122,189,152,67,103,132,10,105,115,50,34,8,62,46,19,99,205,57,73,61,85,58,140,63,147,20,53,32,41,36,207,136,138,149,95,182,5,139,197,75,92,44,179,180,193,171,111,148,142,170,124,112,123,120,13,56,151,185,86,192,64,60,52,131,117,87,81,199,89,38,184,129,146,35,47,209,174,31,1,155,22,45,66,126,116,154,24,181,186,121,187,3,169,118,108,168,208,178,4,183,110,145,141,48,97,33,144,69,71,9,128,109,102,49,160,100,6,172,175,17,0,101,153,198,135,7,26,40,30,29,80,93,72,28,65,94,82,68,200,59,143,91,39,12,98,51,206}, // permutation 8
{154,133,139,100,198,35,3,116,77,51,134,190,181,169,67,25,16,150,98,6,164,117,61,156,56,130,147,55,160,193,74,83,170,58,109,97,207,106,89,179,52,50,167,110,138,105,53,102,132,149,45,166,204,182,72,152,174,87,64,163,65,32,93,140,36,88,173,84,188,78,208,177,31,82,68,9,7,119,125,161,127,96,192,120,136,178,79,80,151,26,0,20,203,38,49,11,75,21,186,201,146,114,19,60,165,2,85,95,5,129,172,126,92,185,23,184,41,206,205,187,43,183,124,202,197,4,28,30,40,118,143,46,199,144,42,94,63,157,99,22,171,13,34,180,121,141,54,191,195,104,70,12,71,59,107,131,39,115,76,18,44,73,10,128,14,194,155,27,57,123,122,113,91,48,62,66,33,29,112,162,108,111,24,175,176,159,15,101,209,69,17,153,47,1,189,200,142,8,145,168,158,37,135,196,86,81,137,148,103,90} // permutation 9
};

// Seed: 26

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
    uint32_t v_collective;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local volatile uint32_t *l_atomic_reduction;
    __global volatile uint32_t *g_atomic_reduction;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
uint32_t  func_1(struct S0 * p_2);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_2->l_comm_values
 * writes:
 */
uint32_t  func_1(struct S0 * p_2)
{ /* block id: 4 */
    return p_2->l_comm_values[(safe_mod_func_uint32_t_u_u(p_2->tid, 210))];
}


__kernel void entry(__global ulong *result, __global volatile uint *g_atomic_input, __global volatile uint *g_special_values, __global volatile int *g_atomic_reduction, __global int *sequence_input, __global long *g_comm_values) {
    int i;
    __local volatile uint32_t l_atomic_reduction[1];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 1; i++)
            l_atomic_reduction[i] = 0;
    __local int64_t l_comm_values[210];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 210; i++)
            l_comm_values[i] = 1;
    struct S0 c_3;
    struct S0* p_2 = &c_3;
    struct S0 c_4 = {
        0, // p_2->v_collective
        sequence_input[get_global_id(0)], // p_2->global_0_offset
        sequence_input[get_global_id(1)], // p_2->global_1_offset
        sequence_input[get_global_id(2)], // p_2->global_2_offset
        sequence_input[get_local_id(0)], // p_2->local_0_offset
        sequence_input[get_local_id(1)], // p_2->local_1_offset
        sequence_input[get_local_id(2)], // p_2->local_2_offset
        sequence_input[get_group_id(0)], // p_2->group_0_offset
        sequence_input[get_group_id(1)], // p_2->group_1_offset
        sequence_input[get_group_id(2)], // p_2->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 210)), permutations[0][get_linear_local_id()])), // p_2->tid
        l_atomic_reduction, // l_atomic_reduction
        g_atomic_reduction, // g_atomic_reduction
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_3 = c_4;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_2);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_2->v_collective, "p_2->v_collective", print_hash_value);
    transparent_crc(p_2->l_comm_values[get_linear_local_id()], "p_2->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_2->g_comm_values[get_linear_group_id() * 210 + get_linear_local_id()], "p_2->g_comm_values[get_linear_group_id() * 210 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

// --atomics 47 ---atomic_reductions ---fake_divergence ---inter_thread_comm -g 31,5,35 -l 31,1,5
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][155] = {
{143,6,106,74,72,21,36,54,142,29,3,131,86,75,152,139,147,101,150,51,92,134,116,148,90,31,112,146,44,62,23,138,47,35,99,122,42,78,66,107,93,28,33,34,85,37,108,95,119,82,89,59,19,110,153,154,4,94,69,43,126,129,105,88,67,135,102,9,109,117,103,104,128,136,17,40,27,140,98,20,50,121,53,24,115,133,118,38,13,61,16,7,132,97,127,81,46,1,63,113,124,58,18,11,111,2,48,22,39,68,14,10,137,26,32,123,130,77,141,57,45,84,145,83,144,60,96,25,100,49,12,149,30,65,8,73,91,71,52,80,41,120,0,114,70,76,87,79,56,125,15,64,55,151,5}, // permutation 0
{115,131,140,14,147,146,28,17,11,91,132,99,124,111,47,30,35,117,138,122,152,10,72,126,4,44,123,142,113,67,75,93,78,71,120,129,76,45,150,65,52,23,73,130,24,74,114,43,135,25,77,128,85,87,100,34,26,118,110,5,121,21,69,42,106,55,19,104,105,27,49,32,13,141,39,88,84,97,15,143,58,116,2,64,66,148,41,60,151,149,134,139,101,48,33,63,54,95,57,103,31,119,46,92,0,109,50,36,56,20,127,133,144,68,154,102,137,29,70,18,16,37,82,80,145,22,6,89,112,8,83,3,7,40,98,96,108,12,86,153,59,94,51,79,61,90,38,81,62,136,1,9,53,125,107}, // permutation 1
{23,36,50,79,95,62,136,39,46,29,121,16,104,86,56,149,93,135,32,146,4,115,81,13,14,133,140,52,51,37,67,17,61,71,74,114,9,49,45,7,64,144,128,75,22,122,12,143,105,113,96,34,98,138,19,47,147,41,72,18,57,103,131,6,0,129,130,83,26,35,84,11,106,108,66,77,132,124,38,137,43,87,21,5,141,134,112,78,91,120,110,73,70,150,8,119,109,116,10,53,76,82,148,40,90,44,80,48,117,100,60,127,28,118,94,153,126,152,58,15,65,142,31,55,125,27,59,154,102,2,145,3,85,25,139,99,69,101,97,68,107,92,54,151,24,33,20,88,111,89,123,30,63,42,1}, // permutation 2
{84,136,103,150,99,23,50,146,0,78,42,132,74,102,72,148,68,135,108,94,81,144,8,97,128,57,62,58,121,76,38,143,45,114,25,14,125,5,19,85,27,145,100,40,41,10,9,112,16,3,90,11,54,127,149,120,29,137,39,119,49,118,116,129,153,6,46,124,75,4,60,138,2,36,15,131,142,122,115,20,56,48,63,96,117,52,64,79,59,104,28,1,21,51,82,110,105,87,47,93,18,98,30,111,65,69,89,152,35,83,17,140,141,44,88,86,133,66,43,55,61,33,151,130,32,67,101,31,34,139,147,71,123,109,107,26,77,70,13,24,92,106,126,113,12,95,37,22,73,7,91,53,80,134,154}, // permutation 3
{33,124,79,71,133,0,89,85,103,70,118,8,28,9,16,92,13,54,37,88,127,35,99,111,39,23,17,29,61,112,123,5,73,6,82,45,151,27,81,49,26,107,104,153,90,139,135,50,52,134,56,55,57,144,59,62,125,69,136,18,94,34,120,98,110,102,46,147,44,148,38,80,138,140,101,21,132,115,60,131,141,47,117,14,116,53,150,75,68,126,78,119,25,19,109,65,152,122,12,128,51,20,1,40,93,91,121,58,113,31,149,130,137,97,95,43,66,24,105,2,36,76,100,84,3,67,86,83,22,48,129,32,106,63,30,108,77,114,41,42,15,64,72,146,10,4,7,145,154,96,143,11,74,142,87}, // permutation 4
{91,81,94,135,95,114,72,107,133,41,0,52,40,118,92,137,154,21,42,117,28,143,101,27,53,136,96,86,116,141,46,44,74,35,7,85,73,8,51,113,16,125,14,112,146,9,63,124,48,127,152,119,138,67,142,145,82,100,130,4,5,108,38,23,78,37,2,90,64,148,109,19,11,56,87,20,39,65,15,111,13,79,123,66,121,54,134,6,31,126,47,106,61,69,3,12,75,93,10,43,153,140,76,32,29,45,102,99,144,80,88,89,120,131,110,122,58,59,18,139,97,98,26,71,55,34,17,1,57,105,115,103,104,60,149,22,36,147,77,70,33,151,84,128,25,83,132,129,30,68,62,49,150,24,50}, // permutation 5
{11,101,82,4,117,59,92,54,62,84,73,55,68,65,24,110,25,152,21,33,13,16,139,127,138,124,70,20,123,45,39,96,52,19,77,126,129,57,91,147,140,58,104,131,60,153,132,15,48,107,78,17,27,32,76,71,113,50,149,154,141,136,46,80,7,109,150,0,28,44,72,94,88,115,125,93,142,148,29,118,53,102,98,151,23,18,95,90,100,146,36,112,26,42,81,114,12,79,3,135,67,87,37,105,120,111,47,8,137,63,66,51,103,22,145,97,35,134,83,34,6,69,40,108,144,38,1,143,133,14,56,49,116,64,119,128,10,31,89,74,106,43,99,122,9,61,2,130,86,85,5,41,75,121,30}, // permutation 6
{95,57,67,25,120,109,134,118,124,76,61,88,58,136,24,145,77,144,64,34,87,79,56,47,42,74,27,129,97,37,85,6,17,55,18,131,150,149,9,101,92,154,49,68,23,8,98,15,48,69,4,152,138,16,112,123,75,99,11,94,54,96,132,142,59,36,148,91,83,103,0,32,52,53,153,45,72,20,147,100,151,84,121,107,111,50,12,30,19,86,22,10,105,38,51,113,141,104,63,29,44,125,130,5,1,108,128,127,70,143,115,89,40,114,2,146,82,133,116,14,60,81,41,137,35,106,135,122,73,65,66,3,80,93,139,126,31,117,46,21,78,71,110,119,102,7,33,90,43,39,13,62,140,28,26}, // permutation 7
{11,5,120,69,134,19,117,95,63,41,111,130,46,102,103,44,56,9,92,68,58,94,109,2,141,107,149,113,15,77,115,87,28,6,89,76,32,84,114,50,124,99,121,97,64,71,43,85,122,33,135,81,125,7,88,146,45,17,35,144,152,34,30,86,55,22,60,25,147,0,8,29,150,139,13,57,98,59,26,116,72,112,131,62,10,138,143,37,4,126,53,20,52,1,133,79,67,39,128,106,108,36,142,101,136,3,118,119,49,123,38,51,12,21,82,78,132,151,110,148,90,48,140,18,23,145,153,40,91,54,104,61,83,75,96,100,65,93,73,47,127,74,14,24,154,16,129,105,70,42,80,137,66,31,27}, // permutation 8
{89,25,78,129,59,44,110,64,28,116,112,55,22,24,114,127,36,33,118,80,105,43,19,39,148,122,92,120,52,99,56,40,77,84,142,135,15,62,69,106,124,93,147,54,101,18,126,83,76,21,75,153,98,150,5,72,128,37,35,144,140,2,121,0,134,13,41,123,79,71,88,130,115,47,1,132,30,16,119,48,7,63,3,65,104,68,102,100,97,67,107,136,20,94,66,12,108,17,113,53,96,49,143,131,117,82,27,141,45,74,139,4,125,91,103,111,133,32,38,109,14,23,149,85,42,137,34,50,61,151,73,9,60,81,6,146,29,95,70,51,8,10,86,145,152,26,154,58,90,138,87,46,57,11,31} // permutation 9
};

// Seed: 112

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
   uint8_t  f0;
   uint32_t  f1;
   int32_t  f2;
   uint32_t  f3;
   uint32_t  f4;
};

struct S1 {
   volatile uint32_t  f0;
   int64_t  f1;
   int32_t  f2;
   uint32_t  f3;
   int16_t  f4;
};

union U2 {
   volatile uint32_t  f0;
};

union U3 {
   volatile uint32_t  f0;
};

struct S4 {
    uint16_t g_16;
    union U3 g_31;
    VECTOR(uint8_t, 8) g_35;
    VECTOR(int32_t, 8) g_45;
    int32_t *g_69;
    int32_t ** volatile g_68;
    uint8_t g_81;
    uint16_t g_100;
    VECTOR(uint16_t, 2) g_104;
    int32_t g_122;
    uint16_t *g_132;
    uint16_t **g_131;
    uint16_t ***g_130;
    int32_t g_135;
    struct S0 g_141;
    VECTOR(uint8_t, 4) g_153;
    VECTOR(int16_t, 2) g_168;
    int32_t g_185;
    int32_t g_186;
    int8_t * volatile g_207;
    int8_t * volatile * volatile g_206;
    VECTOR(int32_t, 16) g_220;
    VECTOR(int32_t, 2) g_223;
    int32_t * volatile g_236[10][1];
    int32_t * volatile g_241;
    int32_t ** volatile g_253;
    VECTOR(int8_t, 8) g_266;
    volatile union U3 g_268;
    uint16_t ****g_272;
    uint64_t g_281;
    struct S1 g_302;
    int32_t ** volatile g_317;
    VECTOR(uint8_t, 4) g_352;
    volatile VECTOR(uint8_t, 2) g_354;
    VECTOR(int32_t, 16) g_381;
    volatile VECTOR(int32_t, 2) g_382;
    volatile struct S1 g_459;
    volatile struct S1 *g_462[6][1];
    volatile struct S1 ** volatile g_461;
    volatile VECTOR(int16_t, 4) g_465;
    volatile struct S1 g_468;
    uint16_t g_478;
    VECTOR(int32_t, 8) g_485;
    uint64_t g_490;
    VECTOR(int32_t, 4) g_496;
    volatile VECTOR(int64_t, 4) g_502;
    VECTOR(int64_t, 8) g_514;
    union U3 *g_521;
    union U3 ** volatile g_520;
    union U2 g_522;
    volatile VECTOR(uint64_t, 2) g_533;
    volatile int32_t *g_544[10][3];
    volatile int32_t * volatile * volatile g_543;
    uint32_t g_566[6][2][2];
    VECTOR(uint16_t, 4) g_575;
    volatile VECTOR(uint16_t, 16) g_577;
    VECTOR(int8_t, 8) g_600;
    VECTOR(int32_t, 16) g_601;
    volatile union U2 g_602[9][5];
    struct S1 g_609;
    uint32_t g_646;
    VECTOR(int32_t, 4) g_647;
    struct S1 g_667;
    union U3 ** volatile g_677[5][8][1];
    union U3 ** volatile g_678;
    volatile struct S1 g_682;
    volatile VECTOR(int64_t, 2) g_708;
    VECTOR(int32_t, 16) g_717;
    int32_t g_723;
    volatile VECTOR(uint16_t, 8) g_726;
    struct S1 g_757;
    struct S1 g_758;
    int32_t ** volatile g_771[1][9];
    int32_t ** volatile g_772;
    int32_t ** volatile g_773;
    int16_t **g_774;
    int16_t *g_777;
    int16_t **g_776;
    int32_t g_792;
    VECTOR(int8_t, 8) g_793;
    struct S1 *g_805;
    struct S1 **g_804[6];
    int8_t *g_811;
    int8_t **g_810;
    int8_t ***g_809;
    int32_t * volatile g_817;
    union U3 g_860;
    VECTOR(int64_t, 16) g_871;
    volatile VECTOR(uint32_t, 2) g_878;
    int32_t ** volatile g_884[5][9][5];
    int32_t ** volatile g_885;
    int32_t * volatile g_887;
    int64_t g_902;
    int32_t ** volatile g_910;
    volatile VECTOR(int32_t, 2) g_915;
    struct S1 g_925;
    volatile uint32_t g_938;
    volatile uint32_t *g_937[9][7][4];
    volatile uint32_t **g_936;
    volatile uint32_t *** volatile g_939;
    volatile struct S1 g_940;
    volatile VECTOR(uint8_t, 8) g_948;
    VECTOR(int64_t, 2) g_958;
    VECTOR(int8_t, 2) g_961;
    VECTOR(int32_t, 8) g_968;
    VECTOR(uint16_t, 2) g_983;
    VECTOR(uint8_t, 16) g_989;
    union U2 g_991;
    uint16_t g_1006;
    union U2 g_1027[1];
    volatile VECTOR(uint8_t, 8) g_1029;
    volatile VECTOR(int8_t, 2) g_1030;
    VECTOR(int64_t, 16) g_1041;
    struct S1 g_1064;
    VECTOR(uint8_t, 2) g_1073;
    int32_t g_1078;
    uint64_t g_1081;
    int8_t g_1105[1];
    VECTOR(int64_t, 16) g_1106;
    int32_t g_1107;
    VECTOR(int16_t, 4) g_1118;
    int32_t ** volatile g_1127[6];
    struct S0 *g_1164;
    struct S0 ** volatile g_1163;
    struct S1 g_1165;
    volatile VECTOR(int16_t, 8) g_1166;
    VECTOR(int32_t, 8) g_1182;
    volatile VECTOR(int32_t, 16) g_1184;
    VECTOR(int16_t, 4) g_1185;
    VECTOR(int32_t, 8) g_1237;
    volatile VECTOR(int8_t, 8) g_1246;
    volatile struct S1 g_1249;
    int32_t g_1251[7][9];
    uint32_t *** volatile g_1254;
    volatile struct S0 ***g_1282;
    int32_t ** volatile g_1284;
    struct S1 g_1297;
    uint32_t v_collective;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local volatile uint32_t *l_atomic_input;
    __local volatile uint32_t *l_special_values;
    __global volatile uint32_t *g_atomic_input;
    __global volatile uint32_t *g_special_values;
    __local volatile uint32_t *l_atomic_reduction;
    __global volatile uint32_t *g_atomic_reduction;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
struct S1  func_1(struct S4 * p_1298);
uint8_t  func_6(uint32_t  p_7, struct S4 * p_1298);
uint64_t  func_8(int64_t  p_9, int8_t  p_10, struct S4 * p_1298);
uint8_t  func_28(uint64_t  p_29, int64_t  p_30, struct S4 * p_1298);
uint64_t  func_32(struct S0  p_33, uint64_t  p_34, struct S4 * p_1298);
int32_t  func_36(int64_t  p_37, uint64_t  p_38, uint32_t  p_39, int32_t  p_40, struct S4 * p_1298);
uint32_t  func_46(int32_t  p_47, int64_t  p_48, int64_t  p_49, int64_t  p_50, struct S4 * p_1298);
int32_t  func_56(int32_t  p_57, uint16_t  p_58, struct S4 * p_1298);
int32_t * func_70(int32_t * p_71, int16_t  p_72, uint32_t  p_73, int64_t  p_74, struct S4 * p_1298);
int16_t  func_75(uint8_t  p_76, struct S0  p_77, int64_t  p_78, struct S4 * p_1298);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_1298->g_comm_values p_1298->g_16 p_1298->g_31 p_1298->g_35 p_1298->l_comm_values p_1298->g_31.f0 p_1298->g_45 p_1298->g_68 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_104 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_141 p_1298->g_153 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_206 p_1298->g_223 p_1298->g_241 p_1298->g_253 p_1298->g_266 p_1298->g_268 permutations p_1298->g_317 p_1298->g_302 p_1298->g_272 p_1298->g_352 p_1298->g_207 p_1298->g_459 p_1298->g_461 p_1298->g_465 p_1298->g_468 p_1298->g_478 p_1298->g_485 p_1298->g_281 p_1298->g_490 p_1298->g_462 p_1298->g_496 p_1298->g_502 p_1298->g_514 p_1298->g_520 p_1298->g_382 p_1298->g_522 p_1298->g_533 p_1298->g_543 p_1298->g_566 p_1298->g_575 p_1298->g_577 p_1298->g_522.f0 p_1298->g_220 p_1298->g_381 p_1298->g_268.f0 p_1298->g_600 p_1298->g_601 p_1298->g_602 p_1298->g_186 p_1298->g_609 p_1298->g_646 p_1298->g_647 p_1298->g_354 p_1298->g_667 p_1298->g_682 p_1298->g_708 p_1298->g_717 p_1298->g_726 p_1298->g_757 p_1298->g_758 p_1298->g_773 p_1298->g_774 p_1298->g_792 p_1298->g_793 p_1298->g_804 p_1298->g_817 p_1298->g_860 p_1298->g_777 p_1298->g_885 p_1298->g_887 p_1298->g_902 p_1298->g_910 p_1298->g_236 p_1298->g_925 p_1298->g_936 p_1298->g_939 p_1298->g_940 p_1298->g_805 p_1298->g_1027 p_1298->g_1064 p_1298->g_1073 p_1298->g_1081 p_1298->g_958 p_1298->g_723 p_1298->g_1163 p_1298->g_1164 p_1298->g_1165 p_1298->g_1166 p_1298->g_1182 p_1298->g_1184 p_1298->g_1185 p_1298->g_915 p_1298->g_1282 p_1298->g_1251 p_1298->g_1297
 * writes: p_1298->g_16 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_186 p_1298->g_141.f0 p_1298->g_220 p_1298->g_132 p_1298->g_272 p_1298->g_141.f2 p_1298->g_281 p_1298->g_302 p_1298->g_459 p_1298->g_462 p_1298->g_141.f3 p_1298->g_490 p_1298->g_comm_values p_1298->g_496 p_1298->g_521 p_1298->g_223 p_1298->g_381 p_1298->g_646 p_1298->g_609.f2 p_1298->g_131 p_1298->g_609.f1 p_1298->g_601 p_1298->g_468 p_1298->g_667.f3 p_1298->g_723 p_1298->g_758.f1 p_1298->g_774 p_1298->g_776 p_1298->g_792 p_1298->g_793 p_1298->g_804 p_1298->g_809 p_1298->g_757.f2 p_1298->g_609.f4 p_1298->g_902 p_1298->g_667.f4 p_1298->g_936 p_1298->g_757 p_1298->g_1081 p_1298->g_958 p_1298->g_758.f2 p_1298->g_1164 p_1298->g_141 p_1298->g_1105 p_1298->g_925.f4 p_1298->g_1251
 */
struct S1  func_1(struct S4 * p_1298)
{ /* block id: 4 */
    int64_t l_11 = (-1L);
    VECTOR(int32_t, 2) l_1170 = (VECTOR(int32_t, 2))(0x6AA24B57L, 0x096FC3EAL);
    VECTOR(int32_t, 4) l_1171 = (VECTOR(int32_t, 4))(4L, (VECTOR(int32_t, 2))(4L, 7L), 7L);
    VECTOR(int32_t, 8) l_1172 = (VECTOR(int32_t, 8))(5L, (VECTOR(int32_t, 4))(5L, (VECTOR(int32_t, 2))(5L, 0x702B965EL), 0x702B965EL), 0x702B965EL, 5L, 0x702B965EL);
    uint8_t *l_1175 = &p_1298->g_141.f0;
    int8_t *l_1176 = (void*)0;
    int8_t *l_1177 = (void*)0;
    int8_t *l_1178 = &p_1298->g_1105[0];
    int8_t *l_1179 = (void*)0;
    int8_t *l_1180 = (void*)0;
    int8_t *l_1181 = (void*)0;
    VECTOR(int32_t, 2) l_1183 = (VECTOR(int32_t, 2))(8L, 0L);
    uint64_t *l_1295 = &p_1298->g_490;
    int32_t *l_1296 = &p_1298->g_1251[1][7];
    int i;
    (*l_1296) ^= ((safe_mod_func_uint64_t_u_u(((*l_1295) = (((safe_rshift_func_int8_t_s_u(0x04L, 3)) > func_6((func_8(l_11, p_1298->g_comm_values[p_1298->tid], p_1298) , (((VECTOR(int32_t, 2))(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))(add_sat(((VECTOR(int32_t, 8))(safe_mad24_func_int32_t_s_s_s(VECTOR(int32_t, 8),((VECTOR(int32_t, 2))(safe_mad_hi_func_int32_t_s_s_s(VECTOR(int32_t, 2),((VECTOR(int32_t, 8))(l_1170.yyyxxxxy)).s62, ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))((-10L), 1L, 0x71674B44L, 4L)), 0x1E84C930L, ((VECTOR(int32_t, 2))(min(((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 2))(l_1171.xz)).yxyyxxyxxxyxyxyy)).s46)).xyyx)).lo, ((VECTOR(int32_t, 8))(safe_mul24_func_int32_t_s_s(VECTOR(int32_t, 8),((VECTOR(int32_t, 8))(mul_hi(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(add_sat(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(l_1172.s04)), (safe_mod_func_uint8_t_u_u(((*l_1175) = FAKE_DIVERGE(p_1298->global_2_offset, get_global_id(2), 10)), (l_1171.z ^= ((*l_1178) = l_1170.y)))), (-4L), ((VECTOR(int32_t, 4))(p_1298->g_1182.s6136)))).s22, ((VECTOR(int32_t, 16))(((VECTOR(int32_t, 2))(l_1183.xy)).yyyyxyxxxyyxyyxx)).sf9))).xxyyyyxy)), ((VECTOR(int32_t, 2))(p_1298->g_1184.sfd)).yyxyxxyy))), ((VECTOR(int32_t, 16))(safe_mad24_func_int32_t_s_s_s(VECTOR(int32_t, 16),((VECTOR(int32_t, 16))(mad_sat(((VECTOR(int32_t, 2))(((VECTOR(int32_t, 4))(safe_mad_hi_func_int32_t_s_s_s(VECTOR(int32_t, 4),((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))(l_1172.s3, (-3L), 0x22F36E04L, 0x0EECD110L)), (-8L), (((VECTOR(int16_t, 8))(((VECTOR(int16_t, 4))(p_1298->g_1185.wzxz)).wywzzwzx)).s0 != l_1183.y), (-1L), 0L)).lo, ((VECTOR(int32_t, 2))(0x0E1376C5L, 0x68121F2FL)).yxyx, ((VECTOR(int32_t, 2))(7L, (-1L))).xxxx))).hi)).yyyxyxxxxxyxyyxy, ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(4L, 0x19D24C65L)).yxyyyyyx)).s6567374534141155, ((VECTOR(int32_t, 2))((-1L), 4L)).xyxyyyxyxxyxxyxy))), ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(((VECTOR(int32_t, 8))(0x2D48FB33L, 0x745FA542L, (-3L), ((safe_rshift_func_int16_t_s_s((-9L), (safe_lshift_func_uint16_t_u_s((+(safe_add_func_uint64_t_u_u((((p_1298->g_609.f1 == l_1170.x) == (-7L)) , 18446744073709551613UL), p_1298->g_1185.y))), l_1170.y)))) < l_11), (*p_1298->g_817), l_1171.z, 1L, 0x5FD8C67EL)).s50)).xyxyxyyy)).s6334630171101736, ((VECTOR(int32_t, 16))((-1L)))))).even))).s43))), 0x2BBB6A12L)))).s26, ((VECTOR(int32_t, 2))(0x2F2FAA28L))))).yyxxxyxx, ((VECTOR(int32_t, 8))(0x22C7A688L)), ((VECTOR(int32_t, 8))(0L))))).even, ((VECTOR(int32_t, 4))(0x637BD8DFL))))).xyzyyxzy)).s53)).lo != GROUP_DIVERGE(1, 1))), p_1298)) | 0x71L)), p_1298->g_35.s1)) ^ p_1298->g_600.s0);
    return p_1298->g_1297;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_609.f1 p_1298->g_793 p_1298->g_915 p_1298->g_132 p_1298->g_100 p_1298->g_792 p_1298->g_925.f3 p_1298->g_805 p_1298->g_757 p_1298->g_1282
 * writes: p_1298->g_609.f1 p_1298->g_1081 p_1298->g_141.f0 p_1298->g_792 p_1298->g_925.f4
 */
uint8_t  func_6(uint32_t  p_7, struct S4 * p_1298)
{ /* block id: 518 */
    uint64_t l_1194 = 0x818D900719A07139L;
    uint32_t *l_1219 = &p_1298->g_141.f3;
    int32_t l_1225 = 0L;
    uint16_t l_1226 = 65535UL;
    uint8_t l_1227[9][6] = {{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL},{3UL,255UL,0xDFL,1UL,5UL,1UL}};
    int32_t *l_1233 = (void*)0;
    VECTOR(int8_t, 4) l_1240 = (VECTOR(int8_t, 4))(0x1BL, (VECTOR(int8_t, 2))(0x1BL, 0L), 0L);
    VECTOR(int8_t, 8) l_1241 = (VECTOR(int8_t, 8))(0x24L, (VECTOR(int8_t, 4))(0x24L, (VECTOR(int8_t, 2))(0x24L, (-1L)), (-1L)), (-1L), 0x24L, (-1L));
    int8_t ***l_1268 = &p_1298->g_810;
    int32_t l_1269 = 0x437E81A1L;
    uint64_t l_1283 = 0x023FF79ED948B9BAL;
    int32_t *l_1286 = (void*)0;
    int32_t l_1289[6][3] = {{(-5L),0x5FB15F9EL,0x5FB15F9EL},{(-5L),0x5FB15F9EL,0x5FB15F9EL},{(-5L),0x5FB15F9EL,0x5FB15F9EL},{(-5L),0x5FB15F9EL,0x5FB15F9EL},{(-5L),0x5FB15F9EL,0x5FB15F9EL},{(-5L),0x5FB15F9EL,0x5FB15F9EL}};
    int8_t l_1290 = 0x51L;
    uint32_t l_1292 = 4294967295UL;
    int i, j;
    for (p_1298->g_609.f1 = 0; (p_1298->g_609.f1 > (-15)); --p_1298->g_609.f1)
    { /* block id: 521 */
        VECTOR(int16_t, 2) l_1197 = (VECTOR(int16_t, 2))(0x03F0L, 4L);
        int32_t l_1270 = (-4L);
        int32_t *l_1287[7][9][4] = {{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}},{{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186},{&p_1298->g_186,(void*)0,&p_1298->g_186,&p_1298->g_186}}};
        int8_t l_1288 = (-1L);
        int16_t l_1291 = 5L;
        int i, j, k;
        if (l_1194)
        { /* block id: 522 */
            struct S0 l_1216 = {0x02L,0x66D1682FL,-1L,4294967288UL,0xFFBC7823L};
            int32_t *l_1232 = &p_1298->g_609.f2;
            uint64_t *l_1250 = &l_1194;
            struct S0 **l_1260 = &p_1298->g_1164;
            struct S0 ***l_1261 = &l_1260;
            struct S0 **l_1263 = (void*)0;
            struct S0 ***l_1262 = &l_1263;
            int16_t *l_1279 = (void*)0;
            int16_t *l_1280 = (void*)0;
            int16_t *l_1281 = &p_1298->g_925.f4;
            for (p_1298->g_1081 = 23; (p_1298->g_1081 >= 21); p_1298->g_1081--)
            { /* block id: 525 */
                uint8_t *l_1209 = (void*)0;
                uint8_t *l_1210 = (void*)0;
                uint8_t *l_1211 = &p_1298->g_141.f0;
                uint32_t **l_1220 = &l_1219;
                uint32_t *l_1221 = (void*)0;
                int8_t **l_1224 = &p_1298->g_811;
                int32_t l_1228 = 1L;
                int32_t *l_1229 = &p_1298->g_792;
                VECTOR(int64_t, 4) l_1234 = (VECTOR(int64_t, 4))(0x38DAA14DADA8F9D6L, (VECTOR(int64_t, 2))(0x38DAA14DADA8F9D6L, 0x3D0A54B626DF027DL), 0x3D0A54B626DF027DL);
                uint32_t **l_1253 = (void*)0;
                uint32_t ***l_1252 = &l_1253;
                uint32_t ***l_1255 = &l_1220;
                int i;
                (*l_1229) &= (((VECTOR(int16_t, 16))(((VECTOR(int16_t, 16))(l_1197.xyxxyyyyxyyxyyyy)))).s8 | (+(safe_mul_func_int16_t_s_s((((safe_mul_func_int8_t_s_s(((((+(safe_mul_func_int16_t_s_s((safe_lshift_func_uint16_t_u_s((safe_div_func_uint8_t_u_u(p_1298->g_793.s6, p_7)), 12)), ((0xBBL | (((0x5270L >= (l_1225 = (safe_unary_minus_func_uint16_t_u((((*l_1211) = 1UL) == (((((safe_lshift_func_uint16_t_u_s((safe_sub_func_int64_t_s_s((((l_1216 , (safe_lshift_func_int16_t_s_u(((((*l_1220) = l_1219) == l_1221) <= ((((safe_div_func_int16_t_s_s(0x3CFCL, l_1194)) , p_7) <= 0x2C85L) > p_7)), 15))) < (-7L)) , p_1298->g_915.x), l_1197.y)), l_1194)) != l_1197.x) > p_7) , (void*)0) != l_1224)))))) > p_7) < 0x5003L)) >= l_1226)))) , 4294967290UL) , 0x5E52L) && GROUP_DIVERGE(1, 1)), 0x16L)) , l_1227[4][2]) & l_1228), (*p_1298->g_132)))));
                (*l_1229) = ((safe_rshift_func_uint16_t_u_s((l_1232 != l_1233), (p_7 & ((((VECTOR(int64_t, 2))(((VECTOR(int64_t, 16))(min(((VECTOR(int64_t, 4))(l_1234.yxzw)).xxzywyzzxywwxxzz, (int64_t)((+(safe_mul_func_uint16_t_u_u(((((((VECTOR(int32_t, 4))(p_1298->g_1237.s0645)).w != ((safe_lshift_func_int16_t_s_u((((VECTOR(int8_t, 8))(((VECTOR(int8_t, 8))(safe_clamp_func(VECTOR(int8_t, 8),int8_t,((VECTOR(int8_t, 8))(((VECTOR(int8_t, 4))(0x44L, ((VECTOR(int8_t, 2))(max(((VECTOR(int8_t, 8))(l_1240.xxwzxwxz)).s77, ((VECTOR(int8_t, 16))(l_1241.s0421145717713333)).s18))), 6L)).zyxxzzyy)), (int8_t)(((safe_mod_func_int16_t_s_s(((+18446744073709551615UL) & ((VECTOR(int64_t, 2))(min(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 4))(1L, (safe_mod_func_uint8_t_u_u(((((+((VECTOR(uint64_t, 8))(((VECTOR(uint64_t, 2))(6UL, 0UL)), (((VECTOR(int8_t, 4))((*l_1229), ((VECTOR(int8_t, 2))(p_1298->g_1246.s74)), 0x1AL)).w ^ p_7), (safe_rshift_func_int16_t_s_s(l_1216.f0, 4)), 0x1B916225775A336AL, (p_1298->g_1249 , (((p_7 < l_1216.f3) != GROUP_DIVERGE(2, 1)) != 4294967295UL)), 1UL, 0xC284BBE6DBD690F5L)).s6) , (void*)0) == l_1250) || p_1298->g_1251[1][5]), p_1298->g_1078)), 5L, 0x28E8007C3159C0A5L)), p_1298->g_141.f3, 0x21F3215D2BADE654L, 0x0B1CB970A56C98EDL, (-1L))).s21, ((VECTOR(int64_t, 2))((-7L)))))).even), GROUP_DIVERGE(0, 1))) & p_7) || 4294967295UL), (int8_t)l_1216.f0))))).s0 < p_7), 3)) || p_7)) & 8L) , l_1252) == &p_1298->g_936), p_7))) < 0xC4L)))).sb6)).lo == l_1216.f2) , (*l_1229))))) <= l_1240.x);
                (*l_1255) = &l_1219;
            }
            l_1270 |= (safe_mod_func_int64_t_s_s(((safe_div_func_int16_t_s_s(((l_1225 = ((&p_1298->g_1164 != ((*l_1262) = ((*l_1261) = l_1260))) || (l_1197.y != (l_1197.y ^ ((((VECTOR(uint32_t, 4))(0x61FC8EF1L, l_1216.f4, 0xE856AD48L, 4294967295UL)).x <= (((safe_add_func_int16_t_s_s((safe_mul_func_int8_t_s_s(p_7, l_1197.y)), (0xE0L != ((void*)0 == l_1268)))) || (*p_1298->g_132)) | 0L)) || 0x10L))))) == 0x63F1F09DL), l_1269)) != 0x203DL), (-1L)));
            atomic_xor(&p_1298->l_atomic_reduction[0], ((VECTOR(int32_t, 4))(0x3BD7B317L, (safe_mul_func_uint8_t_u_u((((safe_rshift_func_int8_t_s_u(((((p_7 & 4UL) == (safe_div_func_int64_t_s_s((((1UL & (safe_mod_func_uint8_t_u_u(p_1298->g_925.f3, 3L))) ^ (((*l_1281) = 0L) == FAKE_DIVERGE(p_1298->group_2_offset, get_group_id(2), 10))) > (p_7 , (GROUP_DIVERGE(1, 1) & (l_1270 = (((&l_1219 == ((*p_1298->g_805) , &l_1219)) , (void*)0) == p_1298->g_1282))))), l_1283))) == 0xD0L) | p_7), 6)) , p_7) & p_7), p_7)), 0x6D385C92L, 7L)).w + get_linear_global_id());
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
            if (get_linear_local_id() == 0)
                p_1298->v_collective += p_1298->l_atomic_reduction[0];
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        }
        else
        { /* block id: 540 */
            int32_t **l_1285[10][2][8] = {{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}}};
            int i, j, k;
            l_1286 = &l_1270;
        }
        l_1292--;
    }
    return p_7;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_16 p_1298->g_31 p_1298->g_35 p_1298->l_comm_values p_1298->g_31.f0 p_1298->g_45 p_1298->g_68 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_comm_values p_1298->g_104 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_141 p_1298->g_153 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_206 p_1298->g_223 p_1298->g_241 p_1298->g_253 p_1298->g_266 p_1298->g_268 permutations p_1298->g_317 p_1298->g_302 p_1298->g_272 p_1298->g_352 p_1298->g_207 p_1298->g_459 p_1298->g_461 p_1298->g_465 p_1298->g_468 p_1298->g_478 p_1298->g_485 p_1298->g_281 p_1298->g_490 p_1298->g_462 p_1298->g_496 p_1298->g_502 p_1298->g_514 p_1298->g_520 p_1298->g_382 p_1298->g_522 p_1298->g_533 p_1298->g_543 p_1298->g_566 p_1298->g_575 p_1298->g_577 p_1298->g_522.f0 p_1298->g_220 p_1298->g_381 p_1298->g_268.f0 p_1298->g_600 p_1298->g_601 p_1298->g_602 p_1298->g_186 p_1298->g_609 p_1298->g_646 p_1298->g_647 p_1298->g_354 p_1298->g_667 p_1298->g_682 p_1298->g_708 p_1298->g_717 p_1298->g_726 p_1298->g_757 p_1298->g_758 p_1298->g_773 p_1298->g_774 p_1298->g_792 p_1298->g_793 p_1298->g_804 p_1298->g_817 p_1298->g_860 p_1298->g_777 p_1298->g_885 p_1298->g_887 p_1298->g_902 p_1298->g_910 p_1298->g_236 p_1298->g_925 p_1298->g_936 p_1298->g_939 p_1298->g_940 p_1298->g_805 p_1298->g_1027 p_1298->g_1064 p_1298->g_1073 p_1298->g_1081 p_1298->g_958 p_1298->g_723 p_1298->g_1163 p_1298->g_1164 p_1298->g_1165 p_1298->g_1166
 * writes: p_1298->g_16 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_186 p_1298->g_141.f0 p_1298->g_220 p_1298->g_132 p_1298->g_272 p_1298->g_141.f2 p_1298->g_281 p_1298->g_302 p_1298->g_459 p_1298->g_462 p_1298->g_141.f3 p_1298->g_490 p_1298->g_comm_values p_1298->g_496 p_1298->g_521 p_1298->g_223 p_1298->g_381 p_1298->g_646 p_1298->g_609.f2 p_1298->g_131 p_1298->g_609.f1 p_1298->g_601 p_1298->g_468 p_1298->g_667.f3 p_1298->g_723 p_1298->g_758.f1 p_1298->g_774 p_1298->g_776 p_1298->g_792 p_1298->g_793 p_1298->g_804 p_1298->g_809 p_1298->g_757.f2 p_1298->g_609.f4 p_1298->g_902 p_1298->g_667.f4 p_1298->g_936 p_1298->g_757 p_1298->g_1081 p_1298->g_958 p_1298->g_758.f2 p_1298->g_1164 p_1298->g_141
 */
uint64_t  func_8(int64_t  p_9, int8_t  p_10, struct S4 * p_1298)
{ /* block id: 5 */
    VECTOR(int16_t, 2) l_25 = (VECTOR(int16_t, 2))(1L, 0x7AE2L);
    VECTOR(uint8_t, 2) l_41 = (VECTOR(uint8_t, 2))(0x0CL, 0x82L);
    VECTOR(int64_t, 16) l_42 = (VECTOR(int64_t, 16))(4L, (VECTOR(int64_t, 4))(4L, (VECTOR(int64_t, 2))(4L, (-10L)), (-10L)), (-10L), 4L, (-10L), (VECTOR(int64_t, 2))(4L, (-10L)), (VECTOR(int64_t, 2))(4L, (-10L)), 4L, (-10L), 4L, (-10L));
    int32_t *l_791 = &p_1298->g_792;
    int32_t *l_1129 = &p_1298->g_135;
    VECTOR(uint8_t, 2) l_1130 = (VECTOR(uint8_t, 2))(255UL, 0xAFL);
    int8_t *l_1137 = &p_1298->g_1105[0];
    uint64_t l_1140 = 0x294FA421884BF3FFL;
    int32_t l_1149 = (-1L);
    int32_t l_1151 = 0x6C029436L;
    int32_t l_1153 = (-1L);
    int32_t l_1154 = (-10L);
    int32_t l_1155[1];
    VECTOR(uint8_t, 2) l_1156 = (VECTOR(uint8_t, 2))(0x45L, 0x12L);
    int8_t **l_1161 = &l_1137;
    VECTOR(uint16_t, 4) l_1167 = (VECTOR(uint16_t, 4))(0UL, (VECTOR(uint16_t, 2))(0UL, 65530UL), 65530UL);
    VECTOR(uint16_t, 16) l_1168 = (VECTOR(uint16_t, 16))(0x65F3L, (VECTOR(uint16_t, 4))(0x65F3L, (VECTOR(uint16_t, 2))(0x65F3L, 0xCA2EL), 0xCA2EL), 0xCA2EL, 0x65F3L, 0xCA2EL, (VECTOR(uint16_t, 2))(0x65F3L, 0xCA2EL), (VECTOR(uint16_t, 2))(0x65F3L, 0xCA2EL), 0x65F3L, 0xCA2EL, 0x65F3L, 0xCA2EL);
    VECTOR(uint16_t, 4) l_1169 = (VECTOR(uint16_t, 4))(0xB9F0L, (VECTOR(uint16_t, 2))(0xB9F0L, 8UL), 8UL);
    int i;
    for (i = 0; i < 1; i++)
        l_1155[i] = (-5L);
    (*l_1129) = ((*l_791) = (((safe_lshift_func_int16_t_s_u(((VECTOR(int16_t, 16))(0L, 0x5755L, 1L, ((p_1298->g_16 ^= (safe_rshift_func_int8_t_s_u(0x7BL, 1))) || ((safe_lshift_func_uint16_t_u_u(((safe_mul_func_int16_t_s_s((safe_rshift_func_int16_t_s_s((safe_rshift_func_int16_t_s_u(((VECTOR(int16_t, 2))(l_25.yy)).even, 9)), (safe_mul_func_uint8_t_u_u(func_28((p_1298->g_31 , func_32((((((-9L) == (((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 2))(p_1298->g_35.s71)), 0x05L, (p_1298->g_35.s3 | (p_1298->g_793.s5 |= ((*l_791) ^= func_36((((((p_1298->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))] != 0x62FD17BAL) , ((VECTOR(uint8_t, 8))(l_41.yyyyxxyy)).s4) || p_1298->g_16) | p_1298->g_35.s1) , ((VECTOR(int64_t, 2))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 2))(l_42.s8b)).yxyy)).hi)).hi), (safe_sub_func_int32_t_s_s(0x26F57610L, 0xA7276463L)), p_1298->g_31.f0, l_41.x, p_1298)))), ((VECTOR(uint8_t, 2))(9UL)), ((VECTOR(uint8_t, 4))(0UL)), ((VECTOR(uint8_t, 2))(246UL)), 0x04L, ((VECTOR(uint8_t, 2))(0x31L)), 1UL)).s9cc2)).z <= p_1298->g_566[0][0][0])) == p_9) > p_9) , p_1298->g_141), p_9, p_1298)), p_10, p_1298), p_9)))), GROUP_DIVERGE(0, 1))) ^ 0x22L), p_9)) , (*l_791))), (-1L), ((VECTOR(int16_t, 8))(0L)), (*l_791), 0x609AL, 0x36EEL)).s3, p_9)) > p_10) & p_10));
    if ((((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 2))(l_1130.xy)))), 0xA5L, 0x1BL)).y && ((((VECTOR(int64_t, 2))((-1L), 0x7AF5EC6728954624L)).hi | (p_9 , (((-1L) < ((-1L) >= (((safe_lshift_func_uint8_t_u_s((*l_1129), (+((*l_791) = 0x73L)))) , ((safe_div_func_int16_t_s_s((0xBFDCL == p_10), (*l_791))) , (*p_1298->g_206))) != l_1137))) == p_9))) , p_1298->g_708.y)))
    { /* block id: 495 */
        (*l_791) = p_10;
    }
    else
    { /* block id: 497 */
        int32_t *l_1141 = (void*)0;
        int32_t l_1145 = 0x74D42751L;
        int32_t l_1150 = 0x719F5048L;
        VECTOR(int32_t, 2) l_1152 = (VECTOR(int32_t, 2))(0x575141A7L, 0x4589CDB0L);
        int i;
        for (p_1298->g_758.f2 = (-8); (p_1298->g_758.f2 <= (-2)); ++p_1298->g_758.f2)
        { /* block id: 500 */
            l_1141 = l_1141;
        }
        for (p_1298->g_723 = 28; (p_1298->g_723 <= (-17)); p_1298->g_723 = safe_sub_func_int16_t_s_s(p_1298->g_723, 7))
        { /* block id: 505 */
            int32_t l_1144 = 1L;
            int32_t *l_1146 = (void*)0;
            int32_t *l_1147 = (void*)0;
            int32_t *l_1148[10][7][3] = {{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}},{{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145},{(void*)0,&l_1145,&l_1145}}};
            int8_t **l_1159 = &p_1298->g_811;
            int8_t ***l_1160[1][9][6] = {{{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159},{(void*)0,&l_1159,(void*)0,(void*)0,(void*)0,&l_1159}}};
            struct S0 *l_1162 = &p_1298->g_141;
            int i, j, k;
            --l_1156.y;
            l_1161 = l_1159;
            (*p_1298->g_1163) = l_1162;
            (*l_1162) = (*p_1298->g_1164);
        }
    }
    (*p_1298->g_805) = p_1298->g_1165;
    (*l_791) = ((VECTOR(int32_t, 16))(upsample(((VECTOR(int16_t, 4))(p_1298->g_1166.s6715)).ywxxyyyzwzzzywzy, ((VECTOR(uint16_t, 16))(65533UL, ((VECTOR(uint16_t, 2))(l_1167.xw)), ((VECTOR(uint16_t, 8))(0x79AEL, 0x8EEDL, ((VECTOR(uint16_t, 4))(rhadd(((VECTOR(uint16_t, 2))(clz(((VECTOR(uint16_t, 8))(l_1168.sd53dd1c8)).s15))).yxxx, ((VECTOR(uint16_t, 2))(l_1169.wx)).xxxx))), 0x0929L, 0xCDD3L)), ((VECTOR(uint16_t, 2))(0x756AL, 0xCB6AL)), 1UL, 9UL, 0x69AAL))))).sc;
    return p_1298->g_352.y;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_885 p_1298->g_902
 * writes: p_1298->g_69
 */
uint8_t  func_28(uint64_t  p_29, int64_t  p_30, struct S4 * p_1298)
{ /* block id: 487 */
    int32_t *l_1111 = (void*)0;
    int32_t *l_1112 = (void*)0;
    int32_t *l_1113 = (void*)0;
    int32_t *l_1114[3][5][2] = {{{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107}},{{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107}},{{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107},{&p_1298->g_1107,&p_1298->g_1107}}};
    uint16_t l_1115 = 0xB5F5L;
    int16_t *l_1119 = &p_1298->g_925.f4;
    uint32_t *l_1122 = &p_1298->g_141.f1;
    uint32_t **l_1121 = &l_1122;
    uint32_t ***l_1120 = &l_1121;
    uint8_t *l_1125[10] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
    int32_t **l_1126 = (void*)0;
    int32_t **l_1128[3];
    int i, j, k;
    for (i = 0; i < 3; i++)
        l_1128[i] = &l_1112;
    ++l_1115;
    (*p_1298->g_885) = l_1114[0][2][1];
    return p_1298->g_902;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_804 p_1298->g_757.f2 p_1298->g_817 p_1298->g_792 p_1298->g_609.f4 p_1298->g_135 p_1298->g_860 p_1298->g_132 p_1298->g_100 p_1298->g_490 p_1298->g_514 p_1298->g_777 p_1298->g_885 p_1298->g_887 p_1298->g_773 p_1298->g_459.f1 p_1298->g_726 p_1298->g_902 p_1298->g_575 p_1298->g_758.f4 p_1298->g_478 p_1298->g_68 p_1298->g_69 p_1298->g_910 p_1298->g_236 p_1298->g_925 p_1298->g_936 p_1298->g_939 p_1298->g_940 p_1298->g_122 p_1298->g_758 p_1298->g_805 p_1298->g_141 p_1298->g_317 p_1298->g_45 p_1298->g_1027 p_1298->g_1064 p_1298->g_1073 p_1298->g_1081 p_1298->g_958 p_1298->g_302.f1
 * writes: p_1298->g_609.f1 p_1298->g_804 p_1298->g_809 p_1298->g_757.f2 p_1298->g_792 p_1298->g_609.f4 p_1298->g_135 p_1298->g_490 p_1298->g_281 p_1298->g_69 p_1298->g_723 p_1298->g_902 p_1298->g_141.f0 p_1298->g_100 p_1298->g_521 p_1298->g_667.f4 p_1298->g_609.f2 p_1298->g_302.f4 p_1298->g_936 p_1298->g_757 p_1298->g_16 p_1298->g_1081 p_1298->g_958
 */
uint64_t  func_32(struct S0  p_33, uint64_t  p_34, struct S4 * p_1298)
{ /* block id: 333 */
    uint8_t l_798 = 0x17L;
    int64_t *l_799 = (void*)0;
    int64_t *l_800 = &p_1298->g_609.f1;
    uint16_t ****l_803 = &p_1298->g_130;
    struct S1 ***l_806 = (void*)0;
    struct S1 ***l_807[10] = {&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1],&p_1298->g_804[1]};
    int8_t ***l_808[1];
    int8_t ***l_812[5] = {&p_1298->g_810,&p_1298->g_810,&p_1298->g_810,&p_1298->g_810,&p_1298->g_810};
    int8_t ****l_813 = (void*)0;
    int8_t ***l_815 = &p_1298->g_810;
    int8_t ****l_814[2][7] = {{(void*)0,&l_815,(void*)0,(void*)0,&l_815,(void*)0,(void*)0},{(void*)0,&l_815,(void*)0,(void*)0,&l_815,(void*)0,(void*)0}};
    int8_t ***l_816 = &p_1298->g_810;
    VECTOR(int32_t, 4) l_853 = (VECTOR(int32_t, 4))((-3L), (VECTOR(int32_t, 2))((-3L), (-9L)), (-9L));
    VECTOR(uint32_t, 2) l_863 = (VECTOR(uint32_t, 2))(0x2EAFEB4DL, 4294967295UL);
    VECTOR(int32_t, 4) l_869 = (VECTOR(int32_t, 4))(7L, (VECTOR(int32_t, 2))(7L, 0x52CBB3ABL), 0x52CBB3ABL);
    VECTOR(uint32_t, 2) l_870 = (VECTOR(uint32_t, 2))(4UL, 0xE6B0B73AL);
    VECTOR(int64_t, 16) l_872 = (VECTOR(int64_t, 16))(0x440A52538269626FL, (VECTOR(int64_t, 4))(0x440A52538269626FL, (VECTOR(int64_t, 2))(0x440A52538269626FL, 0x64A67A5C02188218L), 0x64A67A5C02188218L), 0x64A67A5C02188218L, 0x440A52538269626FL, 0x64A67A5C02188218L, (VECTOR(int64_t, 2))(0x440A52538269626FL, 0x64A67A5C02188218L), (VECTOR(int64_t, 2))(0x440A52538269626FL, 0x64A67A5C02188218L), 0x440A52538269626FL, 0x64A67A5C02188218L, 0x440A52538269626FL, 0x64A67A5C02188218L);
    VECTOR(uint32_t, 2) l_879 = (VECTOR(uint32_t, 2))(0xFE438F7EL, 0x6D9F1286L);
    int16_t *l_880 = (void*)0;
    union U3 *l_907 = &p_1298->g_31;
    int32_t *l_916 = (void*)0;
    struct S0 l_926 = {1UL,6UL,-1L,4294967295UL,6UL};
    VECTOR(uint8_t, 2) l_947 = (VECTOR(uint8_t, 2))(0x9EL, 6UL);
    VECTOR(int32_t, 8) l_967 = (VECTOR(int32_t, 8))((-5L), (VECTOR(int32_t, 4))((-5L), (VECTOR(int32_t, 2))((-5L), (-1L)), (-1L)), (-1L), (-5L), (-1L));
    VECTOR(int32_t, 8) l_970 = (VECTOR(int32_t, 8))(0L, (VECTOR(int32_t, 4))(0L, (VECTOR(int32_t, 2))(0L, 0x54A53AB0L), 0x54A53AB0L), 0x54A53AB0L, 0L, 0x54A53AB0L);
    int32_t **l_1007 = &l_916;
    VECTOR(int8_t, 8) l_1031 = (VECTOR(int8_t, 8))(0x40L, (VECTOR(int8_t, 4))(0x40L, (VECTOR(int8_t, 2))(0x40L, 0x72L), 0x72L), 0x72L, 0x40L, 0x72L);
    VECTOR(int16_t, 16) l_1036 = (VECTOR(int16_t, 16))(0x0138L, (VECTOR(int16_t, 4))(0x0138L, (VECTOR(int16_t, 2))(0x0138L, (-1L)), (-1L)), (-1L), 0x0138L, (-1L), (VECTOR(int16_t, 2))(0x0138L, (-1L)), (VECTOR(int16_t, 2))(0x0138L, (-1L)), 0x0138L, (-1L), 0x0138L, (-1L));
    uint32_t l_1047 = 0xE4A65323L;
    VECTOR(int8_t, 8) l_1070 = (VECTOR(int8_t, 8))(0x34L, (VECTOR(int8_t, 4))(0x34L, (VECTOR(int8_t, 2))(0x34L, (-1L)), (-1L)), (-1L), 0x34L, (-1L));
    int32_t *l_1091[2][3];
    int32_t **l_1090 = &l_1091[0][2];
    int32_t *l_1094 = (void*)0;
    int32_t *l_1095 = (void*)0;
    int32_t *l_1096 = (void*)0;
    int32_t *l_1097 = (void*)0;
    int32_t *l_1098 = &p_1298->g_792;
    int32_t *l_1099[9];
    int8_t l_1100 = 0L;
    int32_t l_1101 = (-2L);
    int64_t l_1102 = 0x1525220DABDD04A8L;
    int32_t l_1103 = (-6L);
    int8_t l_1104[3][4] = {{0x55L,0x69L,0x70L,0x69L},{0x55L,0x69L,0x70L,0x69L},{0x55L,0x69L,0x70L,0x69L}};
    uint16_t l_1108 = 0UL;
    int i, j;
    for (i = 0; i < 1; i++)
        l_808[i] = (void*)0;
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 3; j++)
            l_1091[i][j] = &p_1298->g_757.f2;
    }
    for (i = 0; i < 9; i++)
        l_1099[i] = &p_1298->g_135;
    (*p_1298->g_817) |= ((safe_sub_func_int64_t_s_s(((*l_800) = l_798), ((~(l_798 > (safe_add_func_int16_t_s_s((6L || l_798), (l_803 == l_803))))) == ((p_1298->g_804[5] = p_1298->g_804[1]) == ((p_1298->g_757.f2 &= ((p_1298->g_809 = l_808[0]) != (l_816 = (l_812[3] = l_808[0])))) , &p_1298->g_805))))) ^ 0L);
    if ((atomic_inc(&p_1298->l_atomic_input[46]) == 8))
    { /* block id: 342 */
        uint32_t l_818 = 0xF71B420FL;
        int32_t l_819 = 0x3F40C1BDL;
        int8_t l_820 = (-8L);
        l_820 &= (l_819 ^= l_818);
        unsigned int result = 0;
        result += l_818;
        result += l_819;
        result += l_820;
        atomic_add(&p_1298->l_special_values[46], result);
    }
    else
    { /* block id: 345 */
        (1 + 1);
    }
    for (p_1298->g_609.f4 = 21; (p_1298->g_609.f4 > (-6)); p_1298->g_609.f4 = safe_sub_func_uint8_t_u_u(p_1298->g_609.f4, 3))
    { /* block id: 350 */
        union U3 **l_868 = &p_1298->g_521;
        struct S1 *l_927 = &p_1298->g_758;
        int32_t l_932 = 0x513DF61BL;
        VECTOR(int32_t, 2) l_969 = (VECTOR(int32_t, 2))(0x49EC2911L, 0x40D43FDBL);
        uint8_t *l_979 = (void*)0;
        VECTOR(uint8_t, 16) l_1028 = (VECTOR(uint8_t, 16))(0x1EL, (VECTOR(uint8_t, 4))(0x1EL, (VECTOR(uint8_t, 2))(0x1EL, 255UL), 255UL), 255UL, 0x1EL, 255UL, (VECTOR(uint8_t, 2))(0x1EL, 255UL), (VECTOR(uint8_t, 2))(0x1EL, 255UL), 0x1EL, 255UL, 0x1EL, 255UL);
        int64_t l_1044 = (-1L);
        uint16_t l_1049 = 65530UL;
        int16_t l_1053 = (-8L);
        int8_t l_1055 = 0L;
        int8_t l_1056[5][3][6] = {{{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)}},{{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)}},{{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)}},{{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)}},{{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)},{0x21L,0L,(-1L),(-10L),0x1CL,(-1L)}}};
        uint32_t l_1057 = 0x3D9361FDL;
        VECTOR(uint16_t, 8) l_1062 = (VECTOR(uint16_t, 8))(0x2284L, (VECTOR(uint16_t, 4))(0x2284L, (VECTOR(uint16_t, 2))(0x2284L, 65529UL), 65529UL), 65529UL, 0x2284L, 65529UL);
        VECTOR(int64_t, 4) l_1065 = (VECTOR(int64_t, 4))(0x7EEDEBA802991223L, (VECTOR(int64_t, 2))(0x7EEDEBA802991223L, 7L), 7L);
        VECTOR(uint8_t, 8) l_1071 = (VECTOR(uint8_t, 8))(0x92L, (VECTOR(uint8_t, 4))(0x92L, (VECTOR(uint8_t, 2))(0x92L, 0xDEL), 0xDEL), 0xDEL, 0x92L, 0xDEL);
        int i, j, k;
        if ((atomic_inc(&p_1298->g_atomic_input[47 * get_linear_group_id() + 2]) == 2))
        { /* block id: 352 */
            int32_t l_823 = 5L;
            for (l_823 = 0; (l_823 > (-10)); l_823--)
            { /* block id: 355 */
                uint32_t l_826[4];
                VECTOR(int32_t, 8) l_851 = (VECTOR(int32_t, 8))(0x58B831B2L, (VECTOR(int32_t, 4))(0x58B831B2L, (VECTOR(int32_t, 2))(0x58B831B2L, 0x0278FDD4L), 0x0278FDD4L), 0x0278FDD4L, 0x58B831B2L, 0x0278FDD4L);
                int32_t l_852 = 0x341D2C0EL;
                int i;
                for (i = 0; i < 4; i++)
                    l_826[i] = 0x572A8E22L;
                l_826[3] ^= 1L;
                for (l_826[1] = 0; (l_826[1] >= 51); ++l_826[1])
                { /* block id: 359 */
                    struct S1 l_829 = {0xDC626D32L,0x712D3495517D517EL,0x0DF3F259L,0x8254CEA8L,-1L};/* VOLATILE GLOBAL l_829 */
                    uint64_t l_830 = 0x8C92C4AA1277DF28L;
                    uint64_t l_831[8];
                    uint8_t l_832 = 0x2AL;
                    VECTOR(int16_t, 4) l_833 = (VECTOR(int16_t, 4))(7L, (VECTOR(int16_t, 2))(7L, (-8L)), (-8L));
                    uint32_t l_834 = 1UL;
                    int i;
                    for (i = 0; i < 8; i++)
                        l_831[i] = 2UL;
                    l_834 = ((l_829 , (((VECTOR(uint16_t, 4))((l_831[4] &= l_830), l_832, 0x610DL, 0x157EL)).y , ((VECTOR(int16_t, 4))(((VECTOR(int16_t, 16))(l_833.xyxyzzyxzzwxxxyz)).sac40)).w)) , ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(0x35A6B23EL, (-1L))).yyxyxyxx)).s2);
                }
                for (l_826[2] = (-10); (l_826[2] > 42); l_826[2] = safe_add_func_int32_t_s_s(l_826[2], 6))
                { /* block id: 365 */
                    int32_t l_837 = (-1L);
                    int32_t l_850 = 0x75226CC6L;
                    for (l_837 = (-24); (l_837 >= 16); l_837 = safe_add_func_uint16_t_u_u(l_837, 8))
                    { /* block id: 368 */
                        uint64_t *l_841 = (void*)0;
                        uint64_t **l_840 = &l_841;
                        uint64_t l_842 = 0x68D29B373E1C6101L;
                        int32_t l_846 = (-2L);
                        int32_t *l_845 = &l_846;
                        int32_t *l_847 = &l_846;
                        int32_t *l_848 = (void*)0;
                        int32_t *l_849 = &l_846;
                        l_840 = (void*)0;
                        l_842++;
                        l_847 = l_845;
                        l_849 = l_848;
                    }
                    l_850 = ((VECTOR(int32_t, 2))(0L, 0L)).hi;
                }
                l_852 &= ((VECTOR(int32_t, 2))(l_851.s76)).lo;
            }
            unsigned int result = 0;
            result += l_823;
            atomic_add(&p_1298->g_special_values[47 * get_linear_group_id() + 2], result);
        }
        else
        { /* block id: 378 */
            (1 + 1);
        }
        if (((VECTOR(int32_t, 8))(l_853.wxwxwxxx)).s0)
        { /* block id: 381 */
            int32_t *l_854 = (void*)0;
            int32_t *l_855 = &p_1298->g_135;
            int32_t *l_856 = (void*)0;
            int32_t l_857 = 0x7590EB2EL;
            uint64_t *l_873 = &p_1298->g_490;
            uint64_t *l_876 = &p_1298->g_281;
            int16_t **l_881 = (void*)0;
            int16_t **l_882 = &l_880;
            VECTOR(uint16_t, 16) l_974 = (VECTOR(uint16_t, 16))(0x5DA8L, (VECTOR(uint16_t, 4))(0x5DA8L, (VECTOR(uint16_t, 2))(0x5DA8L, 0UL), 0UL), 0UL, 0x5DA8L, 0UL, (VECTOR(uint16_t, 2))(0x5DA8L, 0UL), (VECTOR(uint16_t, 2))(0x5DA8L, 0UL), 0x5DA8L, 0UL, 0x5DA8L, 0UL);
            VECTOR(uint8_t, 16) l_1024 = (VECTOR(uint8_t, 16))(0x0AL, (VECTOR(uint8_t, 4))(0x0AL, (VECTOR(uint8_t, 2))(0x0AL, 0x86L), 0x86L), 0x86L, 0x0AL, 0x86L, (VECTOR(uint8_t, 2))(0x0AL, 0x86L), (VECTOR(uint8_t, 2))(0x0AL, 0x86L), 0x0AL, 0x86L, 0x0AL, 0x86L);
            int i;
            l_857 ^= ((*l_855) |= l_798);
            if ((((safe_rshift_func_uint16_t_u_u((p_1298->g_860 , (*p_1298->g_132)), 14)) && (safe_mul_func_uint8_t_u_u((((-1L) || ((VECTOR(uint32_t, 2))(l_863.xy)).odd) || (safe_sub_func_uint32_t_u_u((+(safe_add_func_uint64_t_u_u(((p_1298->g_609.f1 = (((p_33.f1 , l_868) != &p_1298->g_521) , ((VECTOR(int64_t, 4))(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(rhadd(((VECTOR(int64_t, 2))(upsample(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 8))(l_869.wwwxzzxz)))).s17, ((VECTOR(uint32_t, 8))(l_870.yxyxyyxy)).s76))), ((VECTOR(int64_t, 4))(safe_clamp_func(VECTOR(int64_t, 4),VECTOR(int64_t, 4),((VECTOR(int64_t, 8))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 2))(0x668CDCC8127E236AL, 0x1E5F4CD57D2FBE27L)), (-2L), (-6L))), 0x565DD72024543CC5L, (-7L), (-1L), (-4L))).hi, ((VECTOR(int64_t, 2))(p_1298->g_871.s46)).xxxy, ((VECTOR(int64_t, 4))(l_872.s0820))))).hi))).xxyxyxxy)).even)).z)) , ((*l_876) = ((*l_873)++))), p_1298->g_514.s0))), (safe_unary_minus_func_uint64_t_u(((VECTOR(uint64_t, 4))(upsample(((VECTOR(uint32_t, 8))(p_1298->g_878.xxyxyxyy)).odd, ((VECTOR(uint32_t, 8))(l_879.yxyyxyyx)).even))).x))))), (((*l_882) = l_880) != (l_863.y , p_1298->g_777))))) && 1UL))
            { /* block id: 388 */
                int32_t *l_883 = &l_857;
                (*p_1298->g_885) = l_883;
                return (*l_855);
            }
            else
            { /* block id: 391 */
                int32_t *l_886 = (void*)0;
                int32_t **l_888[2];
                struct S1 *l_909 = &p_1298->g_758;
                int i;
                for (i = 0; i < 2; i++)
                    l_888[i] = &l_854;
                (*p_1298->g_887) &= ((*l_855) = 7L);
                (*p_1298->g_773) = l_886;
                for (p_1298->g_723 = 9; (p_1298->g_723 < 7); --p_1298->g_723)
                { /* block id: 397 */
                    int64_t *l_901 = &p_1298->g_902;
                    uint8_t *l_903 = (void*)0;
                    uint8_t *l_904 = (void*)0;
                    uint8_t *l_905 = &p_1298->g_141.f0;
                    int32_t l_906 = 1L;
                    struct S1 *l_908 = (void*)0;
                    if ((safe_mod_func_uint16_t_u_u(((safe_sub_func_int64_t_s_s((p_1298->g_459.f1 , p_1298->g_726.s6), ((safe_lshift_func_uint16_t_u_u((((p_33.f4 , ((*l_901) &= (safe_mul_func_uint16_t_u_u((safe_mul_func_uint8_t_u_u(0xA4L, p_33.f1)), (0x0FBEL || ((void*)0 != &p_1298->g_792)))))) , ((((*p_1298->g_132) = (((*l_905) = p_1298->g_575.w) || l_906)) ^ p_33.f2) , p_1298->g_758.f4)) > FAKE_DIVERGE(p_1298->group_2_offset, get_group_id(2), 10)), p_33.f3)) < p_33.f3))) != p_1298->g_478), l_906)))
                    { /* block id: 401 */
                        (*l_868) = l_907;
                    }
                    else
                    { /* block id: 403 */
                        (*p_1298->g_885) = (void*)0;
                        l_909 = l_908;
                    }
                }
            }
            (*p_1298->g_910) = (*p_1298->g_68);
            for (p_1298->g_667.f4 = 5; (p_1298->g_667.f4 > (-10)); --p_1298->g_667.f4)
            { /* block id: 412 */
                struct S1 *l_928 = &p_1298->g_667;
                VECTOR(int8_t, 16) l_962 = (VECTOR(int8_t, 16))(0x55L, (VECTOR(int8_t, 4))(0x55L, (VECTOR(int8_t, 2))(0x55L, 0x22L), 0x22L), 0x22L, 0x55L, 0x22L, (VECTOR(int8_t, 2))(0x55L, 0x22L), (VECTOR(int8_t, 2))(0x55L, 0x22L), 0x55L, 0x22L, 0x55L, 0x22L);
                uint8_t *l_980[7];
                int32_t l_982[7][3][1] = {{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}},{{0x5F3BAEEDL},{0x5F3BAEEDL},{0x5F3BAEEDL}}};
                VECTOR(uint16_t, 4) l_988 = (VECTOR(uint16_t, 4))(0x9CEEL, (VECTOR(uint16_t, 2))(0x9CEEL, 6UL), 6UL);
                uint32_t *l_1012 = (void*)0;
                uint32_t *l_1045 = (void*)0;
                uint32_t *l_1046 = &p_1298->g_141.f1;
                int32_t l_1048 = 1L;
                int i, j, k;
                for (i = 0; i < 7; i++)
                    l_980[i] = &l_926.f0;
                for (p_1298->g_609.f2 = 0; (p_1298->g_609.f2 == 28); ++p_1298->g_609.f2)
                { /* block id: 415 */
                    int8_t **l_929[4][4] = {{&p_1298->g_811,&p_1298->g_811,&p_1298->g_811,&p_1298->g_811},{&p_1298->g_811,&p_1298->g_811,&p_1298->g_811,&p_1298->g_811},{&p_1298->g_811,&p_1298->g_811,&p_1298->g_811,&p_1298->g_811},{&p_1298->g_811,&p_1298->g_811,&p_1298->g_811,&p_1298->g_811}};
                    int32_t l_931 = 0x73395E6FL;
                    int i, j;
                    if (((VECTOR(int32_t, 4))(p_1298->g_915.yxxx)).w)
                    { /* block id: 416 */
                        uint32_t l_930 = 0x618FF9BAL;
                        (*l_855) |= ((void*)0 == p_1298->g_236[6][0]);
                        l_916 = (void*)0;
                        l_931 = (p_33.f4 == ((safe_div_func_int64_t_s_s(0x1D142A08AA751315L, (safe_add_func_uint64_t_u_u(((((((((safe_div_func_uint32_t_u_u(((p_1298->g_925 , l_926) , GROUP_DIVERGE(0, 1)), p_33.f2)) , ((l_927 != l_928) , l_929[0][1])) != (void*)0) ^ 0UL) < 0UL) && p_33.f4) >= GROUP_DIVERGE(1, 1)) , p_33.f0), l_930)))) != 1L));
                        return l_932;
                    }
                    else
                    { /* block id: 421 */
                        int32_t **l_933 = &l_856;
                        (*l_933) = &l_932;
                    }
                    for (p_1298->g_302.f4 = 0; (p_1298->g_302.f4 < 2); p_1298->g_302.f4 = safe_add_func_int16_t_s_s(p_1298->g_302.f4, 6))
                    { /* block id: 426 */
                        uint8_t l_957 = 254UL;
                        (*p_1298->g_939) = p_1298->g_936;
                        (*l_855) = (p_1298->g_940 , ((*l_856) = (safe_rshift_func_int8_t_s_u(((safe_lshift_func_uint8_t_u_u((safe_mul_func_uint16_t_u_u(((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 4))(upsample(((VECTOR(uint8_t, 4))(l_947.xyyx)), ((VECTOR(uint8_t, 4))(p_1298->g_948.s0714))))))).w, (safe_mul_func_uint16_t_u_u((safe_lshift_func_uint16_t_u_u((l_931 && (!(l_931 = (((3UL != (safe_mul_func_uint8_t_u_u((((VECTOR(int64_t, 8))(((VECTOR(int64_t, 16))((+(-3L)), ((safe_rshift_func_uint8_t_u_u(GROUP_DIVERGE(2, 1), 7)) != (((void*)0 == (*p_1298->g_936)) <= l_957)), 2L, ((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(0x51880FDF41D37A16L, 6L)).xyxyxxyy)).s10)).xyyxyyyx)), ((VECTOR(int64_t, 4))(p_1298->g_958.yyxy)), 0x44A8DC5D4CBC0DBBL)).even)).s7 ^ (safe_mod_func_int8_t_s_s(((VECTOR(int8_t, 16))(safe_mad_hi_func_int8_t_s_s_s(VECTOR(int8_t, 16),((VECTOR(int8_t, 8))(hadd(((VECTOR(int8_t, 2))(4L, 0x2FL)).yyyxyyyy, ((VECTOR(int8_t, 16))(p_1298->g_961.xyxxyyxyyyxxyyxx)).hi))).s3007014156034456, ((VECTOR(int8_t, 16))(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 16))((-2L), ((VECTOR(int8_t, 8))(l_962.s335e483a)), 9L, (-1L), 0x1EL, (-1L), 0x13L, 1L, (-7L))).s97)).xyyyxyxyxyyxyyyx)), ((VECTOR(int8_t, 8))(((VECTOR(int8_t, 2))(0L, 0L)).yyyyyxyy)).s4043124302031632))).s6, GROUP_DIVERGE(0, 1)))), (*l_856)))) > ((p_33.f2 , &p_1298->g_69) != &p_1298->g_69)) && p_33.f1)))), (*p_1298->g_132))), 65535UL)))), 1)) | p_1298->g_122), (*l_856)))));
                        (*l_855) |= p_34;
                    }
                    for (p_1298->g_100 = 0; (p_1298->g_100 > 19); p_1298->g_100 = safe_add_func_uint8_t_u_u(p_1298->g_100, 2))
                    { /* block id: 435 */
                        (*p_1298->g_805) = (*l_927);
                    }
                }
                for (p_1298->g_609.f2 = (-12); (p_1298->g_609.f2 >= 19); p_1298->g_609.f2 = safe_add_func_uint32_t_u_u(p_1298->g_609.f2, 7))
                { /* block id: 441 */
                    int32_t l_1011 = 0x2EC34868L;
                    if (((VECTOR(int32_t, 8))(min(((VECTOR(int32_t, 4))(0x28831F69L, l_962.s1, 0x2D5846A3L, 0x57273934L)).xzywwzzy, ((VECTOR(int32_t, 2))(((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(max(((VECTOR(int32_t, 16))(safe_mad24_func_int32_t_s_s_s(VECTOR(int32_t, 16),((VECTOR(int32_t, 8))(hadd(((VECTOR(int32_t, 2))(0x5C1D5787L, (-9L))).xxxxxxxy, ((VECTOR(int32_t, 2))(l_967.s74)).xxxyxxyy))).s4372456724570771, ((VECTOR(int32_t, 4))(p_1298->g_968.s7436)).zxywyzxwwzwxxzyw, ((VECTOR(int32_t, 4))(l_969.xyyx)).yyxxzxxyyywzwyzw))).s6c, ((VECTOR(int32_t, 4))(l_970.s5601)).even))), 0x616307D9L, 0x6320C7FDL)).even)).xyyxxxyy))).s3)
                    { /* block id: 442 */
                        struct S0 *l_971 = &l_926;
                        int16_t *l_981 = (void*)0;
                        uint8_t l_990 = 0x3DL;
                        int32_t *l_994 = &p_1298->g_792;
                        uint32_t l_1010 = 0xEDC1666FL;
                        uint32_t **l_1013 = &l_1012;
                        (*l_971) = p_1298->g_141;
                        l_969.y = ((VECTOR(int32_t, 8))(0x1C3866A2L, 4L, (l_962.s2 >= p_1298->g_382.x), ((VECTOR(int32_t, 2))(safe_mad24_func_int32_t_s_s_s(VECTOR(int32_t, 2),((VECTOR(int32_t, 16))(((safe_mul_func_uint16_t_u_u(((VECTOR(uint16_t, 4))(l_974.s35e4)).w, (safe_add_func_int64_t_s_s((safe_mul_func_int16_t_s_s((l_982[6][2][0] ^= (l_932 = ((l_980[6] = l_979) == (void*)0))), ((VECTOR(uint16_t, 16))(((VECTOR(uint16_t, 4))(p_1298->g_983.yxyy)).zwwywzyyywyywzzy)).sc)), ((((((*p_1298->g_132) = (safe_lshift_func_uint16_t_u_s((safe_lshift_func_uint16_t_u_s(((VECTOR(uint16_t, 16))(l_988.zzwyzyxwxywxzwww)).sc, 5)), 13))) > p_33.f3) < (((VECTOR(uint8_t, 16))(p_1298->g_989.sce914818d22d6e38)).s5 >= l_990)) , (p_1298->g_991 , (!246UL))) < (safe_mul_func_int16_t_s_s(p_33.f1, p_33.f0))))))) ^ p_33.f0), ((VECTOR(int32_t, 8))(1L)), p_33.f3, 1L, 0x66AF6A07L, 9L, 6L, 0x134342CEL, 0x5C617B9FL)).sa6, ((VECTOR(int32_t, 2))(0x6D0F64D2L)), ((VECTOR(int32_t, 2))(2L))))), ((VECTOR(int32_t, 2))(0x7EA93625L)), 0x46F8BF25L)).s0;
                        (*l_1007) = (*p_1298->g_317);
                    }
                    else
                    { /* block id: 453 */
                        (*l_855) ^= 0x28C4D943L;
                        (*l_855) = (safe_sub_func_int16_t_s_s(p_33.f0, p_34));
                    }
                    l_1011 = p_33.f1;
                    (*l_1007) = (*l_1007);
                    for (p_1298->g_16 = (-19); (p_1298->g_16 != 57); ++p_1298->g_16)
                    { /* block id: 461 */
                        return p_1298->g_45.s1;
                    }
                }
                l_1049 ^= (((safe_mul_func_int8_t_s_s((safe_div_func_int16_t_s_s(((VECTOR(int16_t, 4))(upsample(((VECTOR(int8_t, 2))((-1L), 0x59L)).xxxy, ((VECTOR(uint8_t, 16))(l_1024.s5eab79fb9d257bae)).s3751))).z, (l_1048 = (safe_div_func_uint16_t_u_u(((*p_1298->g_132) = ((p_1298->g_1027[0] , (l_982[6][2][0] &= ((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 16))(rhadd(((VECTOR(uint8_t, 16))(l_1028.s66869c3779a3b3e5)), ((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 2))(hadd(((VECTOR(uint8_t, 8))(p_1298->g_1029.s57516330)).s12, ((VECTOR(uint8_t, 8))(max(((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(abs_diff(((VECTOR(int8_t, 2))(p_1298->g_1030.yy)), ((VECTOR(int8_t, 4))(min(((VECTOR(int8_t, 4))(clz(((VECTOR(int8_t, 4))(mad_sat(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 2))(hadd(((VECTOR(int8_t, 8))(l_1031.s63730416)).s13, ((VECTOR(int8_t, 8))((l_969.x = p_33.f0), ((VECTOR(int8_t, 2))(0x06L, 0L)), ((VECTOR(int8_t, 2))((-2L), (-1L))), (safe_sub_func_uint8_t_u_u(((safe_lshift_func_uint8_t_u_u(GROUP_DIVERGE(1, 1), ((VECTOR(uint8_t, 16))(p_33.f1, (((*l_1046) = ((((VECTOR(int16_t, 8))(mul_hi(((VECTOR(int16_t, 2))((-1L), (-1L))).xyxxyxyx, ((VECTOR(int16_t, 8))(rhadd(((VECTOR(int16_t, 16))(((VECTOR(int16_t, 8))(l_1036.s64461cca)).s4173073764537136)).even, ((VECTOR(int16_t, 8))(min(((VECTOR(int16_t, 4))(((VECTOR(int16_t, 8))(((VECTOR(int16_t, 2))(((VECTOR(int16_t, 16))(0x7AA1L, 0x3815L, ((VECTOR(int16_t, 2))(mul_hi(((VECTOR(int16_t, 8))(mul_hi(((VECTOR(int16_t, 8))((*l_855), ((safe_lshift_func_uint8_t_u_u((safe_add_func_uint32_t_u_u(((p_1298->g_1030.y | (p_33.f2 && ((VECTOR(int64_t, 8))(add_sat(((VECTOR(int64_t, 16))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(0L, 9L)), ((VECTOR(int64_t, 2))(p_1298->g_1041.sa2)), 0x1D124A9BE8883EBBL, ((VECTOR(int64_t, 2))(safe_mad_hi_func_int64_t_s_s_s(VECTOR(int64_t, 2),((VECTOR(int64_t, 8))(((VECTOR(int64_t, 16))(9L, 0x614AED88CF12CB42L, 1L, (p_1298->g_871.sd | (safe_div_func_int64_t_s_s(p_1298->g_925.f4, 0x56535764E6B44955L))), p_1298->g_478, p_33.f3, ((VECTOR(int64_t, 2))((-1L))), p_33.f0, ((VECTOR(int64_t, 2))(0x70D9E66E727EAB23L)), ((VECTOR(int64_t, 4))(0x112B9D63045FF894L)), (-1L))).lo)).s35, ((VECTOR(int64_t, 2))(1L)), ((VECTOR(int64_t, 2))((-8L)))))), 0x66E2CF202E1BBE3EL)).even)).yxzzwzzyzyxwyzyz)).even, ((VECTOR(int64_t, 8))((-10L)))))).s5)) < p_1298->g_757.f3), l_962.s3)), l_988.w)) && 0x333EFD94L), ((VECTOR(int16_t, 2))(0x434BL)), 1L, 0L, 8L, 0x6DC0L)), ((VECTOR(int16_t, 8))(7L))))).s04, ((VECTOR(int16_t, 2))(1L))))), (-1L), ((VECTOR(int16_t, 4))(9L)), ((VECTOR(int16_t, 4))(0x4862L)), 0x4E05L, 6L, 0x1E09L)).sc6)), ((VECTOR(int16_t, 2))((-1L))), l_962.s5, ((VECTOR(int16_t, 2))((-9L))), 0x5FDEL)).even)).zzzywxzz, ((VECTOR(int16_t, 8))(0L))))))))))).s2 || l_1044) > p_1298->g_609.f2)) <= p_33.f3), GROUP_DIVERGE(2, 1), ((VECTOR(uint8_t, 8))(1UL)), 8UL, ((VECTOR(uint8_t, 4))(0xA9L)))).sf)) || 3UL), GROUP_DIVERGE(0, 1))), (-1L), 0L)).s24))), 8L, 0x78L)), ((VECTOR(int8_t, 4))(0x09L)), ((VECTOR(int8_t, 4))(0x08L)))))))), ((VECTOR(int8_t, 4))(0L))))).even))), 255UL, 1UL)).even)), 0x43L, l_1047, ((VECTOR(uint8_t, 4))(0UL)))), ((VECTOR(uint8_t, 8))(255UL))))).s43))))).yyxyyyxyyyxyyxyy))).s03)), 252UL, p_1298->g_1029.s4, 2UL, ((VECTOR(uint8_t, 2))(0UL)), 0x15L)).s6)) && 0x9CL)), p_34))))), p_33.f3)) == p_33.f1) <= p_33.f3);
            }
        }
        else
        { /* block id: 472 */
            int32_t *l_1050 = (void*)0;
            int32_t *l_1051 = &p_1298->g_792;
            int32_t *l_1052[1][9][1] = {{{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0}}};
            int32_t l_1054 = 0x13273277L;
            int64_t *l_1063 = (void*)0;
            VECTOR(uint8_t, 16) l_1072 = (VECTOR(uint8_t, 16))(255UL, (VECTOR(uint8_t, 4))(255UL, (VECTOR(uint8_t, 2))(255UL, 0x39L), 0x39L), 0x39L, 255UL, 0x39L, (VECTOR(uint8_t, 2))(255UL, 0x39L), (VECTOR(uint8_t, 2))(255UL, 0x39L), 255UL, 0x39L, 255UL, 0x39L);
            uint64_t *l_1079 = (void*)0;
            uint64_t *l_1080 = &p_1298->g_1081;
            uint16_t *l_1089 = &p_1298->g_16;
            int i, j, k;
            l_1057--;
            (*p_1298->g_817) = (safe_rshift_func_uint16_t_u_s(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 16))(((VECTOR(uint16_t, 16))(l_1062.s2633424472464255)))).scb)).lo, (p_1298->g_925.f1 < (l_1063 == (void*)0))));
            (*p_1298->g_805) = p_1298->g_1064;
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
            p_1298->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 155)), permutations[(safe_mod_func_uint32_t_u_u((((VECTOR(int16_t, 2))((-1L), 0x438BL)).even == ((+((VECTOR(int64_t, 4))(((VECTOR(int64_t, 4))(l_1065.wyxw)))).x) != (safe_add_func_int32_t_s_s(((safe_rshift_func_uint8_t_u_s(((((VECTOR(int16_t, 8))(((VECTOR(int16_t, 16))(upsample(((VECTOR(int8_t, 16))(l_1070.s1212576622655651)), ((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 4))(mad_hi(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 2))(l_1071.s36)))).xxxx, ((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 16))(hadd(((VECTOR(uint8_t, 8))(l_1072.s827f31a3)).s1761703746732515, ((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 16))(p_1298->g_1073.yxyxyyxxxyyyxxyx)).se, ((VECTOR(uint8_t, 4))((safe_div_func_uint32_t_u_u((p_33.f4 > ((l_1028.s9 < (safe_lshift_func_int8_t_s_u(((p_1298->g_958.x |= ((((--(*l_1080)) , ((safe_lshift_func_int8_t_s_s((safe_sub_func_uint8_t_u_u(((safe_unary_minus_func_int16_t_s((l_969.y = p_34))) & 0xC4L), ((VECTOR(int8_t, 16))(((VECTOR(int8_t, 8))(((VECTOR(int8_t, 2))((-9L), (-1L))).yyxxyyxx)).s2566043427117272)).s3)), 4)) < (l_1089 != &l_1049))) > GROUP_DIVERGE(2, 1)) > ((l_1090 = (void*)0) != (void*)0))) , (safe_mod_func_uint16_t_u_u((*l_1051), p_33.f4))), 2))) < 1L)), p_33.f1)), p_1298->g_302.f1, 1UL, 255UL)), ((VECTOR(uint8_t, 2))(0x75L)), 0xDBL)).s6017152444641275))))))).s7d20)), ((VECTOR(uint8_t, 4))(0x1CL))))).zzxxyxxyyxzyxwxx))))).even)).s5 & (-3L)) == 0x1BE1AFB2L), 3)) > 0x381EDD1DL), p_33.f4)))), 10))][(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))]));
        }
    }
    ++l_1108;
    return p_33.f3;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_45 p_1298->g_35 p_1298->g_16 p_1298->g_68 p_1298->g_69 p_1298->l_comm_values p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_comm_values p_1298->g_104 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_141 p_1298->g_153 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_206 p_1298->g_223 p_1298->g_241 p_1298->g_253 p_1298->g_266 p_1298->g_268 permutations p_1298->g_317 p_1298->g_302 p_1298->g_272 p_1298->g_352 p_1298->g_207 p_1298->g_459 p_1298->g_461 p_1298->g_465 p_1298->g_468 p_1298->g_478 p_1298->g_485 p_1298->g_281 p_1298->g_490 p_1298->g_462 p_1298->g_496 p_1298->g_502 p_1298->g_514 p_1298->g_520 p_1298->g_382 p_1298->g_522 p_1298->g_533 p_1298->g_543 p_1298->g_566 p_1298->g_575 p_1298->g_577 p_1298->g_522.f0 p_1298->g_220 p_1298->g_381 p_1298->g_268.f0 p_1298->g_600 p_1298->g_601 p_1298->g_602 p_1298->g_186 p_1298->g_609 p_1298->g_646 p_1298->g_647 p_1298->g_354 p_1298->g_667 p_1298->g_682 p_1298->g_708 p_1298->g_717 p_1298->g_726 p_1298->g_31 p_1298->g_757 p_1298->g_758 p_1298->g_773 p_1298->g_774
 * writes: p_1298->g_16 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_186 p_1298->g_141.f0 p_1298->g_220 p_1298->g_132 p_1298->g_272 p_1298->g_141.f2 p_1298->g_281 p_1298->g_302 p_1298->g_459 p_1298->g_462 p_1298->g_141.f3 p_1298->g_490 p_1298->g_comm_values p_1298->g_496 p_1298->g_521 p_1298->g_223 p_1298->g_381 p_1298->g_646 p_1298->g_609.f2 p_1298->g_131 p_1298->g_609.f1 p_1298->g_601 p_1298->g_468 p_1298->g_667.f3 p_1298->g_723 p_1298->g_758.f1 p_1298->g_774 p_1298->g_776
 */
int32_t  func_36(int64_t  p_37, uint64_t  p_38, uint32_t  p_39, int32_t  p_40, struct S4 * p_1298)
{ /* block id: 7 */
    int32_t l_61 = (-9L);
    VECTOR(uint64_t, 16) l_531 = (VECTOR(uint64_t, 16))(0x49F5F37F1F9565CAL, (VECTOR(uint64_t, 4))(0x49F5F37F1F9565CAL, (VECTOR(uint64_t, 2))(0x49F5F37F1F9565CAL, 0UL), 0UL), 0UL, 0x49F5F37F1F9565CAL, 0UL, (VECTOR(uint64_t, 2))(0x49F5F37F1F9565CAL, 0UL), (VECTOR(uint64_t, 2))(0x49F5F37F1F9565CAL, 0UL), 0x49F5F37F1F9565CAL, 0UL, 0x49F5F37F1F9565CAL, 0UL);
    VECTOR(int64_t, 4) l_532 = (VECTOR(int64_t, 4))((-4L), (VECTOR(int64_t, 2))((-4L), 0x5C27895D8E9A7666L), 0x5C27895D8E9A7666L);
    VECTOR(uint16_t, 2) l_534 = (VECTOR(uint16_t, 2))(3UL, 0x0439L);
    VECTOR(uint8_t, 4) l_537 = (VECTOR(uint8_t, 4))(8UL, (VECTOR(uint8_t, 2))(8UL, 7UL), 7UL);
    int16_t *l_538 = &p_1298->g_302.f4;
    int32_t *l_594 = &p_1298->g_186;
    int32_t l_614[6][3] = {{4L,4L,0x15A03C46L},{4L,4L,0x15A03C46L},{4L,4L,0x15A03C46L},{4L,4L,0x15A03C46L},{4L,4L,0x15A03C46L},{4L,4L,0x15A03C46L}};
    VECTOR(int8_t, 2) l_631 = (VECTOR(int8_t, 2))(0x07L, 0L);
    VECTOR(uint64_t, 2) l_638 = (VECTOR(uint64_t, 2))(18446744073709551614UL, 0xF280EE186638758BL);
    int8_t *l_642 = (void*)0;
    int8_t **l_641 = &l_642;
    uint64_t *l_643 = &p_1298->g_490;
    uint16_t **l_653 = (void*)0;
    int64_t l_656 = (-4L);
    VECTOR(int64_t, 4) l_671 = (VECTOR(int64_t, 4))(0x62F10FD9519BB339L, (VECTOR(int64_t, 2))(0x62F10FD9519BB339L, 0x6EBC1F2C004063B4L), 0x6EBC1F2C004063B4L);
    VECTOR(int64_t, 2) l_672 = (VECTOR(int64_t, 2))(0x6FAB9134090C812CL, 5L);
    int8_t l_787 = 0L;
    uint8_t l_788 = 0x67L;
    int i, j;
    (*l_594) = ((!((VECTOR(int32_t, 2))(p_1298->g_45.s45)).lo) > (func_46((safe_unary_minus_func_uint8_t_u((safe_mul_func_uint8_t_u_u(7UL, ((safe_rshift_func_uint16_t_u_s(((func_56(p_1298->g_35.s1, (safe_mul_func_uint8_t_u_u(l_61, p_1298->g_35.s7)), p_1298) , p_1298->g_522) , ((safe_add_func_int16_t_s_s(((*l_538) = (safe_rshift_func_uint8_t_u_s((GROUP_DIVERGE(0, 1) != (p_40 | ((l_61 = (safe_mul_func_int16_t_s_s((((VECTOR(uint64_t, 8))(((VECTOR(uint64_t, 8))(hadd(((VECTOR(uint64_t, 16))(l_531.sf2b6883a3a3e4cc6)).odd, ((VECTOR(uint64_t, 2))(((VECTOR(uint64_t, 16))(rotate(((VECTOR(uint64_t, 8))(((VECTOR(uint64_t, 16))(hadd(((VECTOR(uint64_t, 4))(abs(((VECTOR(int64_t, 4))(l_532.yxxz))))).zzyywxxxywzxwyzx, ((VECTOR(uint64_t, 8))(abs_diff(((VECTOR(uint64_t, 2))(0xFF3F0B9298756046L, 18446744073709551607UL)).xyxxyyxx, ((VECTOR(uint64_t, 4))(safe_clamp_func(VECTOR(uint64_t, 4),VECTOR(uint64_t, 4),((VECTOR(uint64_t, 8))(((VECTOR(uint64_t, 8))(((VECTOR(uint64_t, 4))(add_sat(((VECTOR(uint64_t, 2))(p_1298->g_533.xx)).xxxy, ((VECTOR(uint64_t, 4))(upsample(((VECTOR(uint32_t, 8))(rhadd(((VECTOR(uint32_t, 4))(((VECTOR(uint32_t, 2))(4294967294UL, 0x6777AE71L)), 0x0768B6D5L, 0x1BFCEE10L)).yxwwzxyz, ((VECTOR(uint32_t, 4))(upsample(((VECTOR(uint16_t, 4))(l_534.xyyx)), ((VECTOR(uint16_t, 16))(((VECTOR(uint16_t, 8))(((VECTOR(uint16_t, 4))((****p_1298->g_272), (safe_div_func_int32_t_s_s((((VECTOR(uint8_t, 4))(l_537.zxxx)).w == p_38), 0x9BEBB497L)), 0x0F6DL, 0x6167L)), ((VECTOR(uint16_t, 2))(65535UL)), 0x69D1L, 1UL)).s7720636704764306)).s1391))).yxwxxzwy))).hi, ((VECTOR(uint32_t, 4))(0xEEC8018CL)))))))), 18446744073709551606UL, ((VECTOR(uint64_t, 2))(1UL)), 0x580DA412B1EE2C9EL)))).lo, ((VECTOR(uint64_t, 4))(18446744073709551615UL)), ((VECTOR(uint64_t, 4))(18446744073709551607UL))))).yxyxwxyy))).s3366646542022551))).hi)).s5160355162627352, ((VECTOR(uint64_t, 16))(1UL))))).s57)).xyxxxyyx))))).s5 > p_1298->g_141.f4), 0x09EFL))) <= p_37))), p_39))), p_38)) || p_40)), 5)) >= p_1298->g_266.s3))))), p_1298->g_104.y, l_531.s4, p_39, p_1298) || 0xD8AEEC72L));
    for (p_1298->g_185 = 9; (p_1298->g_185 == (-8)); p_1298->g_185 = safe_sub_func_int16_t_s_s(p_1298->g_185, 9))
    { /* block id: 247 */
        VECTOR(int8_t, 16) l_597 = (VECTOR(int8_t, 16))(0x5FL, (VECTOR(int8_t, 4))(0x5FL, (VECTOR(int8_t, 2))(0x5FL, 0x3BL), 0x3BL), 0x3BL, 0x5FL, 0x3BL, (VECTOR(int8_t, 2))(0x5FL, 0x3BL), (VECTOR(int8_t, 2))(0x5FL, 0x3BL), 0x5FL, 0x3BL, 0x5FL, 0x3BL);
        uint8_t *l_603 = &p_1298->g_141.f0;
        int32_t l_604 = 2L;
        int32_t *l_606[5][4][8] = {{{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186}},{{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186}},{{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186}},{{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186}},{{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186},{(void*)0,&p_1298->g_135,(void*)0,(void*)0,&p_1298->g_186,&l_604,&l_604,&p_1298->g_186}}};
        int32_t *l_611 = &p_1298->g_135;
        int i, j, k;
        if (((((VECTOR(int8_t, 8))(l_597.sa3e0155b)).s1 < ((!(l_597.sc , (l_604 ^= ((l_538 != l_538) || (((*l_603) &= (safe_rshift_func_int8_t_s_u(((VECTOR(int8_t, 16))(safe_clamp_func(VECTOR(int8_t, 16),int8_t,((VECTOR(int8_t, 4))(((VECTOR(int8_t, 2))(p_1298->g_600.s50)), 0x58L, 0x61L)).xzyxxywwwyyzzwyz, (int8_t)(((0x89L < ((p_37 <= ((VECTOR(int32_t, 4))(p_1298->g_601.sb362)).z) <= (p_1298->g_602[5][2] , ((((*l_594) > ((*l_594) == (GROUP_DIVERGE(1, 1) & ((*l_538) ^= 6L)))) == 255UL) , p_40)))) > l_597.s9) && l_597.s5), (int8_t)(*l_594)))).sf, p_1298->g_168.x))) || 0xDAL))))) ^ p_39)) > p_1298->g_381.s4))
        { /* block id: 251 */
            int32_t **l_605 = &p_1298->g_69;
            l_606[3][0][2] = (p_39 , ((*l_605) = (*p_1298->g_253)));
        }
        else
        { /* block id: 254 */
            int16_t l_612[3][3][9] = {{{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)}},{{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)}},{{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)},{(-4L),(-9L),(-9L),(-4L),(-4L),(-9L),(-9L),(-4L),(-4L)}}};
            int32_t l_613 = 0x2317FEDAL;
            VECTOR(int32_t, 2) l_615 = (VECTOR(int32_t, 2))(7L, 0x623E444DL);
            uint32_t l_616 = 0UL;
            int i, j, k;
            for (l_604 = 0; (l_604 == (-20)); --l_604)
            { /* block id: 257 */
                int32_t *l_610[3];
                int i;
                for (i = 0; i < 3; i++)
                    l_610[i] = (void*)0;
                l_611 = (p_1298->g_609 , l_610[2]);
            }
            --l_616;
        }
        return p_37;
    }
    if (((*l_594) = ((safe_mul_func_uint16_t_u_u(((GROUP_DIVERGE(1, 1) , (safe_sub_func_int16_t_s_s((safe_add_func_uint32_t_u_u((((((safe_sub_func_int32_t_s_s((safe_mul_func_int8_t_s_s((safe_mul_func_int8_t_s_s(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 16))(l_631.xyxxxxyyxyyyxxxy)).s4c9c)).y, (p_1298->g_646 ^= ((safe_div_func_int16_t_s_s((((~p_1298->g_45.s4) >= (safe_rshift_func_int16_t_s_s(p_1298->g_609.f1, 4))) < (((~p_40) || (p_1298->g_168.x = (GROUP_DIVERGE(2, 1) , ((((VECTOR(uint64_t, 4))(l_638.xyxx)).z ^ ((*l_643) = (safe_rshift_func_int8_t_s_s(((l_641 != &l_642) < FAKE_DIVERGE(p_1298->global_1_offset, get_global_id(1), 10)), 5)))) & ((GROUP_DIVERGE(2, 1) == (*l_594)) >= (****p_1298->g_272)))))) <= (*p_1298->g_132))), (((safe_sub_func_int32_t_s_s(((*p_1298->g_461) != (void*)0), (*l_594))) >= 253UL) , p_1298->g_496.y))) | 4L)))), 0x32L)), 4294967295UL)) , (*l_641)) != (*l_641)) >= 0x6F12L) , 4294967292UL), 0x56872B86L)), (**p_1298->g_131)))) == p_1298->g_141.f2), GROUP_DIVERGE(1, 1))) , p_40)))
    { /* block id: 268 */
        struct S0 l_658 = {0x40L,0xF54C932AL,0x695FFC1DL,0x9B5C7CFCL,0x7ACE511AL};
        (*l_594) = ((VECTOR(int32_t, 2))(p_1298->g_647.ww)).even;
        for (p_1298->g_609.f2 = 6; (p_1298->g_609.f2 < (-17)); p_1298->g_609.f2--)
        { /* block id: 272 */
            int32_t **l_652 = &p_1298->g_69;
            for (p_1298->g_302.f2 = 8; (p_1298->g_302.f2 == 0); p_1298->g_302.f2 = safe_sub_func_uint32_t_u_u(p_1298->g_302.f2, 4))
            { /* block id: 275 */
                if (p_40)
                    break;
            }
            (*l_652) = &l_61;
            (*p_1298->g_130) = l_653;
            if (p_38)
                continue;
        }
        for (l_61 = 0; (l_61 == (-5)); l_61 = safe_sub_func_int64_t_s_s(l_61, 4))
        { /* block id: 284 */
            int32_t l_657 = 0L;
            uint32_t *l_668 = &l_658.f1;
            int64_t *l_673 = &p_1298->g_609.f1;
            (*l_594) ^= (l_656 != l_657);
            p_1298->g_601.sd |= (((((l_658 , (p_1298->g_354.y && (safe_mod_func_uint32_t_u_u((safe_add_func_uint8_t_u_u((safe_div_func_int64_t_s_s((~(((VECTOR(int64_t, 4))(3L, (!((*l_673) ^= ((VECTOR(int64_t, 4))(((VECTOR(int64_t, 2))(((VECTOR(int64_t, 16))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 8))(p_1298->g_45.s7, (18446744073709551611UL <= ((VECTOR(int64_t, 4))(((VECTOR(int64_t, 2))(((VECTOR(int64_t, 8))((-2L), (safe_rshift_func_uint8_t_u_u(((*p_1298->g_132) || ((p_1298->g_667 , ((*l_668) = p_38)) == (safe_rshift_func_int8_t_s_u(p_39, 5)))), 6)), 0L, 0x3969E91AEF588A8FL, ((VECTOR(int64_t, 4))(mul_hi(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 2))(l_671.yw)).yyxx)), ((VECTOR(int64_t, 4))(l_672.yyyy))))))).s51)), 0L, 0x6A16B913DE539E43L)).z), 0L, 0x59052BB73B94988CL, (p_1298->g_459.f1 , (-7L)), l_657, 0x13373810E19B23A8L, (-7L))).lo)).xyyxxwxwzyxzzyyx)).se6)).xxxx)).y)), (-8L), 0L)).w == (*l_594))), l_657)), 7L)), p_1298->g_302.f2)))) | FAKE_DIVERGE(p_1298->global_1_offset, get_global_id(1), 10)) , p_40) || l_657) <= p_38);
        }
        (*l_594) &= (safe_rshift_func_int8_t_s_s(l_658.f3, 0));
    }
    else
    { /* block id: 291 */
        union U3 *l_676 = &p_1298->g_31;
        union U3 **l_679 = &l_676;
        int32_t l_684 = (-1L);
        int32_t l_687 = 0x3FE13B6BL;
        int32_t l_688 = 0x7FA41D2AL;
        int32_t l_689 = 0L;
        uint8_t l_690 = 0x7CL;
        uint16_t ****l_715 = &p_1298->g_130;
        int32_t l_721 = 0x7DDF8C37L;
        int32_t *l_778 = &l_61;
        int32_t *l_779 = &l_61;
        int32_t *l_780 = (void*)0;
        int32_t *l_781 = &l_684;
        int32_t *l_782 = &p_1298->g_186;
        int32_t *l_783 = &l_688;
        int32_t *l_784 = &p_1298->g_135;
        int32_t *l_785 = &l_689;
        int32_t *l_786[2];
        int i;
        for (i = 0; i < 2; i++)
            l_786[i] = (void*)0;
        (*l_679) = l_676;
        for (p_1298->g_302.f1 = 0; (p_1298->g_302.f1 != 29); p_1298->g_302.f1++)
        { /* block id: 295 */
            volatile struct S1 *l_683 = &p_1298->g_468;
            int32_t *l_685 = &l_61;
            int32_t *l_686[3];
            VECTOR(uint64_t, 8) l_705 = (VECTOR(uint64_t, 8))(0x8E55664CD09F2DB9L, (VECTOR(uint64_t, 4))(0x8E55664CD09F2DB9L, (VECTOR(uint64_t, 2))(0x8E55664CD09F2DB9L, 0UL), 0UL), 0UL, 0x8E55664CD09F2DB9L, 0UL);
            VECTOR(int32_t, 2) l_711 = (VECTOR(int32_t, 2))(0L, 0x7C568DBFL);
            VECTOR(uint32_t, 16) l_714 = (VECTOR(uint32_t, 16))(4294967286UL, (VECTOR(uint32_t, 4))(4294967286UL, (VECTOR(uint32_t, 2))(4294967286UL, 0x21AE3164L), 0x21AE3164L), 0x21AE3164L, 4294967286UL, 0x21AE3164L, (VECTOR(uint32_t, 2))(4294967286UL, 0x21AE3164L), (VECTOR(uint32_t, 2))(4294967286UL, 0x21AE3164L), 4294967286UL, 0x21AE3164L, 4294967286UL, 0x21AE3164L);
            int i;
            for (i = 0; i < 3; i++)
                l_686[i] = &l_684;
            (*l_683) = p_1298->g_682;
            l_690++;
            for (p_1298->g_667.f3 = (-5); (p_1298->g_667.f3 == 44); p_1298->g_667.f3 = safe_add_func_uint64_t_u_u(p_1298->g_667.f3, 1))
            { /* block id: 300 */
                uint16_t *****l_716 = &l_715;
                int32_t l_720[2][9][8] = {{{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L}},{{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L},{0x76C99171L,(-8L),0x2D982124L,0L,0x03E52F1AL,0x54A68393L,0x76C99171L,0x4E723E90L}}};
                int32_t *l_722 = &p_1298->g_723;
                int i, j, k;
                (*l_594) = (safe_sub_func_int32_t_s_s((safe_mod_func_uint16_t_u_u((((safe_rshift_func_int8_t_s_u((safe_lshift_func_uint8_t_u_u(((GROUP_DIVERGE(2, 1) && 0x09BD8B5F4691C9F1L) , ((VECTOR(uint8_t, 16))(5UL, ((safe_add_func_uint64_t_u_u((p_1298->g_490 = ((VECTOR(uint64_t, 16))(l_705.s1401622522636413)).s4), (l_688 | (-1L)))) || p_40), ((((FAKE_DIVERGE(p_1298->global_0_offset, get_global_id(0), 10) == (safe_mul_func_int8_t_s_s((((VECTOR(int64_t, 2))(p_1298->g_708.yy)).odd & (safe_div_func_uint64_t_u_u((((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(l_711.xx)), 0L, 0x5918CC20L)).z ^ (safe_rshift_func_uint8_t_u_s((((VECTOR(uint32_t, 2))(l_714.s70)).lo , (&p_1298->g_130 == ((*l_716) = l_715))), 7))), ((((*l_722) = ((VECTOR(int32_t, 2))(safe_clamp_func(VECTOR(int32_t, 2),VECTOR(int32_t, 2),((VECTOR(int32_t, 16))(mul_hi(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 2))(0x7F1403D1L, 0L)).xxyxyxyxyyyxxyyx)), ((VECTOR(int32_t, 4))(((VECTOR(int32_t, 4))(p_1298->g_717.s8193)))).xxzxwzzwwzyyyywz))).s0a, ((VECTOR(int32_t, 16))((-1L), 0x1E6303B8L, ((l_689 | (safe_mul_func_uint16_t_u_u((****p_1298->g_272), 0x955EL))) == p_1298->g_566[0][0][1]), ((VECTOR(int32_t, 8))(0L)), l_720[1][4][4], p_40, l_721, 0L, (-3L))).s96, ((VECTOR(int32_t, 2))(0x783F6C40L))))).lo) , 0L) | p_1298->g_667.f3)))), p_38))) >= GROUP_DIVERGE(1, 1)) && p_40) | (*l_594)), 0x22L, p_1298->g_16, 255UL, 255UL, ((VECTOR(uint8_t, 8))(0xEBL)), 0x26L)).se), p_1298->g_717.s9)), 0)) , p_40) && (*l_594)), l_687)), l_720[1][4][4]));
            }
        }
        if (((VECTOR(int32_t, 2))(0x2F76B134L, 0x35660C1EL)).hi)
        { /* block id: 307 */
            int16_t l_729 = 0x1374L;
            int32_t l_740[6][8][1] = {{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}}};
            int8_t l_743[6] = {1L,1L,1L,1L,1L,1L};
            int i, j, k;
            (*l_594) = ((*l_594) == ((*l_538) = (((VECTOR(uint16_t, 16))(hadd(((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 8))(hadd(((VECTOR(uint16_t, 2))(p_1298->g_726.s01)).yxyxyyyy, ((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 16))(abs(((VECTOR(int16_t, 16))(((VECTOR(int16_t, 2))(((VECTOR(int16_t, 4))(upsample(((VECTOR(int8_t, 8))(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 8))(0L, ((safe_add_func_int8_t_s_s(((*l_676) , (l_721 = l_729)), p_37)) && p_38), (-2L), 0x24L, 0x46L, ((safe_div_func_int32_t_s_s(p_40, ((safe_div_func_uint8_t_u_u((safe_lshift_func_int16_t_s_s((safe_mod_func_int16_t_s_s((GROUP_DIVERGE(2, 1) != (!(l_740[0][2][0] , 1L))), ((****l_715) = (safe_rshift_func_uint16_t_u_s(l_690, l_729))))), p_38)), l_743[5])) && (*l_594)))) != l_740[0][2][0]), (-4L), (-1L))).even)).yzwyywwz)).hi, ((VECTOR(uint8_t, 4))(0xE3L))))).hi)).hi, 0x7131L, (-4L), 0L, ((VECTOR(int16_t, 8))(0x5613L)), (-1L), p_1298->g_682.f1, 1L, 0L))))).sd8d4)).wwyyxwyy))).s63)).xxxy)).zxxwzyzxzyxywwyz, ((VECTOR(uint16_t, 16))(65535UL))))).sd == p_37)));
            for (p_1298->g_185 = 11; (p_1298->g_185 != 2); --p_1298->g_185)
            { /* block id: 314 */
                struct S0 l_750 = {249UL,0x67913D63L,8L,6UL,0x917D9A58L};
                struct S0 *l_751 = &l_750;
                VECTOR(uint16_t, 8) l_756 = (VECTOR(uint16_t, 8))(1UL, (VECTOR(uint16_t, 4))(1UL, (VECTOR(uint16_t, 2))(1UL, 0x03ADL), 0x03ADL), 0x03ADL, 1UL, 0x03ADL);
                int64_t *l_765 = (void*)0;
                int64_t *l_766 = (void*)0;
                int64_t *l_767 = &p_1298->g_758.f1;
                int32_t *l_770 = &l_614[0][1];
                int i;
                (*l_770) = ((!(safe_sub_func_uint64_t_u_u(((safe_add_func_uint32_t_u_u(((((*l_751) = l_750) , ((safe_rshift_func_uint16_t_u_u((++(*p_1298->g_132)), 3)) != (((VECTOR(uint16_t, 2))(l_756.s43)).hi || (((*l_594) = (p_1298->g_757 , ((p_1298->g_758 , ((safe_div_func_int32_t_s_s((((VECTOR(int16_t, 4))(((VECTOR(int16_t, 8))((safe_mul_func_uint16_t_u_u(p_37, ((safe_mul_func_uint8_t_u_u((p_1298->g_104.y | ((*l_767) = (p_40 || (-1L)))), (-7L))) != (safe_add_func_int32_t_s_s(p_38, (*l_594)))))), ((VECTOR(int16_t, 2))(1L)), 1L, ((VECTOR(int16_t, 2))((-5L))), 0L, 0x05B1L)).lo)).w > 0x3AF6L), p_37)) , l_743[1])) , (-3L)))) & 0xFE33170BL)))) , p_1298->g_647.y), p_37)) <= l_743[5]), 0x2F2492418D07DC4FL))) || p_37);
                (*p_1298->g_773) = (*p_1298->g_317);
                if (p_37)
                    continue;
                if ((*p_1298->g_241))
                    break;
            }
        }
        else
        { /* block id: 324 */
            int16_t ***l_775 = &p_1298->g_774;
            p_1298->g_776 = ((*l_775) = (p_1298->g_602[5][2] , p_1298->g_774));
        }
        --l_788;
    }
    return p_39;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_272 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_100 p_1298->g_543 p_1298->g_223 p_1298->g_81 p_1298->g_566 p_1298->g_533 p_1298->g_514 p_1298->g_135 p_1298->g_575 p_1298->g_577 p_1298->g_522.f0 p_1298->l_comm_values p_1298->g_496 p_1298->g_220 p_1298->g_381 p_1298->g_302.f2 p_1298->g_141.f2 p_1298->g_268.f0
 * writes: p_1298->g_100 p_1298->g_223 p_1298->g_135 p_1298->g_381 p_1298->g_302.f2 p_1298->g_141.f2
 */
uint32_t  func_46(int32_t  p_47, int64_t  p_48, int64_t  p_49, int64_t  p_50, struct S4 * p_1298)
{ /* block id: 219 */
    int32_t *l_546 = (void*)0;
    int32_t **l_545 = &l_546;
    uint16_t *l_551[5][9][5] = {{{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0}},{{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0}},{{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0}},{{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0}},{{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0},{&p_1298->g_478,(void*)0,(void*)0,&p_1298->g_478,(void*)0}}};
    VECTOR(int32_t, 8) l_552 = (VECTOR(int32_t, 8))((-1L), (VECTOR(int32_t, 4))((-1L), (VECTOR(int32_t, 2))((-1L), 0x712FA962L), 0x712FA962L), 0x712FA962L, (-1L), 0x712FA962L);
    int32_t l_553 = 0x08D4A1B4L;
    int32_t l_558 = (-6L);
    VECTOR(int16_t, 2) l_561 = (VECTOR(int16_t, 2))(0x06ECL, 0x125DL);
    VECTOR(int16_t, 2) l_562 = (VECTOR(int16_t, 2))(0x48CEL, 0x0540L);
    int16_t l_565 = (-1L);
    int32_t *l_567 = &p_1298->g_135;
    VECTOR(uint16_t, 2) l_574 = (VECTOR(uint16_t, 2))(1UL, 0x05D0L);
    VECTOR(uint16_t, 8) l_576 = (VECTOR(uint16_t, 8))(0UL, (VECTOR(uint16_t, 4))(0UL, (VECTOR(uint16_t, 2))(0UL, 6UL), 6UL), 6UL, 0UL, 6UL);
    VECTOR(int64_t, 2) l_585 = (VECTOR(int64_t, 2))(0L, 0L);
    uint32_t l_586 = 4294967295UL;
    int8_t l_587 = 0x18L;
    int i, j, k;
    (*l_567) ^= ((****p_1298->g_272) , (FAKE_DIVERGE(p_1298->group_0_offset, get_group_id(0), 10) < (safe_lshift_func_int8_t_s_s(((((safe_add_func_int32_t_s_s((p_1298->g_223.y |= ((((**p_1298->g_131) &= (p_1298->g_543 != l_545)) < 5UL) , p_47)), p_49)) <= (safe_mul_func_uint16_t_u_u((((((safe_lshift_func_uint8_t_u_u(((((l_553 = (l_552.s3 = FAKE_DIVERGE(p_1298->group_1_offset, get_group_id(1), 10))) | (safe_mod_func_int8_t_s_s((safe_lshift_func_uint16_t_u_u(l_558, 11)), (safe_add_func_int16_t_s_s(((VECTOR(int16_t, 8))(rotate(((VECTOR(int16_t, 2))(((VECTOR(int16_t, 8))(l_561.yxxyyxxx)).s13)).xxxyxyxx, ((VECTOR(int16_t, 2))(l_562.xy)).xxxxxyxx))).s3, ((((safe_lshift_func_int8_t_s_u((l_565 != p_50), p_1298->g_81)) && 1L) < l_561.x) , 65535UL)))))) <= p_47) >= l_562.y), p_50)) < p_1298->g_566[2][0][0]) >= p_50) >= FAKE_DIVERGE(p_1298->group_2_offset, get_group_id(2), 10)) <= 0x3764777E1D9C467FL), l_565))) || p_1298->g_533.y) | p_1298->g_514.s3), 5))));
    p_1298->g_381.s7 |= ((safe_div_func_int32_t_s_s((0x3136L <= (((safe_lshift_func_int8_t_s_u(p_49, p_50)) & (safe_div_func_uint16_t_u_u(((VECTOR(uint16_t, 4))(abs_diff(((VECTOR(uint16_t, 8))(((VECTOR(uint16_t, 16))(l_574.xxyyxxyyyxyxxxxy)).lo)).hi, ((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(hadd(((VECTOR(uint16_t, 4))(p_1298->g_575.xwyx)).odd, ((VECTOR(uint16_t, 2))(add_sat(((VECTOR(uint16_t, 4))(max(((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 16))(rotate(((VECTOR(uint16_t, 2))(l_576.s57)).xyyxyxxxyxxyxxxx, ((VECTOR(uint16_t, 16))(p_1298->g_577.s1e21f4f5f8198a0c))))).s52)).yxxy)), (uint16_t)((safe_unary_minus_func_uint16_t_u(((**p_1298->g_131) = ((p_1298->g_522.f0 <= (((VECTOR(int64_t, 8))(0x38DAAFE18497620EL, 0x167934836B9889BBL, 0x604D9EE8143DC411L, 3L, 0x315F39CA0C61FE2EL, ((safe_lshift_func_int8_t_s_u(p_50, 7)) , p_1298->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))]), (-1L), 0x2E0A784BBA45BBFBL)).s1 <= (((safe_mod_func_int64_t_s_s(((p_1298->g_496.z , ((~((*l_567) = ((VECTOR(uint64_t, 2))(abs_diff(((VECTOR(int64_t, 2))(((VECTOR(int64_t, 2))(l_585.xy)))), ((VECTOR(int64_t, 8))(rotate(((VECTOR(int64_t, 4))(4L, ((VECTOR(int64_t, 2))(0x351CAC005A633C27L)), (-1L))).xxwwwzxz, ((VECTOR(int64_t, 8))(9L))))).s61))).even)) == 0xDF9C98A0F6A30A66L)) || p_47), 0xA6D779C694B254AEL)) > (-5L)) && 0L))) , (**p_1298->g_131))))) < l_586)))).even, ((VECTOR(uint16_t, 2))(65535UL)))))))).yyyx))))).z, p_1298->g_220.s0))) > FAKE_DIVERGE(p_1298->global_2_offset, get_global_id(2), 10))), 0x5730D325L)) < l_587);
    for (l_565 = (-27); (l_565 != (-25)); ++l_565)
    { /* block id: 230 */
        if ((*l_567))
            break;
    }
    for (p_1298->g_302.f2 = 0; (p_1298->g_302.f2 < (-14)); p_1298->g_302.f2--)
    { /* block id: 235 */
        for (p_1298->g_141.f2 = 0; (p_1298->g_141.f2 == (-23)); --p_1298->g_141.f2)
        { /* block id: 238 */
            return p_1298->g_268.f0;
        }
        if ((*l_567))
            break;
    }
    return p_50;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_16 p_1298->g_68 p_1298->g_69 p_1298->l_comm_values p_1298->g_81 p_1298->g_100 p_1298->g_45 p_1298->g_122 p_1298->g_comm_values p_1298->g_104 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_141 p_1298->g_35 p_1298->g_153 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_206 p_1298->g_223 p_1298->g_241 p_1298->g_253 p_1298->g_266 p_1298->g_268 permutations p_1298->g_317 p_1298->g_302 p_1298->g_272 p_1298->g_352 p_1298->g_207 p_1298->g_459 p_1298->g_461 p_1298->g_465 p_1298->g_468 p_1298->g_478 p_1298->g_485 p_1298->g_281 p_1298->g_490 p_1298->g_462 p_1298->g_496 p_1298->g_502 p_1298->g_514 p_1298->g_520 p_1298->g_382
 * writes: p_1298->g_16 p_1298->g_69 p_1298->g_81 p_1298->g_100 p_1298->g_122 p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_186 p_1298->g_141.f0 p_1298->g_220 p_1298->g_132 p_1298->g_272 p_1298->g_141.f2 p_1298->g_281 p_1298->g_302 p_1298->g_459 p_1298->g_462 p_1298->g_141.f3 p_1298->g_490 p_1298->g_comm_values p_1298->g_496 p_1298->g_521
 */
int32_t  func_56(int32_t  p_57, uint16_t  p_58, struct S4 * p_1298)
{ /* block id: 8 */
    uint32_t l_66[4][6] = {{0x51CA2AE3L,0x51CA2AE3L,4294967295UL,1UL,0UL,1UL},{0x51CA2AE3L,0x51CA2AE3L,4294967295UL,1UL,0UL,1UL},{0x51CA2AE3L,0x51CA2AE3L,4294967295UL,1UL,0UL,1UL},{0x51CA2AE3L,0x51CA2AE3L,4294967295UL,1UL,0UL,1UL}};
    int32_t *l_120[1];
    uint16_t ****l_271 = &p_1298->g_130;
    struct S1 *l_306 = &p_1298->g_302;
    uint16_t l_316 = 3UL;
    uint16_t l_349 = 0x783FL;
    uint32_t l_370 = 0UL;
    int32_t l_472 = 0x4AE90651L;
    struct S0 l_476 = {255UL,0x5C6BA5BBL,-1L,4294967295UL,4294967294UL};
    int64_t *l_501[8];
    int8_t l_503[3][6] = {{0x27L,0x2CL,(-1L),0x21L,0x2CL,0x21L},{0x27L,0x2CL,(-1L),0x21L,0x2CL,0x21L},{0x27L,0x2CL,(-1L),0x21L,0x2CL,0x21L}};
    VECTOR(int64_t, 16) l_510 = (VECTOR(int64_t, 16))((-7L), (VECTOR(int64_t, 4))((-7L), (VECTOR(int64_t, 2))((-7L), (-10L)), (-10L)), (-10L), (-7L), (-10L), (VECTOR(int64_t, 2))((-7L), (-10L)), (VECTOR(int64_t, 2))((-7L), (-10L)), (-7L), (-10L), (-7L), (-10L));
    VECTOR(int64_t, 2) l_513 = (VECTOR(int64_t, 2))(0x466897A3F542FB14L, (-1L));
    VECTOR(int64_t, 16) l_515 = (VECTOR(int64_t, 16))(1L, (VECTOR(int64_t, 4))(1L, (VECTOR(int64_t, 2))(1L, 9L), 9L), 9L, 1L, 9L, (VECTOR(int64_t, 2))(1L, 9L), (VECTOR(int64_t, 2))(1L, 9L), 1L, 9L, 1L, 9L);
    int32_t l_518 = 0L;
    union U3 *l_519 = &p_1298->g_31;
    int i, j;
    for (i = 0; i < 1; i++)
        l_120[i] = (void*)0;
    for (i = 0; i < 8; i++)
        l_501[i] = (void*)0;
    for (p_57 = 0; (p_57 == (-5)); p_57 = safe_sub_func_int8_t_s_s(p_57, 2))
    { /* block id: 11 */
        struct S0 l_84 = {0x79L,0x2962DE1BL,-3L,5UL,1UL};
        int32_t l_111[5][9] = {{0x408A2B65L,3L,0x7A171313L,2L,3L,2L,0x7A171313L,3L,0x408A2B65L},{0x408A2B65L,3L,0x7A171313L,2L,3L,2L,0x7A171313L,3L,0x408A2B65L},{0x408A2B65L,3L,0x7A171313L,2L,3L,2L,0x7A171313L,3L,0x408A2B65L},{0x408A2B65L,3L,0x7A171313L,2L,3L,2L,0x7A171313L,3L,0x408A2B65L},{0x408A2B65L,3L,0x7A171313L,2L,3L,2L,0x7A171313L,3L,0x408A2B65L}};
        uint8_t *l_256 = &p_1298->g_81;
        int32_t *l_267 = &p_1298->g_122;
        struct S1 *l_307 = &p_1298->g_302;
        int16_t *l_358 = &p_1298->g_302.f4;
        int32_t l_371[7][6][3] = {{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}},{{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL},{(-9L),0x6DF9DA8DL,0x6DF9DA8DL}}};
        uint16_t **l_396 = &p_1298->g_132;
        VECTOR(int32_t, 4) l_443 = (VECTOR(int32_t, 4))(0x75226A5BL, (VECTOR(int32_t, 2))(0x75226A5BL, 0x62EB77B8L), 0x62EB77B8L);
        int8_t *l_455 = (void*)0;
        int8_t **l_454[9][10] = {{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0},{&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0,(void*)0,&l_455,&l_455,(void*)0}};
        int32_t **l_458[8];
        VECTOR(int64_t, 16) l_477 = (VECTOR(int64_t, 16))(7L, (VECTOR(int64_t, 4))(7L, (VECTOR(int64_t, 2))(7L, 0L), 0L), 0L, 7L, 0L, (VECTOR(int64_t, 2))(7L, 0L), (VECTOR(int64_t, 2))(7L, 0L), 7L, 0L, 7L, 0L);
        int i, j, k;
        for (i = 0; i < 8; i++)
            l_458[i] = (void*)0;
        for (p_1298->g_16 = (-16); (p_1298->g_16 < 37); p_1298->g_16 = safe_add_func_uint64_t_u_u(p_1298->g_16, 5))
        { /* block id: 14 */
            int32_t *l_67 = (void*)0;
            uint8_t *l_79 = (void*)0;
            uint8_t *l_80 = &p_1298->g_81;
            uint16_t *l_99 = &p_1298->g_100;
            uint16_t *l_103 = (void*)0;
            uint16_t *l_105 = (void*)0;
            uint16_t *l_106 = (void*)0;
            uint16_t *l_107 = (void*)0;
            uint16_t *l_108 = (void*)0;
            uint16_t *l_109 = (void*)0;
            uint16_t *l_110[10] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
            uint64_t *l_117 = (void*)0;
            int32_t *l_121 = &p_1298->g_122;
            int i;
            if (l_66[1][1])
                break;
            (*p_1298->g_68) = l_67;
            (*p_1298->g_253) = func_70((*p_1298->g_68), func_75(p_1298->l_comm_values[(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))], (((*l_80)++) , l_84), (safe_rshift_func_int8_t_s_s((safe_add_func_uint8_t_u_u((safe_rshift_func_uint16_t_u_u(l_66[1][1], 15)), ((safe_add_func_uint32_t_u_u((safe_mul_func_int8_t_s_s(((+(safe_mod_func_int64_t_s_s(((((safe_add_func_uint8_t_u_u((l_84.f4 , ((((l_111[4][1] ^= (p_58 ^= (++(*l_99)))) , 0x01L) , ((*l_121) ^= ((l_111[4][6] = ((safe_mod_func_int16_t_s_s(((VECTOR(int16_t, 4))(((VECTOR(int16_t, 2))(0x567EL, 0x7603L)), 1L, 0x6DA2L)).y, (safe_unary_minus_func_int8_t_s((safe_lshift_func_uint8_t_u_u(p_58, 0)))))) & FAKE_DIVERGE(p_1298->global_0_offset, get_global_id(0), 10))) | ((((*l_99) = FAKE_DIVERGE(p_1298->group_0_offset, get_group_id(0), 10)) >= ((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 4))(mad_sat(((VECTOR(uint16_t, 16))((safe_mod_func_int64_t_s_s(((void*)0 != l_120[0]), p_1298->g_45.s5)), ((VECTOR(uint16_t, 4))(65531UL)), 0x3454L, p_58, 0UL, 65532UL, ((VECTOR(uint16_t, 2))(0xB061L)), ((VECTOR(uint16_t, 4))(0UL)), 0UL)).s442f, ((VECTOR(uint16_t, 4))(0x41AFL)), ((VECTOR(uint16_t, 4))(0x8FA3L))))).even)).lo) >= 254UL)))) , l_84.f0)), p_57)) | p_57) < p_1298->g_45.s2) , p_1298->g_16), p_57))) == p_1298->g_comm_values[p_1298->tid]), p_57)), p_1298->g_104.x)) > FAKE_DIVERGE(p_1298->global_1_offset, get_global_id(1), 10)))), 6)), p_1298), p_1298->g_153.z, l_84.f1, p_1298);
        }
        if (((safe_sub_func_uint8_t_u_u((--(*l_256)), (((void*)0 != p_1298->g_132) , p_57))) <= (p_1298->g_141.f4 != 0x13L)))
        { /* block id: 81 */
            int8_t l_265 = (-5L);
            int32_t **l_291 = &l_267;
            struct S1 *l_301 = &p_1298->g_302;
            VECTOR(int32_t, 2) l_305 = (VECTOR(int32_t, 2))(2L, 1L);
            int32_t *l_348[1][3][3] = {{{(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0}}};
            int16_t *l_357 = &p_1298->g_302.f4;
            uint16_t ***l_363 = (void*)0;
            uint64_t l_433 = 0xA96E8D508321D056L;
            int i, j, k;
            if ((safe_lshift_func_int8_t_s_s(((p_1298->g_272 = ((safe_add_func_int8_t_s_s((safe_lshift_func_uint8_t_u_s((l_265 && ((VECTOR(int8_t, 2))(p_1298->g_266.s03)).hi), (l_267 != (p_1298->g_268 , func_70(&l_111[4][1], p_58, ((((safe_lshift_func_uint16_t_u_s((&p_58 != ((*p_1298->g_131) = (*p_1298->g_131))), p_57)) <= p_58) | p_1298->g_16) , p_58), p_57, p_1298))))), p_58)) , l_271)) != l_271), 7)))
            { /* block id: 84 */
                int32_t *l_282 = &p_1298->g_122;
                int32_t l_288 = 0L;
                int32_t l_292 = 0L;
                for (p_1298->g_141.f2 = 0; (p_1298->g_141.f2 != 16); p_1298->g_141.f2++)
                { /* block id: 87 */
                    int32_t *l_275 = &p_1298->g_135;
                    uint64_t *l_280 = &p_1298->g_281;
                    int32_t **l_283 = &l_267;
                    int32_t **l_284 = &l_282;
                    int64_t *l_285 = (void*)0;
                    int64_t *l_286 = (void*)0;
                    int64_t *l_287[9][5];
                    int32_t ***l_289 = (void*)0;
                    int32_t ***l_290 = &l_284;
                    int32_t **l_293 = (void*)0;
                    int i, j;
                    for (i = 0; i < 9; i++)
                    {
                        for (j = 0; j < 5; j++)
                            l_287[i][j] = (void*)0;
                    }
                    l_275 = func_70(l_275, ((safe_lshift_func_uint16_t_u_u((safe_sub_func_uint64_t_u_u(((*l_280) = p_57), ((&p_1298->g_185 == ((*l_284) = ((*l_283) = l_282))) || (GROUP_DIVERGE(0, 1) < ((*l_256) |= (p_1298->g_104.y , ((((*l_275) = p_57) >= 0x284A5F7E6AA0FA19L) < (l_288 ^= 0x67F09A42ADB1AD04L)))))))), 12)) , (l_288 = (((*l_290) = l_283) == l_291))), l_84.f2, l_292, p_1298);
                }
            }
            else
            { /* block id: 98 */
                int32_t l_318 = 0x26E1BA1BL;
                int32_t l_320[5][8] = {{0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL},{0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL},{0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL},{0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL},{0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL,0x5AADB8AAL}};
                int32_t l_322 = 0x67C0EF8DL;
                int32_t l_323 = 1L;
                int32_t l_327 = (-1L);
                VECTOR(int32_t, 2) l_329 = (VECTOR(int32_t, 2))((-7L), 2L);
                int32_t l_339[7] = {0x292FD68CL,0x292FD68CL,0x292FD68CL,0x292FD68CL,0x292FD68CL,0x292FD68CL,0x292FD68CL};
                uint32_t l_343 = 0x9DEDD145L;
                VECTOR(int64_t, 16) l_362 = (VECTOR(int64_t, 16))(0x16B16BDFAA104E27L, (VECTOR(int64_t, 4))(0x16B16BDFAA104E27L, (VECTOR(int64_t, 2))(0x16B16BDFAA104E27L, (-2L)), (-2L)), (-2L), 0x16B16BDFAA104E27L, (-2L), (VECTOR(int64_t, 2))(0x16B16BDFAA104E27L, (-2L)), (VECTOR(int64_t, 2))(0x16B16BDFAA104E27L, (-2L)), 0x16B16BDFAA104E27L, (-2L), 0x16B16BDFAA104E27L, (-2L));
                int i, j;
                barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
                p_1298->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 155)), permutations[(safe_mod_func_uint32_t_u_u(l_265, 10))][(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))]));
                (*p_1298->g_68) = l_120[0];
                for (p_1298->g_81 = 0; (p_1298->g_81 == 14); p_1298->g_81 = safe_add_func_int8_t_s_s(p_1298->g_81, 4))
                { /* block id: 105 */
                    struct S1 *l_300 = (void*)0;
                    int32_t *l_308 = &l_111[0][7];
                    int32_t l_319 = 0x46449A1EL;
                    int32_t l_321 = 0x2289612DL;
                    int32_t l_324 = 0x01AF41BFL;
                    int32_t l_325 = 3L;
                    int32_t l_326 = 1L;
                    int32_t l_328 = (-6L);
                    int32_t l_330 = 0x072407BEL;
                    int32_t l_331 = 0x3201B676L;
                    int32_t l_332 = (-1L);
                    int32_t l_333 = 0x7A089E56L;
                    int32_t l_334 = 9L;
                    int32_t l_335 = (-1L);
                    int32_t l_336 = 1L;
                    int32_t l_337 = (-5L);
                    int32_t l_338 = (-1L);
                    int32_t l_340 = 0x49B00E60L;
                    int32_t l_341 = 3L;
                    int32_t l_342[10] = {0x151FFD2FL,(-5L),0x151FFD2FL,0x151FFD2FL,(-5L),0x151FFD2FL,0x151FFD2FL,(-5L),0x151FFD2FL,0x151FFD2FL};
                    VECTOR(int64_t, 8) l_361 = (VECTOR(int64_t, 8))((-6L), (VECTOR(int64_t, 4))((-6L), (VECTOR(int64_t, 2))((-6L), 0x15FFA732BECF8EA8L), 0x15FFA732BECF8EA8L), 0x15FFA732BECF8EA8L, (-6L), 0x15FFA732BECF8EA8L);
                    VECTOR(int32_t, 16) l_385 = (VECTOR(int32_t, 16))((-7L), (VECTOR(int32_t, 4))((-7L), (VECTOR(int32_t, 2))((-7L), 0L), 0L), 0L, (-7L), 0L, (VECTOR(int32_t, 2))((-7L), 0L), (VECTOR(int32_t, 2))((-7L), 0L), (-7L), 0L, (-7L), 0L);
                    int i;
                    for (p_1298->g_141.f2 = 0; (p_1298->g_141.f2 >= (-5)); --p_1298->g_141.f2)
                    { /* block id: 108 */
                        struct S1 **l_303 = &l_301;
                        int32_t *l_304 = &p_1298->g_302.f2;
                        int32_t l_315 = 0x2746B81BL;
                        if (p_58)
                            break;
                        if (l_84.f2)
                            break;
                        l_307 = ((l_305.x = ((safe_sub_func_uint32_t_u_u((0x1C65E760D366C35CL ^ (permutations[(safe_mod_func_uint32_t_u_u(l_265, 10))][(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))] > (l_300 == ((*l_303) = l_301)))), (((*l_291) = l_120[0]) == l_304))) == 3UL)) , l_306);
                        (*p_1298->g_317) = (p_58 , func_70(l_308, p_58, (safe_mul_func_int8_t_s_s(0x61L, (l_315 = (safe_lshift_func_uint8_t_u_s(((p_57 ^ (safe_add_func_uint8_t_u_u(permutations[(safe_mod_func_uint32_t_u_u(l_265, 10))][(safe_mod_func_uint32_t_u_u(p_1298->tid, 155))], 0x2BL))) && 0x6ECBC03DAD876D7FL), p_57))))), l_316, p_1298));
                    }
                    l_343++;
                    if (p_57)
                        continue;
                    for (l_84.f3 = (-9); (l_84.f3 <= 58); l_84.f3++)
                    { /* block id: 122 */
                        int32_t **l_351 = &l_348[0][2][2];
                        VECTOR(uint8_t, 8) l_353 = (VECTOR(uint8_t, 8))(1UL, (VECTOR(uint8_t, 4))(1UL, (VECTOR(uint8_t, 2))(1UL, 0x84L), 0x84L), 0x84L, 1UL, 0x84L);
                        int16_t *l_356 = (void*)0;
                        int16_t **l_355[4];
                        int32_t l_374 = 1L;
                        int32_t l_390 = (-7L);
                        int64_t *l_393 = (void*)0;
                        int64_t *l_394[10][2][3] = {{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}},{{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0},{&p_1298->g_302.f1,&p_1298->g_302.f1,(void*)0}}};
                        uint64_t *l_395 = &p_1298->g_281;
                        int i, j, k;
                        for (i = 0; i < 4; i++)
                            l_355[i] = &l_356;
                        (1 + 1);
                    }
                }
                (*l_301) = (*l_301);
            }
            if (p_57)
            { /* block id: 137 */
                int32_t l_431 = 0x1834FE6BL;
                int32_t l_432 = (-1L);
                if ((atomic_inc(&p_1298->g_atomic_input[47 * get_linear_group_id() + 21]) == 8))
                { /* block id: 139 */
                    int32_t l_397[9][5][1] = {{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}},{{(-3L)},{(-3L)},{(-3L)},{(-3L)},{(-3L)}}};
                    int32_t l_413 = (-5L);
                    struct S1 l_414[1] = {{0x9CCC1CF2L,8L,0x613D66CDL,4294967289UL,-10L}};
                    struct S1 l_415 = {2UL,0x355E8F43E16BC767L,0x12ECB547L,0xE608005DL,-8L};/* VOLATILE GLOBAL l_415 */
                    int i, j, k;
                    for (l_397[6][0][0] = 6; (l_397[6][0][0] <= 11); l_397[6][0][0]++)
                    { /* block id: 142 */
                        int32_t l_400 = 8L;
                        int64_t l_401[8];
                        struct S0 l_402 = {0x50L,4294967288UL,0x4CDC0E4CL,0xA0851C7AL,0x15771CC6L};
                        struct S0 l_403 = {0UL,0x1105FF6AL,0x4A8EC19BL,0x57F39EF1L,0x2F56DDECL};
                        uint64_t l_404 = 18446744073709551615UL;
                        uint32_t l_405 = 0UL;
                        int64_t l_406[8][4][8] = {{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}},{{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L},{0x4C1F03871125067DL,1L,0x68F58954239C461FL,0x68F58954239C461FL,1L,0x4C1F03871125067DL,0x05D57CAB776C89D4L,5L}}};
                        int32_t l_407 = (-6L);
                        uint32_t l_408 = 5UL;
                        int64_t l_409 = (-10L);
                        uint16_t l_410 = 0x67EAL;
                        uint64_t l_411 = 18446744073709551608UL;
                        uint32_t l_412[7][10][3] = {{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}},{{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL},{7UL,0x77DABDBBL,7UL}}};
                        int i, j, k;
                        for (i = 0; i < 8; i++)
                            l_401[i] = 0x182ADD07DE999B76L;
                        l_406[0][3][2] |= (l_405 = ((l_403 = ((l_401[6] = l_400) , l_402)) , l_404));
                        l_400 &= ((VECTOR(int32_t, 2))(0x6C8E15FFL, 0x32D59527L)).lo;
                        l_409 ^= (GROUP_DIVERGE(1, 1) , (l_408 = (l_400 = l_407)));
                        l_412[5][9][2] = (l_411 = l_410);
                    }
                    l_415 = (l_413 , l_414[0]);
                    unsigned int result = 0;
                    int l_397_i0, l_397_i1, l_397_i2;
                    for (l_397_i0 = 0; l_397_i0 < 9; l_397_i0++) {
                        for (l_397_i1 = 0; l_397_i1 < 5; l_397_i1++) {
                            for (l_397_i2 = 0; l_397_i2 < 1; l_397_i2++) {
                                result += l_397[l_397_i0][l_397_i1][l_397_i2];
                            }
                        }
                    }
                    result += l_413;
                    int l_414_i0;
                    for (l_414_i0 = 0; l_414_i0 < 1; l_414_i0++) {
                        result += l_414[l_414_i0].f0;
                        result += l_414[l_414_i0].f1;
                        result += l_414[l_414_i0].f2;
                        result += l_414[l_414_i0].f3;
                        result += l_414[l_414_i0].f4;
                    }
                    result += l_415.f0;
                    result += l_415.f1;
                    result += l_415.f2;
                    result += l_415.f3;
                    result += l_415.f4;
                    atomic_add(&p_1298->g_special_values[47 * get_linear_group_id() + 21], result);
                }
                else
                { /* block id: 155 */
                    (1 + 1);
                }
                l_432 ^= (FAKE_DIVERGE(p_1298->group_1_offset, get_group_id(1), 10) == ((safe_sub_func_int8_t_s_s((GROUP_DIVERGE(0, 1) && (safe_sub_func_uint8_t_u_u(((safe_div_func_int32_t_s_s(((VECTOR(int32_t, 16))((-10L), 0L, 0x2C8007F8L, (p_57 <= ((VECTOR(int32_t, 16))(((VECTOR(int32_t, 8))(safe_clamp_func(VECTOR(int32_t, 8),int32_t,((VECTOR(int32_t, 8))((safe_rshift_func_int8_t_s_u(((*l_271) == (*p_1298->g_272)), 6)), (((p_1298->g_141 , (safe_mul_func_uint8_t_u_u(((l_111[4][1] |= (((*l_256) |= (((safe_lshift_func_uint8_t_u_s((safe_unary_minus_func_uint64_t_u((p_58 > (safe_sub_func_int16_t_s_s(((*l_358) = ((p_1298->g_132 == l_357) < ((0x6270C26D6BB762B7L && (p_57 < p_1298->g_352.w)) && p_57))), (-1L)))))), l_431)) < 65535UL) > p_57)) & l_84.f2)) == l_371[3][1][1]), p_57))) || 0xD46D326CL) && 0x282767ACL), (-1L), 0x49B1D10BL, p_58, ((VECTOR(int32_t, 2))(0x366DE2BCL)), (-2L))), (int32_t)0L, (int32_t)l_431))).s7641406452064606)).s6), p_58, 0x288256CEL, (-2L), l_84.f2, 0x6D096E80L, ((VECTOR(int32_t, 4))(4L)), (*p_1298->g_241), 0x7DE7D91DL, 5L)).sa, 0xDB6DA48AL)) == p_57), 7L))), 0x8BL)) || p_58));
            }
            else
            { /* block id: 162 */
                int32_t **l_436 = &l_120[0];
                ++l_433;
                (*l_436) = &l_111[4][3];
                return p_58;
            }
            for (p_1298->g_141.f0 = 0; (p_1298->g_141.f0 <= 58); ++p_1298->g_141.f0)
            { /* block id: 169 */
                for (p_58 = 0; (p_58 <= 17); p_58 = safe_add_func_uint8_t_u_u(p_58, 5))
                { /* block id: 172 */
                    int64_t l_456 = 0x7072303308098ED6L;
                    int64_t *l_457 = &p_1298->g_302.f1;
                    int32_t l_460 = (-1L);
                    p_1298->g_459 = (((((safe_add_func_uint16_t_u_u(p_57, (!((((VECTOR(int32_t, 16))(((VECTOR(int32_t, 8))(l_443.zywzwwww)).s5470161234015026)).s8 && p_57) || (safe_div_func_int32_t_s_s((safe_lshift_func_uint16_t_u_u(0x0238L, 13)), (((void*)0 == (*p_1298->g_206)) || (&p_1298->g_241 == (((*l_457) &= (safe_div_func_uint32_t_u_u((safe_rshift_func_uint16_t_u_s((safe_sub_func_int8_t_s_s((l_456 = ((void*)0 == l_454[7][6])), (0x6901L > p_1298->g_266.s7))), 14)), 9UL))) , l_458[0]))))))))) < 0L) != 0x153384BC5E3DA605L) >= 7UL) , p_1298->g_459);
                    l_460 ^= 0L;
                }
                (*p_1298->g_461) = &p_1298->g_459;
                (*p_1298->g_68) = (*p_1298->g_68);
            }
        }
        else
        { /* block id: 181 */
            int32_t **l_464 = (void*)0;
            int32_t ***l_463 = &l_464;
            VECTOR(int16_t, 8) l_469 = (VECTOR(int16_t, 8))((-6L), (VECTOR(int16_t, 4))((-6L), (VECTOR(int16_t, 2))((-6L), (-6L)), (-6L)), (-6L), (-6L), (-6L));
            int32_t *l_473 = &l_111[4][1];
            VECTOR(uint16_t, 8) l_494 = (VECTOR(uint16_t, 8))(0x4540L, (VECTOR(uint16_t, 4))(0x4540L, (VECTOR(uint16_t, 2))(0x4540L, 0x71CCL), 0x71CCL), 0x71CCL, 0x4540L, 0x71CCL);
            int i;
            if (((((*l_463) = (void*)0) == (void*)0) == ((VECTOR(int16_t, 4))(p_1298->g_465.wywx)).z))
            { /* block id: 183 */
                uint32_t *l_470 = (void*)0;
                uint32_t *l_471 = &p_1298->g_141.f3;
                for (l_84.f0 = 0; (l_84.f0 <= 50); l_84.f0 = safe_add_func_int64_t_s_s(l_84.f0, 5))
                { /* block id: 186 */
                    if (p_57)
                        break;
                    (*l_307) = p_1298->g_468;
                }
                l_473 = func_70(l_120[0], ((*l_358) |= ((VECTOR(int16_t, 8))(((VECTOR(int16_t, 4))(l_469.s3667)).wyzyxxyy)).s2), ((*l_471) ^= FAKE_DIVERGE(p_1298->local_2_offset, get_local_id(2), 10)), l_472, p_1298);
            }
            else
            { /* block id: 193 */
                uint64_t *l_486 = &p_1298->g_281;
                uint64_t *l_489 = &p_1298->g_490;
                int64_t *l_493 = &p_1298->g_302.f1;
                int32_t l_495 = 1L;
                (*p_1298->g_68) = (*p_1298->g_68);
                (*l_473) ^= (safe_lshift_func_int8_t_s_s(p_57, 2));
                (*p_1298->g_241) = (l_476 , ((*l_473) = ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))(sub_sat(((VECTOR(int32_t, 4))(((VECTOR(int32_t, 8))(safe_mad_hi_func_int32_t_s_s_s(VECTOR(int32_t, 8),((VECTOR(int32_t, 4))(((18446744073709551615UL ^ ((VECTOR(int64_t, 8))(min(((VECTOR(int64_t, 4))(l_477.se6b4)).xyyzwxzw, (int64_t)p_1298->g_478))).s0) ^ ((l_495 &= (safe_add_func_int8_t_s_s((safe_rshift_func_uint8_t_u_s(249UL, 2)), (((safe_sub_func_int64_t_s_s(((VECTOR(int64_t, 16))(upsample(((VECTOR(int32_t, 2))(((VECTOR(int32_t, 16))(p_1298->g_485.s0150761527740432)).s8a)).xyxyxxxxxyxyyxxx, ((VECTOR(uint32_t, 4))(abs_diff(((VECTOR(uint32_t, 8))(((VECTOR(uint32_t, 2))(4294967289UL, 0xEB304535L)).yyyxxyyy)).lo, ((VECTOR(uint32_t, 2))(0xEEA0FAFCL, 0UL)).xyyy))).xxzzwyzyxzxwzzzy))).s7, (+(((*l_493) ^= ((++(*l_486)) == (++(*l_489)))) && ((void*)0 == (*p_1298->g_461)))))) >= 0x47L) ^ ((VECTOR(uint16_t, 2))(l_494.s10)).lo)))) , 0x4E2368F93503782DL)), (-10L), 0x5E6324FDL, (-8L))).yxwyxyzx, ((VECTOR(int32_t, 8))(mul_hi(((VECTOR(int32_t, 2))(safe_mul24_func_int32_t_s_s(VECTOR(int32_t, 2),((VECTOR(int32_t, 2))(rhadd(((VECTOR(int32_t, 8))(0x1F7CA546L, 0x06BA0ABDL, p_58, 3L, 0x493F723CL, 0x1BCD8B61L, (-1L), 0x73AB891AL)).s55, ((VECTOR(int32_t, 2))(0x1D1E715DL))))), ((VECTOR(int32_t, 2))(0x622773BBL))))).yyxyxyxx, ((VECTOR(int32_t, 8))(0x4E0D5EBDL))))), ((VECTOR(int32_t, 8))(0x66545F7CL))))).odd)), ((VECTOR(int32_t, 4))(0x3A72BCD8L))))), (-7L), 0x396BE44BL, 0x224B4A16L, 0x11F18A4CL)).s1));
            }
            (*p_1298->g_241) ^= ((VECTOR(int32_t, 8))(p_1298->g_496.zyzzywzy)).s1;
            if (p_57)
                break;
            (*p_1298->g_253) = l_120[0];
        }
    }
    p_1298->g_496.z &= ((safe_sub_func_int16_t_s_s(p_1298->g_45.s5, p_57)) , ((((***p_1298->g_130) = (((*p_1298->g_241) = (l_503[0][0] = ((l_120[0] != l_120[0]) >= ((p_1298->g_302.f1 = (safe_rshift_func_int8_t_s_u(1L, 3))) || ((VECTOR(int64_t, 16))(p_1298->g_502.yxyyyzyzwxywywzw)).s6)))) | p_1298->g_81)) < (safe_div_func_int32_t_s_s((safe_div_func_int16_t_s_s((safe_sub_func_int64_t_s_s((p_1298->g_comm_values[p_1298->tid] |= ((VECTOR(int64_t, 8))(l_510.s6a77d604)).s1), (safe_div_func_int64_t_s_s(p_1298->g_141.f2, (p_1298->g_266.s1 , ((VECTOR(int64_t, 8))(max(((VECTOR(int64_t, 16))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 8))(l_513.yxxyyyxy)).hi)), ((VECTOR(int64_t, 8))(hadd(((VECTOR(int64_t, 4))(p_1298->g_514.s7204)).xwwwyxyz, ((VECTOR(int64_t, 2))(l_515.s5d)).xxyxxyyy))), 0x1C54CAF7F022B91FL, (safe_mod_func_int32_t_s_s((p_1298->g_141.f1 , p_58), l_518)), 4L, 0x755A0EAE3041738DL)).lo, ((VECTOR(int64_t, 8))(0L))))).s7))))), p_58)), (-1L)))) > p_57));
    (*p_1298->g_241) = ((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(5L, (-1L))), 0x36243A36L, (-7L))).x;
    (*p_1298->g_520) = l_519;
    return p_1298->g_382.x;
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_141.f0 p_1298->g_206 p_1298->g_223 p_1298->g_45 p_1298->g_35 p_1298->g_130 p_1298->g_131 p_1298->g_132 p_1298->g_100 p_1298->g_122 p_1298->g_241 p_1298->g_68 p_1298->g_69
 * writes: p_1298->g_141.f0 p_1298->g_220 p_1298->g_186 p_1298->g_122 p_1298->g_135
 */
int32_t * func_70(int32_t * p_71, int16_t  p_72, uint32_t  p_73, int64_t  p_74, struct S4 * p_1298)
{ /* block id: 55 */
    uint64_t l_203[5][9][5] = {{{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL}},{{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL}},{{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL}},{{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL}},{{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL},{0xF787DA68F4A9C1BFL,0xC4DB89876BB3E926L,0UL,0xAF60F279C46A1A6AL,18446744073709551615UL}}};
    int8_t * volatile * volatile l_209 = &p_1298->g_207;/* VOLATILE GLOBAL l_209 */
    VECTOR(uint32_t, 2) l_221 = (VECTOR(uint32_t, 2))(0x34616B0BL, 0x7656AE97L);
    VECTOR(int32_t, 2) l_222 = (VECTOR(int32_t, 2))((-3L), 0L);
    VECTOR(int32_t, 8) l_224 = (VECTOR(int32_t, 8))((-1L), (VECTOR(int32_t, 4))((-1L), (VECTOR(int32_t, 2))((-1L), 0L), 0L), 0L, (-1L), 0L);
    VECTOR(int32_t, 4) l_225 = (VECTOR(int32_t, 4))(1L, (VECTOR(int32_t, 2))(1L, 1L), 1L);
    uint32_t l_250 = 0UL;
    int i, j, k;
    for (p_1298->g_141.f0 = (-4); (p_1298->g_141.f0 > 22); ++p_1298->g_141.f0)
    { /* block id: 58 */
        int32_t *l_198 = &p_1298->g_186;
        int32_t l_199[5] = {0x5A9EB16AL,0x5A9EB16AL,0x5A9EB16AL,0x5A9EB16AL,0x5A9EB16AL};
        int32_t *l_200 = (void*)0;
        int32_t *l_201 = (void*)0;
        int32_t *l_202[10] = {&p_1298->g_135,&p_1298->g_135,&l_199[2],&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&l_199[2],&p_1298->g_135,&p_1298->g_135};
        int8_t * volatile * volatile *l_208[6][7] = {{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0},{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0},{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0},{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0},{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0},{&p_1298->g_206,(void*)0,(void*)0,(void*)0,&p_1298->g_206,&p_1298->g_206,(void*)0}};
        int i, j;
        --l_203[1][4][4];
        l_209 = p_1298->g_206;
    }
    for (p_73 = (-19); (p_73 <= 44); p_73 = safe_add_func_uint32_t_u_u(p_73, 5))
    { /* block id: 64 */
        uint64_t *l_216 = (void*)0;
        uint64_t *l_217 = &l_203[1][4][4];
        int32_t l_234 = (-6L);
        int32_t *l_235 = &p_1298->g_186;
        int32_t l_237 = 0L;
        int32_t l_248[10][4] = {{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)},{(-9L),(-9L),(-9L),(-9L)}};
        int i, j;
        l_237 &= (safe_lshift_func_uint8_t_u_s((safe_mul_func_int8_t_s_s(p_74, (p_72 ^ (p_1298->g_220.sd = (++(*l_217)))))), (((*l_235) = (((((0UL || p_74) ^ ((((VECTOR(uint32_t, 4))(((VECTOR(uint32_t, 16))(((VECTOR(uint32_t, 16))(rhadd(((VECTOR(uint32_t, 4))(l_221.xxyx)).xzwxwzxxxzwwxxxw, ((VECTOR(uint32_t, 8))(abs_diff(((VECTOR(int32_t, 4))(safe_clamp_func(VECTOR(int32_t, 4),VECTOR(int32_t, 4),((VECTOR(int32_t, 2))(0x74312185L, (-10L))).xxyy, ((VECTOR(int32_t, 8))(max(((VECTOR(int32_t, 2))(l_222.xx)).xyxxyyxy, ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))(hadd(((VECTOR(int32_t, 4))(0x5A828D7FL, ((VECTOR(int32_t, 2))(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 4))(p_1298->g_223.xyyx)), ((VECTOR(int32_t, 16))(l_224.s4302105504143344)).s2, 6L, ((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(l_225.wy)), 7L, (-2L))), ((safe_sub_func_uint64_t_u_u(((safe_mul_func_int8_t_s_s(((void*)0 == &p_1298->g_122), (p_1298->g_45.s5 ^ (safe_add_func_int32_t_s_s(7L, (safe_mod_func_int64_t_s_s(0x52587FE98B080ABBL, p_1298->g_35.s7))))))) == p_1298->g_223.y), p_73)) ^ l_234), 0x29B25979L, (-7L), 0x7D6D78E6L, 0x193A821AL, 0x3313194CL)).sd0)), 8L)), ((VECTOR(int32_t, 4))((-1L)))))).wxyzzzxz))))).odd, ((VECTOR(int32_t, 4))(0x2DE9098EL))))).xyywwxyw, ((VECTOR(int32_t, 8))(0x4D5BFBD0L))))).s2640565771517503))).s5, 0xD045B5DBL, ((VECTOR(uint32_t, 4))(0UL)), 0x750E86C6L, p_72, ((VECTOR(uint32_t, 4))(1UL)), 0xA26B157EL, ((VECTOR(uint32_t, 2))(0UL)), 0x3637AD52L)).se694)).w < 0x797CAD44L) && 1L)) > (***p_1298->g_130)) <= 0x0AL) <= l_221.x)) != p_72)));
        for (p_1298->g_122 = 0; (p_1298->g_122 < (-15)); p_1298->g_122 = safe_sub_func_int64_t_s_s(p_1298->g_122, 1))
        { /* block id: 71 */
            uint32_t l_240 = 4294967295UL;
            int32_t *l_242 = (void*)0;
            int32_t *l_243 = &p_1298->g_135;
            int32_t *l_244 = &l_237;
            int32_t *l_245 = &p_1298->g_135;
            int32_t *l_246 = (void*)0;
            int32_t *l_247[2];
            int32_t l_249 = 0x7EAA5562L;
            int i;
            for (i = 0; i < 2; i++)
                l_247[i] = &p_1298->g_135;
            (*p_1298->g_241) = ((*l_235) = l_240);
            --l_250;
        }
    }
    return (*p_1298->g_68);
}


/* ------------------------------------------ */
/* 
 * reads : p_1298->g_130 p_1298->g_104 p_1298->g_81 p_1298->g_131 p_1298->g_132 p_1298->g_100 p_1298->g_141 p_1298->g_35 p_1298->g_16 p_1298->g_153 p_1298->g_135 p_1298->g_168 p_1298->g_45 p_1298->g_185
 * writes: p_1298->g_135 p_1298->g_168 p_1298->g_185 p_1298->g_186
 */
int16_t  func_75(uint8_t  p_76, struct S0  p_77, int64_t  p_78, struct S4 * p_1298)
{ /* block id: 24 */
    uint16_t *l_124 = &p_1298->g_100;
    uint16_t **l_123 = &l_124;
    uint16_t ***l_125 = &l_123;
    uint16_t ****l_126 = (void*)0;
    uint16_t ****l_127 = &l_125;
    uint16_t ***l_129 = &l_123;
    uint16_t ****l_128 = &l_129;
    VECTOR(int16_t, 2) l_142 = (VECTOR(int16_t, 2))((-7L), 1L);
    VECTOR(int8_t, 4) l_145 = (VECTOR(int8_t, 4))((-4L), (VECTOR(int8_t, 2))((-4L), 5L), 5L);
    uint16_t l_146 = 0x9DADL;
    int32_t l_147 = 9L;
    int32_t **l_176[3];
    int8_t *l_188 = (void*)0;
    int8_t **l_187 = &l_188;
    int i;
    for (i = 0; i < 3; i++)
        l_176[i] = &p_1298->g_69;
    (*l_125) = l_123;
    if ((((*l_128) = ((*l_127) = &l_123)) == p_1298->g_130))
    { /* block id: 28 */
        uint32_t l_133[9];
        int32_t *l_134[8] = {&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135,&p_1298->g_135};
        int64_t l_148 = 0x6356B4AE7F92F195L;
        int16_t *l_169 = (void*)0;
        int64_t *l_177 = &l_148;
        int16_t *l_178 = (void*)0;
        int16_t *l_179[6][10] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
        int8_t *l_180 = (void*)0;
        int8_t *l_181 = (void*)0;
        int8_t *l_182 = (void*)0;
        int8_t *l_183 = (void*)0;
        int8_t *l_184[2];
        int8_t **l_189 = &l_184[1];
        int i, j;
        for (i = 0; i < 9; i++)
            l_133[i] = 0xDAF9C58AL;
        for (i = 0; i < 2; i++)
            l_184[i] = (void*)0;
        p_1298->g_135 = l_133[2];
        l_148 ^= (safe_mod_func_int32_t_s_s((((p_1298->g_135 = (!0x3E7324BBL)) ^ 1L) > (0x32BE9FDCL >= ((((p_1298->g_104.x & p_1298->g_81) != (0x4EE9L < (**p_1298->g_131))) && (safe_unary_minus_func_uint32_t_u((((safe_mul_func_int16_t_s_s(((p_1298->g_141 , (l_147 &= (((VECTOR(int16_t, 4))(l_142.xxyy)).x && ((safe_rshift_func_int8_t_s_u(((VECTOR(int8_t, 8))(l_145.wyzzxzzz)).s2, 2)) , l_146)))) != p_1298->g_35.s1), p_77.f3)) , 0UL) & p_1298->g_141.f2)))) ^ p_1298->g_16))), p_77.f3));
        if ((safe_add_func_int32_t_s_s((safe_mod_func_uint32_t_u_u(((0x41L != (l_142.x & ((p_1298->g_185 |= (((VECTOR(uint8_t, 4))(max(((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(hadd(((VECTOR(uint8_t, 4))(clz(((VECTOR(uint8_t, 2))(255UL, 1UL)).xyyy))).lo, ((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 2))(p_1298->g_153.zz)), 0x76L, (safe_mod_func_uint64_t_u_u(p_1298->g_135, (((void*)0 == (**l_127)) , (safe_lshift_func_int8_t_s_u((safe_rshift_func_int16_t_s_u(p_1298->g_16, (safe_div_func_uint8_t_u_u((p_77.f0 ^= (safe_add_func_int16_t_s_s((p_1298->g_168.y = (safe_unary_minus_func_uint64_t_u(((((safe_unary_minus_func_int16_t_s((safe_rshift_func_int16_t_s_u((l_147 = ((VECTOR(int16_t, 16))(clz(((VECTOR(int16_t, 4))(((VECTOR(int16_t, 8))(((VECTOR(int16_t, 8))(p_1298->g_168.xxxyxyyy)))).lo)).zwxzzxxwzwwywyxz))).s6), 10)))) != p_1298->g_100) & ((*l_177) = (safe_lshift_func_int16_t_s_s((safe_div_func_uint8_t_u_u((safe_add_func_uint64_t_u_u(((void*)0 == l_176[0]), 0x640BF3EC7EDD3F16L)), FAKE_DIVERGE(p_1298->global_1_offset, get_global_id(1), 10))), 9)))) , p_77.f4)))), p_1298->g_81))), 0x69L)))), 6))))), ((VECTOR(uint8_t, 4))(255UL)))).s47))), 0x77L, 0UL)), ((VECTOR(uint8_t, 4))(0xEFL))))).w | p_1298->g_45.s5)) != p_77.f3))) , 0x54E2514EL), p_1298->g_141.f3)), 0x4766B9EEL)))
        { /* block id: 38 */
            p_1298->g_135 = (p_1298->g_104.y < (p_1298->g_186 = 5L));
        }
        else
        { /* block id: 41 */
            l_189 = l_187;
        }
    }
    else
    { /* block id: 44 */
        uint16_t l_190 = 0x0096L;
        int32_t *l_193 = &p_1298->g_186;
        l_190--;
        l_193 = l_193;
        if ((atomic_inc(&p_1298->g_atomic_input[47 * get_linear_group_id() + 20]) == 9))
        { /* block id: 48 */
            int32_t l_195 = 0x73B64E57L;
            int32_t *l_194 = &l_195;
            l_194 = (void*)0;
            unsigned int result = 0;
            result += l_195;
            atomic_add(&p_1298->g_special_values[47 * get_linear_group_id() + 20], result);
        }
        else
        { /* block id: 50 */
            (1 + 1);
        }
    }
    return p_1298->g_135;
}


__kernel void entry(__global ulong *result, __global volatile uint *g_atomic_input, __global volatile uint *g_special_values, __global volatile int *g_atomic_reduction, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local volatile uint32_t l_atomic_input[47];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 47; i++)
            l_atomic_input[i] = 0;
    __local volatile uint32_t l_special_values[47];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 47; i++)
            l_special_values[i] = 0;
    __local volatile uint32_t l_atomic_reduction[1];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 1; i++)
            l_atomic_reduction[i] = 0;
    __local int64_t l_comm_values[155];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 155; i++)
            l_comm_values[i] = 1;
    struct S4 c_1299;
    struct S4* p_1298 = &c_1299;
    struct S4 c_1300 = {
        65535UL, // p_1298->g_16
        {0UL}, // p_1298->g_31
        (VECTOR(uint8_t, 8))(4UL, (VECTOR(uint8_t, 4))(4UL, (VECTOR(uint8_t, 2))(4UL, 5UL), 5UL), 5UL, 4UL, 5UL), // p_1298->g_35
        (VECTOR(int32_t, 8))(0x6F39980AL, (VECTOR(int32_t, 4))(0x6F39980AL, (VECTOR(int32_t, 2))(0x6F39980AL, 0x05D55A9DL), 0x05D55A9DL), 0x05D55A9DL, 0x6F39980AL, 0x05D55A9DL), // p_1298->g_45
        (void*)0, // p_1298->g_69
        &p_1298->g_69, // p_1298->g_68
        246UL, // p_1298->g_81
        1UL, // p_1298->g_100
        (VECTOR(uint16_t, 2))(9UL, 1UL), // p_1298->g_104
        0x5AECEF6AL, // p_1298->g_122
        &p_1298->g_100, // p_1298->g_132
        &p_1298->g_132, // p_1298->g_131
        &p_1298->g_131, // p_1298->g_130
        0x407BB3E8L, // p_1298->g_135
        {246UL,0x877B01F9L,1L,0UL,2UL}, // p_1298->g_141
        (VECTOR(uint8_t, 4))(0x0CL, (VECTOR(uint8_t, 2))(0x0CL, 0x37L), 0x37L), // p_1298->g_153
        (VECTOR(int16_t, 2))(0x3CA9L, 7L), // p_1298->g_168
        1L, // p_1298->g_185
        0L, // p_1298->g_186
        (void*)0, // p_1298->g_207
        &p_1298->g_207, // p_1298->g_206
        (VECTOR(int32_t, 16))(0x1259F18DL, (VECTOR(int32_t, 4))(0x1259F18DL, (VECTOR(int32_t, 2))(0x1259F18DL, 2L), 2L), 2L, 0x1259F18DL, 2L, (VECTOR(int32_t, 2))(0x1259F18DL, 2L), (VECTOR(int32_t, 2))(0x1259F18DL, 2L), 0x1259F18DL, 2L, 0x1259F18DL, 2L), // p_1298->g_220
        (VECTOR(int32_t, 2))(0x4EF5FAAFL, 0x31D98B46L), // p_1298->g_223
        {{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0},{(void*)0}}, // p_1298->g_236
        &p_1298->g_135, // p_1298->g_241
        &p_1298->g_69, // p_1298->g_253
        (VECTOR(int8_t, 8))(6L, (VECTOR(int8_t, 4))(6L, (VECTOR(int8_t, 2))(6L, 0x43L), 0x43L), 0x43L, 6L, 0x43L), // p_1298->g_266
        {0x0F87B1ACL}, // p_1298->g_268
        &p_1298->g_130, // p_1298->g_272
        2UL, // p_1298->g_281
        {0x860BB8B3L,0x7F358C7D61086BC3L,-1L,0x076C08D8L,1L}, // p_1298->g_302
        &p_1298->g_69, // p_1298->g_317
        (VECTOR(uint8_t, 4))(0x3FL, (VECTOR(uint8_t, 2))(0x3FL, 0x80L), 0x80L), // p_1298->g_352
        (VECTOR(uint8_t, 2))(0UL, 5UL), // p_1298->g_354
        (VECTOR(int32_t, 16))(0x47D8770AL, (VECTOR(int32_t, 4))(0x47D8770AL, (VECTOR(int32_t, 2))(0x47D8770AL, (-9L)), (-9L)), (-9L), 0x47D8770AL, (-9L), (VECTOR(int32_t, 2))(0x47D8770AL, (-9L)), (VECTOR(int32_t, 2))(0x47D8770AL, (-9L)), 0x47D8770AL, (-9L), 0x47D8770AL, (-9L)), // p_1298->g_381
        (VECTOR(int32_t, 2))(0x37E052A3L, 0x7634E4AAL), // p_1298->g_382
        {0xF65CD443L,0x49FE2B4602E25721L,0x2295F047L,0xAA763D06L,-6L}, // p_1298->g_459
        {{&p_1298->g_459},{&p_1298->g_459},{&p_1298->g_459},{&p_1298->g_459},{&p_1298->g_459},{&p_1298->g_459}}, // p_1298->g_462
        &p_1298->g_462[5][0], // p_1298->g_461
        (VECTOR(int16_t, 4))(0L, (VECTOR(int16_t, 2))(0L, (-1L)), (-1L)), // p_1298->g_465
        {4294967295UL,3L,0x02D21D7EL,3UL,1L}, // p_1298->g_468
        4UL, // p_1298->g_478
        (VECTOR(int32_t, 8))(0x19B55087L, (VECTOR(int32_t, 4))(0x19B55087L, (VECTOR(int32_t, 2))(0x19B55087L, (-1L)), (-1L)), (-1L), 0x19B55087L, (-1L)), // p_1298->g_485
        18446744073709551615UL, // p_1298->g_490
        (VECTOR(int32_t, 4))((-4L), (VECTOR(int32_t, 2))((-4L), 0x35975FD7L), 0x35975FD7L), // p_1298->g_496
        (VECTOR(int64_t, 4))(0x141344C3A915FCB6L, (VECTOR(int64_t, 2))(0x141344C3A915FCB6L, (-1L)), (-1L)), // p_1298->g_502
        (VECTOR(int64_t, 8))(0x7B7D1619971224CCL, (VECTOR(int64_t, 4))(0x7B7D1619971224CCL, (VECTOR(int64_t, 2))(0x7B7D1619971224CCL, 0x1891B3FF4C694FF4L), 0x1891B3FF4C694FF4L), 0x1891B3FF4C694FF4L, 0x7B7D1619971224CCL, 0x1891B3FF4C694FF4L), // p_1298->g_514
        (void*)0, // p_1298->g_521
        &p_1298->g_521, // p_1298->g_520
        {4294967292UL}, // p_1298->g_522
        (VECTOR(uint64_t, 2))(1UL, 0UL), // p_1298->g_533
        {{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2},{&p_1298->g_459.f2,&p_1298->g_459.f2,&p_1298->g_468.f2}}, // p_1298->g_544
        &p_1298->g_544[9][2], // p_1298->g_543
        {{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}},{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}},{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}},{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}},{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}},{{0x7BBBF471L,0x15A88838L},{0x7BBBF471L,0x15A88838L}}}, // p_1298->g_566
        (VECTOR(uint16_t, 4))(0xF807L, (VECTOR(uint16_t, 2))(0xF807L, 65535UL), 65535UL), // p_1298->g_575
        (VECTOR(uint16_t, 16))(0x56E7L, (VECTOR(uint16_t, 4))(0x56E7L, (VECTOR(uint16_t, 2))(0x56E7L, 1UL), 1UL), 1UL, 0x56E7L, 1UL, (VECTOR(uint16_t, 2))(0x56E7L, 1UL), (VECTOR(uint16_t, 2))(0x56E7L, 1UL), 0x56E7L, 1UL, 0x56E7L, 1UL), // p_1298->g_577
        (VECTOR(int8_t, 8))(1L, (VECTOR(int8_t, 4))(1L, (VECTOR(int8_t, 2))(1L, 3L), 3L), 3L, 1L, 3L), // p_1298->g_600
        (VECTOR(int32_t, 16))(0x499CD4E8L, (VECTOR(int32_t, 4))(0x499CD4E8L, (VECTOR(int32_t, 2))(0x499CD4E8L, (-5L)), (-5L)), (-5L), 0x499CD4E8L, (-5L), (VECTOR(int32_t, 2))(0x499CD4E8L, (-5L)), (VECTOR(int32_t, 2))(0x499CD4E8L, (-5L)), 0x499CD4E8L, (-5L), 0x499CD4E8L, (-5L)), // p_1298->g_601
        {{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}},{{4294967291UL},{4294967295UL},{0xE18F7C11L},{0x658E2194L},{0xE18F7C11L}}}, // p_1298->g_602
        {0x2E83A712L,0x649824D71E96B21BL,0x23D45987L,4294967295UL,0x3270L}, // p_1298->g_609
        6UL, // p_1298->g_646
        (VECTOR(int32_t, 4))(7L, (VECTOR(int32_t, 2))(7L, 4L), 4L), // p_1298->g_647
        {0x229F58F5L,0x49E9E16D42CFB71BL,-1L,0x0CB48257L,0x6AE1L}, // p_1298->g_667
        {{{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521}},{{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521}},{{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521}},{{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521}},{{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521},{&p_1298->g_521}}}, // p_1298->g_677
        (void*)0, // p_1298->g_678
        {4294967292UL,0x5DD77A49DA7D068AL,0x527B1766L,0x9C88E100L,3L}, // p_1298->g_682
        (VECTOR(int64_t, 2))(4L, (-6L)), // p_1298->g_708
        (VECTOR(int32_t, 16))(0x299343E6L, (VECTOR(int32_t, 4))(0x299343E6L, (VECTOR(int32_t, 2))(0x299343E6L, 0L), 0L), 0L, 0x299343E6L, 0L, (VECTOR(int32_t, 2))(0x299343E6L, 0L), (VECTOR(int32_t, 2))(0x299343E6L, 0L), 0x299343E6L, 0L, 0x299343E6L, 0L), // p_1298->g_717
        0x55BC3A54L, // p_1298->g_723
        (VECTOR(uint16_t, 8))(0x0858L, (VECTOR(uint16_t, 4))(0x0858L, (VECTOR(uint16_t, 2))(0x0858L, 65528UL), 65528UL), 65528UL, 0x0858L, 65528UL), // p_1298->g_726
        {1UL,0x208A7F59FDBA6EB8L,0L,4294967295UL,9L}, // p_1298->g_757
        {0x0CD7D9BAL,-1L,-9L,4294967288UL,0x3959L}, // p_1298->g_758
        {{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}}, // p_1298->g_771
        (void*)0, // p_1298->g_772
        &p_1298->g_69, // p_1298->g_773
        (void*)0, // p_1298->g_774
        (void*)0, // p_1298->g_777
        &p_1298->g_777, // p_1298->g_776
        0x73D7DCC4L, // p_1298->g_792
        (VECTOR(int8_t, 8))(0x5BL, (VECTOR(int8_t, 4))(0x5BL, (VECTOR(int8_t, 2))(0x5BL, (-1L)), (-1L)), (-1L), 0x5BL, (-1L)), // p_1298->g_793
        &p_1298->g_757, // p_1298->g_805
        {&p_1298->g_805,&p_1298->g_805,&p_1298->g_805,&p_1298->g_805,&p_1298->g_805,&p_1298->g_805}, // p_1298->g_804
        (void*)0, // p_1298->g_811
        &p_1298->g_811, // p_1298->g_810
        &p_1298->g_810, // p_1298->g_809
        &p_1298->g_792, // p_1298->g_817
        {0x84E99D51L}, // p_1298->g_860
        (VECTOR(int64_t, 16))((-1L), (VECTOR(int64_t, 4))((-1L), (VECTOR(int64_t, 2))((-1L), 1L), 1L), 1L, (-1L), 1L, (VECTOR(int64_t, 2))((-1L), 1L), (VECTOR(int64_t, 2))((-1L), 1L), (-1L), 1L, (-1L), 1L), // p_1298->g_871
        (VECTOR(uint32_t, 2))(0UL, 4294967289UL), // p_1298->g_878
        {{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}},{{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69},{&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}}}, // p_1298->g_884
        &p_1298->g_69, // p_1298->g_885
        &p_1298->g_792, // p_1298->g_887
        0x37075E499EA5FFF2L, // p_1298->g_902
        &p_1298->g_69, // p_1298->g_910
        (VECTOR(int32_t, 2))((-1L), 0L), // p_1298->g_915
        {0x590C1C29L,0L,0x67BB50FDL,4294967293UL,0x68E3L}, // p_1298->g_925
        0x0EDA65F3L, // p_1298->g_938
        {{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}},{{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938},{&p_1298->g_938,&p_1298->g_938,&p_1298->g_938,&p_1298->g_938}}}, // p_1298->g_937
        &p_1298->g_937[6][3][3], // p_1298->g_936
        &p_1298->g_936, // p_1298->g_939
        {0x57523F01L,0x786B92189EC0EB6CL,1L,4294967295UL,0x7222L}, // p_1298->g_940
        (VECTOR(uint8_t, 8))(2UL, (VECTOR(uint8_t, 4))(2UL, (VECTOR(uint8_t, 2))(2UL, 0xF1L), 0xF1L), 0xF1L, 2UL, 0xF1L), // p_1298->g_948
        (VECTOR(int64_t, 2))(0x41DCF7C07BB553E4L, (-8L)), // p_1298->g_958
        (VECTOR(int8_t, 2))(0x5CL, 7L), // p_1298->g_961
        (VECTOR(int32_t, 8))(0x05DABF09L, (VECTOR(int32_t, 4))(0x05DABF09L, (VECTOR(int32_t, 2))(0x05DABF09L, 0x76E24BFBL), 0x76E24BFBL), 0x76E24BFBL, 0x05DABF09L, 0x76E24BFBL), // p_1298->g_968
        (VECTOR(uint16_t, 2))(0xF384L, 0xCD39L), // p_1298->g_983
        (VECTOR(uint8_t, 16))(255UL, (VECTOR(uint8_t, 4))(255UL, (VECTOR(uint8_t, 2))(255UL, 255UL), 255UL), 255UL, 255UL, 255UL, (VECTOR(uint8_t, 2))(255UL, 255UL), (VECTOR(uint8_t, 2))(255UL, 255UL), 255UL, 255UL, 255UL, 255UL), // p_1298->g_989
        {0x4A6B2DA9L}, // p_1298->g_991
        0x163EL, // p_1298->g_1006
        {{4294967295UL}}, // p_1298->g_1027
        (VECTOR(uint8_t, 8))(1UL, (VECTOR(uint8_t, 4))(1UL, (VECTOR(uint8_t, 2))(1UL, 0x67L), 0x67L), 0x67L, 1UL, 0x67L), // p_1298->g_1029
        (VECTOR(int8_t, 2))((-2L), 0x65L), // p_1298->g_1030
        (VECTOR(int64_t, 16))((-6L), (VECTOR(int64_t, 4))((-6L), (VECTOR(int64_t, 2))((-6L), 0L), 0L), 0L, (-6L), 0L, (VECTOR(int64_t, 2))((-6L), 0L), (VECTOR(int64_t, 2))((-6L), 0L), (-6L), 0L, (-6L), 0L), // p_1298->g_1041
        {0x68EE92D4L,-1L,-7L,4294967286UL,0x3A9BL}, // p_1298->g_1064
        (VECTOR(uint8_t, 2))(0xEEL, 246UL), // p_1298->g_1073
        0x487B95DDL, // p_1298->g_1078
        18446744073709551615UL, // p_1298->g_1081
        {1L}, // p_1298->g_1105
        (VECTOR(int64_t, 16))(0x75E758A67A240AC4L, (VECTOR(int64_t, 4))(0x75E758A67A240AC4L, (VECTOR(int64_t, 2))(0x75E758A67A240AC4L, 0x32017A73C85E9F7DL), 0x32017A73C85E9F7DL), 0x32017A73C85E9F7DL, 0x75E758A67A240AC4L, 0x32017A73C85E9F7DL, (VECTOR(int64_t, 2))(0x75E758A67A240AC4L, 0x32017A73C85E9F7DL), (VECTOR(int64_t, 2))(0x75E758A67A240AC4L, 0x32017A73C85E9F7DL), 0x75E758A67A240AC4L, 0x32017A73C85E9F7DL, 0x75E758A67A240AC4L, 0x32017A73C85E9F7DL), // p_1298->g_1106
        1L, // p_1298->g_1107
        (VECTOR(int16_t, 4))((-1L), (VECTOR(int16_t, 2))((-1L), 0x7F33L), 0x7F33L), // p_1298->g_1118
        {&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69,&p_1298->g_69}, // p_1298->g_1127
        &p_1298->g_141, // p_1298->g_1164
        &p_1298->g_1164, // p_1298->g_1163
        {1UL,6L,-8L,2UL,-7L}, // p_1298->g_1165
        (VECTOR(int16_t, 8))(0x5445L, (VECTOR(int16_t, 4))(0x5445L, (VECTOR(int16_t, 2))(0x5445L, (-2L)), (-2L)), (-2L), 0x5445L, (-2L)), // p_1298->g_1166
        (VECTOR(int32_t, 8))(0L, (VECTOR(int32_t, 4))(0L, (VECTOR(int32_t, 2))(0L, 0x007C32B4L), 0x007C32B4L), 0x007C32B4L, 0L, 0x007C32B4L), // p_1298->g_1182
        (VECTOR(int32_t, 16))(8L, (VECTOR(int32_t, 4))(8L, (VECTOR(int32_t, 2))(8L, 0x5BCF9582L), 0x5BCF9582L), 0x5BCF9582L, 8L, 0x5BCF9582L, (VECTOR(int32_t, 2))(8L, 0x5BCF9582L), (VECTOR(int32_t, 2))(8L, 0x5BCF9582L), 8L, 0x5BCF9582L, 8L, 0x5BCF9582L), // p_1298->g_1184
        (VECTOR(int16_t, 4))((-10L), (VECTOR(int16_t, 2))((-10L), 0x5CCDL), 0x5CCDL), // p_1298->g_1185
        (VECTOR(int32_t, 8))(0x51FD54ECL, (VECTOR(int32_t, 4))(0x51FD54ECL, (VECTOR(int32_t, 2))(0x51FD54ECL, 0x0EFA3DD5L), 0x0EFA3DD5L), 0x0EFA3DD5L, 0x51FD54ECL, 0x0EFA3DD5L), // p_1298->g_1237
        (VECTOR(int8_t, 8))(1L, (VECTOR(int8_t, 4))(1L, (VECTOR(int8_t, 2))(1L, 1L), 1L), 1L, 1L, 1L), // p_1298->g_1246
        {0x5BDD3A43L,-3L,0x4DDC54E4L,0x9F676D66L,0x3D45L}, // p_1298->g_1249
        {{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L},{(-2L),(-2L),0L,(-1L),(-10L),(-1L),0x76ABBA26L,(-7L),0x76ABBA26L}}, // p_1298->g_1251
        (void*)0, // p_1298->g_1254
        (void*)0, // p_1298->g_1282
        (void*)0, // p_1298->g_1284
        {0UL,0x096F959322514C3FL,0L,2UL,0x4D5DL}, // p_1298->g_1297
        0, // p_1298->v_collective
        sequence_input[get_global_id(0)], // p_1298->global_0_offset
        sequence_input[get_global_id(1)], // p_1298->global_1_offset
        sequence_input[get_global_id(2)], // p_1298->global_2_offset
        sequence_input[get_local_id(0)], // p_1298->local_0_offset
        sequence_input[get_local_id(1)], // p_1298->local_1_offset
        sequence_input[get_local_id(2)], // p_1298->local_2_offset
        sequence_input[get_group_id(0)], // p_1298->group_0_offset
        sequence_input[get_group_id(1)], // p_1298->group_1_offset
        sequence_input[get_group_id(2)], // p_1298->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 155)), permutations[0][get_linear_local_id()])), // p_1298->tid
        l_atomic_input, // l_atomic_input
        l_special_values, // l_special_values
        g_atomic_input, // g_atomic_input
        g_special_values, // g_special_values
        l_atomic_reduction, // l_atomic_reduction
        g_atomic_reduction, // g_atomic_reduction
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_1299 = c_1300;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_1298);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_1298->g_16, "p_1298->g_16", print_hash_value);
    transparent_crc(p_1298->g_31.f0, "p_1298->g_31.f0", print_hash_value);
    transparent_crc(p_1298->g_35.s0, "p_1298->g_35.s0", print_hash_value);
    transparent_crc(p_1298->g_35.s1, "p_1298->g_35.s1", print_hash_value);
    transparent_crc(p_1298->g_35.s2, "p_1298->g_35.s2", print_hash_value);
    transparent_crc(p_1298->g_35.s3, "p_1298->g_35.s3", print_hash_value);
    transparent_crc(p_1298->g_35.s4, "p_1298->g_35.s4", print_hash_value);
    transparent_crc(p_1298->g_35.s5, "p_1298->g_35.s5", print_hash_value);
    transparent_crc(p_1298->g_35.s6, "p_1298->g_35.s6", print_hash_value);
    transparent_crc(p_1298->g_35.s7, "p_1298->g_35.s7", print_hash_value);
    transparent_crc(p_1298->g_45.s0, "p_1298->g_45.s0", print_hash_value);
    transparent_crc(p_1298->g_45.s1, "p_1298->g_45.s1", print_hash_value);
    transparent_crc(p_1298->g_45.s2, "p_1298->g_45.s2", print_hash_value);
    transparent_crc(p_1298->g_45.s3, "p_1298->g_45.s3", print_hash_value);
    transparent_crc(p_1298->g_45.s4, "p_1298->g_45.s4", print_hash_value);
    transparent_crc(p_1298->g_45.s5, "p_1298->g_45.s5", print_hash_value);
    transparent_crc(p_1298->g_45.s6, "p_1298->g_45.s6", print_hash_value);
    transparent_crc(p_1298->g_45.s7, "p_1298->g_45.s7", print_hash_value);
    transparent_crc(p_1298->g_81, "p_1298->g_81", print_hash_value);
    transparent_crc(p_1298->g_100, "p_1298->g_100", print_hash_value);
    transparent_crc(p_1298->g_104.x, "p_1298->g_104.x", print_hash_value);
    transparent_crc(p_1298->g_104.y, "p_1298->g_104.y", print_hash_value);
    transparent_crc(p_1298->g_122, "p_1298->g_122", print_hash_value);
    transparent_crc(p_1298->g_135, "p_1298->g_135", print_hash_value);
    transparent_crc(p_1298->g_141.f0, "p_1298->g_141.f0", print_hash_value);
    transparent_crc(p_1298->g_141.f1, "p_1298->g_141.f1", print_hash_value);
    transparent_crc(p_1298->g_141.f2, "p_1298->g_141.f2", print_hash_value);
    transparent_crc(p_1298->g_141.f3, "p_1298->g_141.f3", print_hash_value);
    transparent_crc(p_1298->g_141.f4, "p_1298->g_141.f4", print_hash_value);
    transparent_crc(p_1298->g_153.x, "p_1298->g_153.x", print_hash_value);
    transparent_crc(p_1298->g_153.y, "p_1298->g_153.y", print_hash_value);
    transparent_crc(p_1298->g_153.z, "p_1298->g_153.z", print_hash_value);
    transparent_crc(p_1298->g_153.w, "p_1298->g_153.w", print_hash_value);
    transparent_crc(p_1298->g_168.x, "p_1298->g_168.x", print_hash_value);
    transparent_crc(p_1298->g_168.y, "p_1298->g_168.y", print_hash_value);
    transparent_crc(p_1298->g_185, "p_1298->g_185", print_hash_value);
    transparent_crc(p_1298->g_186, "p_1298->g_186", print_hash_value);
    transparent_crc(p_1298->g_220.s0, "p_1298->g_220.s0", print_hash_value);
    transparent_crc(p_1298->g_220.s1, "p_1298->g_220.s1", print_hash_value);
    transparent_crc(p_1298->g_220.s2, "p_1298->g_220.s2", print_hash_value);
    transparent_crc(p_1298->g_220.s3, "p_1298->g_220.s3", print_hash_value);
    transparent_crc(p_1298->g_220.s4, "p_1298->g_220.s4", print_hash_value);
    transparent_crc(p_1298->g_220.s5, "p_1298->g_220.s5", print_hash_value);
    transparent_crc(p_1298->g_220.s6, "p_1298->g_220.s6", print_hash_value);
    transparent_crc(p_1298->g_220.s7, "p_1298->g_220.s7", print_hash_value);
    transparent_crc(p_1298->g_220.s8, "p_1298->g_220.s8", print_hash_value);
    transparent_crc(p_1298->g_220.s9, "p_1298->g_220.s9", print_hash_value);
    transparent_crc(p_1298->g_220.sa, "p_1298->g_220.sa", print_hash_value);
    transparent_crc(p_1298->g_220.sb, "p_1298->g_220.sb", print_hash_value);
    transparent_crc(p_1298->g_220.sc, "p_1298->g_220.sc", print_hash_value);
    transparent_crc(p_1298->g_220.sd, "p_1298->g_220.sd", print_hash_value);
    transparent_crc(p_1298->g_220.se, "p_1298->g_220.se", print_hash_value);
    transparent_crc(p_1298->g_220.sf, "p_1298->g_220.sf", print_hash_value);
    transparent_crc(p_1298->g_223.x, "p_1298->g_223.x", print_hash_value);
    transparent_crc(p_1298->g_223.y, "p_1298->g_223.y", print_hash_value);
    transparent_crc(p_1298->g_266.s0, "p_1298->g_266.s0", print_hash_value);
    transparent_crc(p_1298->g_266.s1, "p_1298->g_266.s1", print_hash_value);
    transparent_crc(p_1298->g_266.s2, "p_1298->g_266.s2", print_hash_value);
    transparent_crc(p_1298->g_266.s3, "p_1298->g_266.s3", print_hash_value);
    transparent_crc(p_1298->g_266.s4, "p_1298->g_266.s4", print_hash_value);
    transparent_crc(p_1298->g_266.s5, "p_1298->g_266.s5", print_hash_value);
    transparent_crc(p_1298->g_266.s6, "p_1298->g_266.s6", print_hash_value);
    transparent_crc(p_1298->g_266.s7, "p_1298->g_266.s7", print_hash_value);
    transparent_crc(p_1298->g_268.f0, "p_1298->g_268.f0", print_hash_value);
    transparent_crc(p_1298->g_281, "p_1298->g_281", print_hash_value);
    transparent_crc(p_1298->g_302.f0, "p_1298->g_302.f0", print_hash_value);
    transparent_crc(p_1298->g_302.f1, "p_1298->g_302.f1", print_hash_value);
    transparent_crc(p_1298->g_302.f2, "p_1298->g_302.f2", print_hash_value);
    transparent_crc(p_1298->g_302.f3, "p_1298->g_302.f3", print_hash_value);
    transparent_crc(p_1298->g_302.f4, "p_1298->g_302.f4", print_hash_value);
    transparent_crc(p_1298->g_352.x, "p_1298->g_352.x", print_hash_value);
    transparent_crc(p_1298->g_352.y, "p_1298->g_352.y", print_hash_value);
    transparent_crc(p_1298->g_352.z, "p_1298->g_352.z", print_hash_value);
    transparent_crc(p_1298->g_352.w, "p_1298->g_352.w", print_hash_value);
    transparent_crc(p_1298->g_354.x, "p_1298->g_354.x", print_hash_value);
    transparent_crc(p_1298->g_354.y, "p_1298->g_354.y", print_hash_value);
    transparent_crc(p_1298->g_381.s0, "p_1298->g_381.s0", print_hash_value);
    transparent_crc(p_1298->g_381.s1, "p_1298->g_381.s1", print_hash_value);
    transparent_crc(p_1298->g_381.s2, "p_1298->g_381.s2", print_hash_value);
    transparent_crc(p_1298->g_381.s3, "p_1298->g_381.s3", print_hash_value);
    transparent_crc(p_1298->g_381.s4, "p_1298->g_381.s4", print_hash_value);
    transparent_crc(p_1298->g_381.s5, "p_1298->g_381.s5", print_hash_value);
    transparent_crc(p_1298->g_381.s6, "p_1298->g_381.s6", print_hash_value);
    transparent_crc(p_1298->g_381.s7, "p_1298->g_381.s7", print_hash_value);
    transparent_crc(p_1298->g_381.s8, "p_1298->g_381.s8", print_hash_value);
    transparent_crc(p_1298->g_381.s9, "p_1298->g_381.s9", print_hash_value);
    transparent_crc(p_1298->g_381.sa, "p_1298->g_381.sa", print_hash_value);
    transparent_crc(p_1298->g_381.sb, "p_1298->g_381.sb", print_hash_value);
    transparent_crc(p_1298->g_381.sc, "p_1298->g_381.sc", print_hash_value);
    transparent_crc(p_1298->g_381.sd, "p_1298->g_381.sd", print_hash_value);
    transparent_crc(p_1298->g_381.se, "p_1298->g_381.se", print_hash_value);
    transparent_crc(p_1298->g_381.sf, "p_1298->g_381.sf", print_hash_value);
    transparent_crc(p_1298->g_382.x, "p_1298->g_382.x", print_hash_value);
    transparent_crc(p_1298->g_382.y, "p_1298->g_382.y", print_hash_value);
    transparent_crc(p_1298->g_459.f0, "p_1298->g_459.f0", print_hash_value);
    transparent_crc(p_1298->g_459.f1, "p_1298->g_459.f1", print_hash_value);
    transparent_crc(p_1298->g_459.f2, "p_1298->g_459.f2", print_hash_value);
    transparent_crc(p_1298->g_459.f3, "p_1298->g_459.f3", print_hash_value);
    transparent_crc(p_1298->g_459.f4, "p_1298->g_459.f4", print_hash_value);
    transparent_crc(p_1298->g_465.x, "p_1298->g_465.x", print_hash_value);
    transparent_crc(p_1298->g_465.y, "p_1298->g_465.y", print_hash_value);
    transparent_crc(p_1298->g_465.z, "p_1298->g_465.z", print_hash_value);
    transparent_crc(p_1298->g_465.w, "p_1298->g_465.w", print_hash_value);
    transparent_crc(p_1298->g_468.f0, "p_1298->g_468.f0", print_hash_value);
    transparent_crc(p_1298->g_468.f1, "p_1298->g_468.f1", print_hash_value);
    transparent_crc(p_1298->g_468.f2, "p_1298->g_468.f2", print_hash_value);
    transparent_crc(p_1298->g_468.f3, "p_1298->g_468.f3", print_hash_value);
    transparent_crc(p_1298->g_468.f4, "p_1298->g_468.f4", print_hash_value);
    transparent_crc(p_1298->g_478, "p_1298->g_478", print_hash_value);
    transparent_crc(p_1298->g_485.s0, "p_1298->g_485.s0", print_hash_value);
    transparent_crc(p_1298->g_485.s1, "p_1298->g_485.s1", print_hash_value);
    transparent_crc(p_1298->g_485.s2, "p_1298->g_485.s2", print_hash_value);
    transparent_crc(p_1298->g_485.s3, "p_1298->g_485.s3", print_hash_value);
    transparent_crc(p_1298->g_485.s4, "p_1298->g_485.s4", print_hash_value);
    transparent_crc(p_1298->g_485.s5, "p_1298->g_485.s5", print_hash_value);
    transparent_crc(p_1298->g_485.s6, "p_1298->g_485.s6", print_hash_value);
    transparent_crc(p_1298->g_485.s7, "p_1298->g_485.s7", print_hash_value);
    transparent_crc(p_1298->g_490, "p_1298->g_490", print_hash_value);
    transparent_crc(p_1298->g_496.x, "p_1298->g_496.x", print_hash_value);
    transparent_crc(p_1298->g_496.y, "p_1298->g_496.y", print_hash_value);
    transparent_crc(p_1298->g_496.z, "p_1298->g_496.z", print_hash_value);
    transparent_crc(p_1298->g_496.w, "p_1298->g_496.w", print_hash_value);
    transparent_crc(p_1298->g_502.x, "p_1298->g_502.x", print_hash_value);
    transparent_crc(p_1298->g_502.y, "p_1298->g_502.y", print_hash_value);
    transparent_crc(p_1298->g_502.z, "p_1298->g_502.z", print_hash_value);
    transparent_crc(p_1298->g_502.w, "p_1298->g_502.w", print_hash_value);
    transparent_crc(p_1298->g_514.s0, "p_1298->g_514.s0", print_hash_value);
    transparent_crc(p_1298->g_514.s1, "p_1298->g_514.s1", print_hash_value);
    transparent_crc(p_1298->g_514.s2, "p_1298->g_514.s2", print_hash_value);
    transparent_crc(p_1298->g_514.s3, "p_1298->g_514.s3", print_hash_value);
    transparent_crc(p_1298->g_514.s4, "p_1298->g_514.s4", print_hash_value);
    transparent_crc(p_1298->g_514.s5, "p_1298->g_514.s5", print_hash_value);
    transparent_crc(p_1298->g_514.s6, "p_1298->g_514.s6", print_hash_value);
    transparent_crc(p_1298->g_514.s7, "p_1298->g_514.s7", print_hash_value);
    transparent_crc(p_1298->g_522.f0, "p_1298->g_522.f0", print_hash_value);
    transparent_crc(p_1298->g_533.x, "p_1298->g_533.x", print_hash_value);
    transparent_crc(p_1298->g_533.y, "p_1298->g_533.y", print_hash_value);
    for (i = 0; i < 6; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 2; k++)
            {
                transparent_crc(p_1298->g_566[i][j][k], "p_1298->g_566[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_1298->g_575.x, "p_1298->g_575.x", print_hash_value);
    transparent_crc(p_1298->g_575.y, "p_1298->g_575.y", print_hash_value);
    transparent_crc(p_1298->g_575.z, "p_1298->g_575.z", print_hash_value);
    transparent_crc(p_1298->g_575.w, "p_1298->g_575.w", print_hash_value);
    transparent_crc(p_1298->g_577.s0, "p_1298->g_577.s0", print_hash_value);
    transparent_crc(p_1298->g_577.s1, "p_1298->g_577.s1", print_hash_value);
    transparent_crc(p_1298->g_577.s2, "p_1298->g_577.s2", print_hash_value);
    transparent_crc(p_1298->g_577.s3, "p_1298->g_577.s3", print_hash_value);
    transparent_crc(p_1298->g_577.s4, "p_1298->g_577.s4", print_hash_value);
    transparent_crc(p_1298->g_577.s5, "p_1298->g_577.s5", print_hash_value);
    transparent_crc(p_1298->g_577.s6, "p_1298->g_577.s6", print_hash_value);
    transparent_crc(p_1298->g_577.s7, "p_1298->g_577.s7", print_hash_value);
    transparent_crc(p_1298->g_577.s8, "p_1298->g_577.s8", print_hash_value);
    transparent_crc(p_1298->g_577.s9, "p_1298->g_577.s9", print_hash_value);
    transparent_crc(p_1298->g_577.sa, "p_1298->g_577.sa", print_hash_value);
    transparent_crc(p_1298->g_577.sb, "p_1298->g_577.sb", print_hash_value);
    transparent_crc(p_1298->g_577.sc, "p_1298->g_577.sc", print_hash_value);
    transparent_crc(p_1298->g_577.sd, "p_1298->g_577.sd", print_hash_value);
    transparent_crc(p_1298->g_577.se, "p_1298->g_577.se", print_hash_value);
    transparent_crc(p_1298->g_577.sf, "p_1298->g_577.sf", print_hash_value);
    transparent_crc(p_1298->g_600.s0, "p_1298->g_600.s0", print_hash_value);
    transparent_crc(p_1298->g_600.s1, "p_1298->g_600.s1", print_hash_value);
    transparent_crc(p_1298->g_600.s2, "p_1298->g_600.s2", print_hash_value);
    transparent_crc(p_1298->g_600.s3, "p_1298->g_600.s3", print_hash_value);
    transparent_crc(p_1298->g_600.s4, "p_1298->g_600.s4", print_hash_value);
    transparent_crc(p_1298->g_600.s5, "p_1298->g_600.s5", print_hash_value);
    transparent_crc(p_1298->g_600.s6, "p_1298->g_600.s6", print_hash_value);
    transparent_crc(p_1298->g_600.s7, "p_1298->g_600.s7", print_hash_value);
    transparent_crc(p_1298->g_601.s0, "p_1298->g_601.s0", print_hash_value);
    transparent_crc(p_1298->g_601.s1, "p_1298->g_601.s1", print_hash_value);
    transparent_crc(p_1298->g_601.s2, "p_1298->g_601.s2", print_hash_value);
    transparent_crc(p_1298->g_601.s3, "p_1298->g_601.s3", print_hash_value);
    transparent_crc(p_1298->g_601.s4, "p_1298->g_601.s4", print_hash_value);
    transparent_crc(p_1298->g_601.s5, "p_1298->g_601.s5", print_hash_value);
    transparent_crc(p_1298->g_601.s6, "p_1298->g_601.s6", print_hash_value);
    transparent_crc(p_1298->g_601.s7, "p_1298->g_601.s7", print_hash_value);
    transparent_crc(p_1298->g_601.s8, "p_1298->g_601.s8", print_hash_value);
    transparent_crc(p_1298->g_601.s9, "p_1298->g_601.s9", print_hash_value);
    transparent_crc(p_1298->g_601.sa, "p_1298->g_601.sa", print_hash_value);
    transparent_crc(p_1298->g_601.sb, "p_1298->g_601.sb", print_hash_value);
    transparent_crc(p_1298->g_601.sc, "p_1298->g_601.sc", print_hash_value);
    transparent_crc(p_1298->g_601.sd, "p_1298->g_601.sd", print_hash_value);
    transparent_crc(p_1298->g_601.se, "p_1298->g_601.se", print_hash_value);
    transparent_crc(p_1298->g_601.sf, "p_1298->g_601.sf", print_hash_value);
    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 5; j++)
        {
            transparent_crc(p_1298->g_602[i][j].f0, "p_1298->g_602[i][j].f0", print_hash_value);

        }
    }
    transparent_crc(p_1298->g_609.f0, "p_1298->g_609.f0", print_hash_value);
    transparent_crc(p_1298->g_609.f1, "p_1298->g_609.f1", print_hash_value);
    transparent_crc(p_1298->g_609.f2, "p_1298->g_609.f2", print_hash_value);
    transparent_crc(p_1298->g_609.f3, "p_1298->g_609.f3", print_hash_value);
    transparent_crc(p_1298->g_609.f4, "p_1298->g_609.f4", print_hash_value);
    transparent_crc(p_1298->g_646, "p_1298->g_646", print_hash_value);
    transparent_crc(p_1298->g_647.x, "p_1298->g_647.x", print_hash_value);
    transparent_crc(p_1298->g_647.y, "p_1298->g_647.y", print_hash_value);
    transparent_crc(p_1298->g_647.z, "p_1298->g_647.z", print_hash_value);
    transparent_crc(p_1298->g_647.w, "p_1298->g_647.w", print_hash_value);
    transparent_crc(p_1298->g_667.f0, "p_1298->g_667.f0", print_hash_value);
    transparent_crc(p_1298->g_667.f1, "p_1298->g_667.f1", print_hash_value);
    transparent_crc(p_1298->g_667.f2, "p_1298->g_667.f2", print_hash_value);
    transparent_crc(p_1298->g_667.f3, "p_1298->g_667.f3", print_hash_value);
    transparent_crc(p_1298->g_667.f4, "p_1298->g_667.f4", print_hash_value);
    transparent_crc(p_1298->g_682.f0, "p_1298->g_682.f0", print_hash_value);
    transparent_crc(p_1298->g_682.f1, "p_1298->g_682.f1", print_hash_value);
    transparent_crc(p_1298->g_682.f2, "p_1298->g_682.f2", print_hash_value);
    transparent_crc(p_1298->g_682.f3, "p_1298->g_682.f3", print_hash_value);
    transparent_crc(p_1298->g_682.f4, "p_1298->g_682.f4", print_hash_value);
    transparent_crc(p_1298->g_708.x, "p_1298->g_708.x", print_hash_value);
    transparent_crc(p_1298->g_708.y, "p_1298->g_708.y", print_hash_value);
    transparent_crc(p_1298->g_717.s0, "p_1298->g_717.s0", print_hash_value);
    transparent_crc(p_1298->g_717.s1, "p_1298->g_717.s1", print_hash_value);
    transparent_crc(p_1298->g_717.s2, "p_1298->g_717.s2", print_hash_value);
    transparent_crc(p_1298->g_717.s3, "p_1298->g_717.s3", print_hash_value);
    transparent_crc(p_1298->g_717.s4, "p_1298->g_717.s4", print_hash_value);
    transparent_crc(p_1298->g_717.s5, "p_1298->g_717.s5", print_hash_value);
    transparent_crc(p_1298->g_717.s6, "p_1298->g_717.s6", print_hash_value);
    transparent_crc(p_1298->g_717.s7, "p_1298->g_717.s7", print_hash_value);
    transparent_crc(p_1298->g_717.s8, "p_1298->g_717.s8", print_hash_value);
    transparent_crc(p_1298->g_717.s9, "p_1298->g_717.s9", print_hash_value);
    transparent_crc(p_1298->g_717.sa, "p_1298->g_717.sa", print_hash_value);
    transparent_crc(p_1298->g_717.sb, "p_1298->g_717.sb", print_hash_value);
    transparent_crc(p_1298->g_717.sc, "p_1298->g_717.sc", print_hash_value);
    transparent_crc(p_1298->g_717.sd, "p_1298->g_717.sd", print_hash_value);
    transparent_crc(p_1298->g_717.se, "p_1298->g_717.se", print_hash_value);
    transparent_crc(p_1298->g_717.sf, "p_1298->g_717.sf", print_hash_value);
    transparent_crc(p_1298->g_723, "p_1298->g_723", print_hash_value);
    transparent_crc(p_1298->g_726.s0, "p_1298->g_726.s0", print_hash_value);
    transparent_crc(p_1298->g_726.s1, "p_1298->g_726.s1", print_hash_value);
    transparent_crc(p_1298->g_726.s2, "p_1298->g_726.s2", print_hash_value);
    transparent_crc(p_1298->g_726.s3, "p_1298->g_726.s3", print_hash_value);
    transparent_crc(p_1298->g_726.s4, "p_1298->g_726.s4", print_hash_value);
    transparent_crc(p_1298->g_726.s5, "p_1298->g_726.s5", print_hash_value);
    transparent_crc(p_1298->g_726.s6, "p_1298->g_726.s6", print_hash_value);
    transparent_crc(p_1298->g_726.s7, "p_1298->g_726.s7", print_hash_value);
    transparent_crc(p_1298->g_757.f0, "p_1298->g_757.f0", print_hash_value);
    transparent_crc(p_1298->g_757.f1, "p_1298->g_757.f1", print_hash_value);
    transparent_crc(p_1298->g_757.f2, "p_1298->g_757.f2", print_hash_value);
    transparent_crc(p_1298->g_757.f3, "p_1298->g_757.f3", print_hash_value);
    transparent_crc(p_1298->g_757.f4, "p_1298->g_757.f4", print_hash_value);
    transparent_crc(p_1298->g_758.f0, "p_1298->g_758.f0", print_hash_value);
    transparent_crc(p_1298->g_758.f1, "p_1298->g_758.f1", print_hash_value);
    transparent_crc(p_1298->g_758.f2, "p_1298->g_758.f2", print_hash_value);
    transparent_crc(p_1298->g_758.f3, "p_1298->g_758.f3", print_hash_value);
    transparent_crc(p_1298->g_758.f4, "p_1298->g_758.f4", print_hash_value);
    transparent_crc(p_1298->g_792, "p_1298->g_792", print_hash_value);
    transparent_crc(p_1298->g_793.s0, "p_1298->g_793.s0", print_hash_value);
    transparent_crc(p_1298->g_793.s1, "p_1298->g_793.s1", print_hash_value);
    transparent_crc(p_1298->g_793.s2, "p_1298->g_793.s2", print_hash_value);
    transparent_crc(p_1298->g_793.s3, "p_1298->g_793.s3", print_hash_value);
    transparent_crc(p_1298->g_793.s4, "p_1298->g_793.s4", print_hash_value);
    transparent_crc(p_1298->g_793.s5, "p_1298->g_793.s5", print_hash_value);
    transparent_crc(p_1298->g_793.s6, "p_1298->g_793.s6", print_hash_value);
    transparent_crc(p_1298->g_793.s7, "p_1298->g_793.s7", print_hash_value);
    transparent_crc(p_1298->g_860.f0, "p_1298->g_860.f0", print_hash_value);
    transparent_crc(p_1298->g_871.s0, "p_1298->g_871.s0", print_hash_value);
    transparent_crc(p_1298->g_871.s1, "p_1298->g_871.s1", print_hash_value);
    transparent_crc(p_1298->g_871.s2, "p_1298->g_871.s2", print_hash_value);
    transparent_crc(p_1298->g_871.s3, "p_1298->g_871.s3", print_hash_value);
    transparent_crc(p_1298->g_871.s4, "p_1298->g_871.s4", print_hash_value);
    transparent_crc(p_1298->g_871.s5, "p_1298->g_871.s5", print_hash_value);
    transparent_crc(p_1298->g_871.s6, "p_1298->g_871.s6", print_hash_value);
    transparent_crc(p_1298->g_871.s7, "p_1298->g_871.s7", print_hash_value);
    transparent_crc(p_1298->g_871.s8, "p_1298->g_871.s8", print_hash_value);
    transparent_crc(p_1298->g_871.s9, "p_1298->g_871.s9", print_hash_value);
    transparent_crc(p_1298->g_871.sa, "p_1298->g_871.sa", print_hash_value);
    transparent_crc(p_1298->g_871.sb, "p_1298->g_871.sb", print_hash_value);
    transparent_crc(p_1298->g_871.sc, "p_1298->g_871.sc", print_hash_value);
    transparent_crc(p_1298->g_871.sd, "p_1298->g_871.sd", print_hash_value);
    transparent_crc(p_1298->g_871.se, "p_1298->g_871.se", print_hash_value);
    transparent_crc(p_1298->g_871.sf, "p_1298->g_871.sf", print_hash_value);
    transparent_crc(p_1298->g_878.x, "p_1298->g_878.x", print_hash_value);
    transparent_crc(p_1298->g_878.y, "p_1298->g_878.y", print_hash_value);
    transparent_crc(p_1298->g_902, "p_1298->g_902", print_hash_value);
    transparent_crc(p_1298->g_915.x, "p_1298->g_915.x", print_hash_value);
    transparent_crc(p_1298->g_915.y, "p_1298->g_915.y", print_hash_value);
    transparent_crc(p_1298->g_925.f0, "p_1298->g_925.f0", print_hash_value);
    transparent_crc(p_1298->g_925.f1, "p_1298->g_925.f1", print_hash_value);
    transparent_crc(p_1298->g_925.f2, "p_1298->g_925.f2", print_hash_value);
    transparent_crc(p_1298->g_925.f3, "p_1298->g_925.f3", print_hash_value);
    transparent_crc(p_1298->g_925.f4, "p_1298->g_925.f4", print_hash_value);
    transparent_crc(p_1298->g_938, "p_1298->g_938", print_hash_value);
    transparent_crc(p_1298->g_940.f0, "p_1298->g_940.f0", print_hash_value);
    transparent_crc(p_1298->g_940.f1, "p_1298->g_940.f1", print_hash_value);
    transparent_crc(p_1298->g_940.f2, "p_1298->g_940.f2", print_hash_value);
    transparent_crc(p_1298->g_940.f3, "p_1298->g_940.f3", print_hash_value);
    transparent_crc(p_1298->g_940.f4, "p_1298->g_940.f4", print_hash_value);
    transparent_crc(p_1298->g_948.s0, "p_1298->g_948.s0", print_hash_value);
    transparent_crc(p_1298->g_948.s1, "p_1298->g_948.s1", print_hash_value);
    transparent_crc(p_1298->g_948.s2, "p_1298->g_948.s2", print_hash_value);
    transparent_crc(p_1298->g_948.s3, "p_1298->g_948.s3", print_hash_value);
    transparent_crc(p_1298->g_948.s4, "p_1298->g_948.s4", print_hash_value);
    transparent_crc(p_1298->g_948.s5, "p_1298->g_948.s5", print_hash_value);
    transparent_crc(p_1298->g_948.s6, "p_1298->g_948.s6", print_hash_value);
    transparent_crc(p_1298->g_948.s7, "p_1298->g_948.s7", print_hash_value);
    transparent_crc(p_1298->g_958.x, "p_1298->g_958.x", print_hash_value);
    transparent_crc(p_1298->g_958.y, "p_1298->g_958.y", print_hash_value);
    transparent_crc(p_1298->g_961.x, "p_1298->g_961.x", print_hash_value);
    transparent_crc(p_1298->g_961.y, "p_1298->g_961.y", print_hash_value);
    transparent_crc(p_1298->g_968.s0, "p_1298->g_968.s0", print_hash_value);
    transparent_crc(p_1298->g_968.s1, "p_1298->g_968.s1", print_hash_value);
    transparent_crc(p_1298->g_968.s2, "p_1298->g_968.s2", print_hash_value);
    transparent_crc(p_1298->g_968.s3, "p_1298->g_968.s3", print_hash_value);
    transparent_crc(p_1298->g_968.s4, "p_1298->g_968.s4", print_hash_value);
    transparent_crc(p_1298->g_968.s5, "p_1298->g_968.s5", print_hash_value);
    transparent_crc(p_1298->g_968.s6, "p_1298->g_968.s6", print_hash_value);
    transparent_crc(p_1298->g_968.s7, "p_1298->g_968.s7", print_hash_value);
    transparent_crc(p_1298->g_983.x, "p_1298->g_983.x", print_hash_value);
    transparent_crc(p_1298->g_983.y, "p_1298->g_983.y", print_hash_value);
    transparent_crc(p_1298->g_989.s0, "p_1298->g_989.s0", print_hash_value);
    transparent_crc(p_1298->g_989.s1, "p_1298->g_989.s1", print_hash_value);
    transparent_crc(p_1298->g_989.s2, "p_1298->g_989.s2", print_hash_value);
    transparent_crc(p_1298->g_989.s3, "p_1298->g_989.s3", print_hash_value);
    transparent_crc(p_1298->g_989.s4, "p_1298->g_989.s4", print_hash_value);
    transparent_crc(p_1298->g_989.s5, "p_1298->g_989.s5", print_hash_value);
    transparent_crc(p_1298->g_989.s6, "p_1298->g_989.s6", print_hash_value);
    transparent_crc(p_1298->g_989.s7, "p_1298->g_989.s7", print_hash_value);
    transparent_crc(p_1298->g_989.s8, "p_1298->g_989.s8", print_hash_value);
    transparent_crc(p_1298->g_989.s9, "p_1298->g_989.s9", print_hash_value);
    transparent_crc(p_1298->g_989.sa, "p_1298->g_989.sa", print_hash_value);
    transparent_crc(p_1298->g_989.sb, "p_1298->g_989.sb", print_hash_value);
    transparent_crc(p_1298->g_989.sc, "p_1298->g_989.sc", print_hash_value);
    transparent_crc(p_1298->g_989.sd, "p_1298->g_989.sd", print_hash_value);
    transparent_crc(p_1298->g_989.se, "p_1298->g_989.se", print_hash_value);
    transparent_crc(p_1298->g_989.sf, "p_1298->g_989.sf", print_hash_value);
    transparent_crc(p_1298->g_991.f0, "p_1298->g_991.f0", print_hash_value);
    transparent_crc(p_1298->g_1006, "p_1298->g_1006", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(p_1298->g_1027[i].f0, "p_1298->g_1027[i].f0", print_hash_value);

    }
    transparent_crc(p_1298->g_1029.s0, "p_1298->g_1029.s0", print_hash_value);
    transparent_crc(p_1298->g_1029.s1, "p_1298->g_1029.s1", print_hash_value);
    transparent_crc(p_1298->g_1029.s2, "p_1298->g_1029.s2", print_hash_value);
    transparent_crc(p_1298->g_1029.s3, "p_1298->g_1029.s3", print_hash_value);
    transparent_crc(p_1298->g_1029.s4, "p_1298->g_1029.s4", print_hash_value);
    transparent_crc(p_1298->g_1029.s5, "p_1298->g_1029.s5", print_hash_value);
    transparent_crc(p_1298->g_1029.s6, "p_1298->g_1029.s6", print_hash_value);
    transparent_crc(p_1298->g_1029.s7, "p_1298->g_1029.s7", print_hash_value);
    transparent_crc(p_1298->g_1030.x, "p_1298->g_1030.x", print_hash_value);
    transparent_crc(p_1298->g_1030.y, "p_1298->g_1030.y", print_hash_value);
    transparent_crc(p_1298->g_1041.s0, "p_1298->g_1041.s0", print_hash_value);
    transparent_crc(p_1298->g_1041.s1, "p_1298->g_1041.s1", print_hash_value);
    transparent_crc(p_1298->g_1041.s2, "p_1298->g_1041.s2", print_hash_value);
    transparent_crc(p_1298->g_1041.s3, "p_1298->g_1041.s3", print_hash_value);
    transparent_crc(p_1298->g_1041.s4, "p_1298->g_1041.s4", print_hash_value);
    transparent_crc(p_1298->g_1041.s5, "p_1298->g_1041.s5", print_hash_value);
    transparent_crc(p_1298->g_1041.s6, "p_1298->g_1041.s6", print_hash_value);
    transparent_crc(p_1298->g_1041.s7, "p_1298->g_1041.s7", print_hash_value);
    transparent_crc(p_1298->g_1041.s8, "p_1298->g_1041.s8", print_hash_value);
    transparent_crc(p_1298->g_1041.s9, "p_1298->g_1041.s9", print_hash_value);
    transparent_crc(p_1298->g_1041.sa, "p_1298->g_1041.sa", print_hash_value);
    transparent_crc(p_1298->g_1041.sb, "p_1298->g_1041.sb", print_hash_value);
    transparent_crc(p_1298->g_1041.sc, "p_1298->g_1041.sc", print_hash_value);
    transparent_crc(p_1298->g_1041.sd, "p_1298->g_1041.sd", print_hash_value);
    transparent_crc(p_1298->g_1041.se, "p_1298->g_1041.se", print_hash_value);
    transparent_crc(p_1298->g_1041.sf, "p_1298->g_1041.sf", print_hash_value);
    transparent_crc(p_1298->g_1064.f0, "p_1298->g_1064.f0", print_hash_value);
    transparent_crc(p_1298->g_1064.f1, "p_1298->g_1064.f1", print_hash_value);
    transparent_crc(p_1298->g_1064.f2, "p_1298->g_1064.f2", print_hash_value);
    transparent_crc(p_1298->g_1064.f3, "p_1298->g_1064.f3", print_hash_value);
    transparent_crc(p_1298->g_1064.f4, "p_1298->g_1064.f4", print_hash_value);
    transparent_crc(p_1298->g_1073.x, "p_1298->g_1073.x", print_hash_value);
    transparent_crc(p_1298->g_1073.y, "p_1298->g_1073.y", print_hash_value);
    transparent_crc(p_1298->g_1078, "p_1298->g_1078", print_hash_value);
    transparent_crc(p_1298->g_1081, "p_1298->g_1081", print_hash_value);
    for (i = 0; i < 1; i++)
    {
        transparent_crc(p_1298->g_1105[i], "p_1298->g_1105[i]", print_hash_value);

    }
    transparent_crc(p_1298->g_1106.s0, "p_1298->g_1106.s0", print_hash_value);
    transparent_crc(p_1298->g_1106.s1, "p_1298->g_1106.s1", print_hash_value);
    transparent_crc(p_1298->g_1106.s2, "p_1298->g_1106.s2", print_hash_value);
    transparent_crc(p_1298->g_1106.s3, "p_1298->g_1106.s3", print_hash_value);
    transparent_crc(p_1298->g_1106.s4, "p_1298->g_1106.s4", print_hash_value);
    transparent_crc(p_1298->g_1106.s5, "p_1298->g_1106.s5", print_hash_value);
    transparent_crc(p_1298->g_1106.s6, "p_1298->g_1106.s6", print_hash_value);
    transparent_crc(p_1298->g_1106.s7, "p_1298->g_1106.s7", print_hash_value);
    transparent_crc(p_1298->g_1106.s8, "p_1298->g_1106.s8", print_hash_value);
    transparent_crc(p_1298->g_1106.s9, "p_1298->g_1106.s9", print_hash_value);
    transparent_crc(p_1298->g_1106.sa, "p_1298->g_1106.sa", print_hash_value);
    transparent_crc(p_1298->g_1106.sb, "p_1298->g_1106.sb", print_hash_value);
    transparent_crc(p_1298->g_1106.sc, "p_1298->g_1106.sc", print_hash_value);
    transparent_crc(p_1298->g_1106.sd, "p_1298->g_1106.sd", print_hash_value);
    transparent_crc(p_1298->g_1106.se, "p_1298->g_1106.se", print_hash_value);
    transparent_crc(p_1298->g_1106.sf, "p_1298->g_1106.sf", print_hash_value);
    transparent_crc(p_1298->g_1107, "p_1298->g_1107", print_hash_value);
    transparent_crc(p_1298->g_1118.x, "p_1298->g_1118.x", print_hash_value);
    transparent_crc(p_1298->g_1118.y, "p_1298->g_1118.y", print_hash_value);
    transparent_crc(p_1298->g_1118.z, "p_1298->g_1118.z", print_hash_value);
    transparent_crc(p_1298->g_1118.w, "p_1298->g_1118.w", print_hash_value);
    transparent_crc(p_1298->g_1165.f0, "p_1298->g_1165.f0", print_hash_value);
    transparent_crc(p_1298->g_1165.f1, "p_1298->g_1165.f1", print_hash_value);
    transparent_crc(p_1298->g_1165.f2, "p_1298->g_1165.f2", print_hash_value);
    transparent_crc(p_1298->g_1165.f3, "p_1298->g_1165.f3", print_hash_value);
    transparent_crc(p_1298->g_1165.f4, "p_1298->g_1165.f4", print_hash_value);
    transparent_crc(p_1298->g_1166.s0, "p_1298->g_1166.s0", print_hash_value);
    transparent_crc(p_1298->g_1166.s1, "p_1298->g_1166.s1", print_hash_value);
    transparent_crc(p_1298->g_1166.s2, "p_1298->g_1166.s2", print_hash_value);
    transparent_crc(p_1298->g_1166.s3, "p_1298->g_1166.s3", print_hash_value);
    transparent_crc(p_1298->g_1166.s4, "p_1298->g_1166.s4", print_hash_value);
    transparent_crc(p_1298->g_1166.s5, "p_1298->g_1166.s5", print_hash_value);
    transparent_crc(p_1298->g_1166.s6, "p_1298->g_1166.s6", print_hash_value);
    transparent_crc(p_1298->g_1166.s7, "p_1298->g_1166.s7", print_hash_value);
    transparent_crc(p_1298->g_1182.s0, "p_1298->g_1182.s0", print_hash_value);
    transparent_crc(p_1298->g_1182.s1, "p_1298->g_1182.s1", print_hash_value);
    transparent_crc(p_1298->g_1182.s2, "p_1298->g_1182.s2", print_hash_value);
    transparent_crc(p_1298->g_1182.s3, "p_1298->g_1182.s3", print_hash_value);
    transparent_crc(p_1298->g_1182.s4, "p_1298->g_1182.s4", print_hash_value);
    transparent_crc(p_1298->g_1182.s5, "p_1298->g_1182.s5", print_hash_value);
    transparent_crc(p_1298->g_1182.s6, "p_1298->g_1182.s6", print_hash_value);
    transparent_crc(p_1298->g_1182.s7, "p_1298->g_1182.s7", print_hash_value);
    transparent_crc(p_1298->g_1184.s0, "p_1298->g_1184.s0", print_hash_value);
    transparent_crc(p_1298->g_1184.s1, "p_1298->g_1184.s1", print_hash_value);
    transparent_crc(p_1298->g_1184.s2, "p_1298->g_1184.s2", print_hash_value);
    transparent_crc(p_1298->g_1184.s3, "p_1298->g_1184.s3", print_hash_value);
    transparent_crc(p_1298->g_1184.s4, "p_1298->g_1184.s4", print_hash_value);
    transparent_crc(p_1298->g_1184.s5, "p_1298->g_1184.s5", print_hash_value);
    transparent_crc(p_1298->g_1184.s6, "p_1298->g_1184.s6", print_hash_value);
    transparent_crc(p_1298->g_1184.s7, "p_1298->g_1184.s7", print_hash_value);
    transparent_crc(p_1298->g_1184.s8, "p_1298->g_1184.s8", print_hash_value);
    transparent_crc(p_1298->g_1184.s9, "p_1298->g_1184.s9", print_hash_value);
    transparent_crc(p_1298->g_1184.sa, "p_1298->g_1184.sa", print_hash_value);
    transparent_crc(p_1298->g_1184.sb, "p_1298->g_1184.sb", print_hash_value);
    transparent_crc(p_1298->g_1184.sc, "p_1298->g_1184.sc", print_hash_value);
    transparent_crc(p_1298->g_1184.sd, "p_1298->g_1184.sd", print_hash_value);
    transparent_crc(p_1298->g_1184.se, "p_1298->g_1184.se", print_hash_value);
    transparent_crc(p_1298->g_1184.sf, "p_1298->g_1184.sf", print_hash_value);
    transparent_crc(p_1298->g_1185.x, "p_1298->g_1185.x", print_hash_value);
    transparent_crc(p_1298->g_1185.y, "p_1298->g_1185.y", print_hash_value);
    transparent_crc(p_1298->g_1185.z, "p_1298->g_1185.z", print_hash_value);
    transparent_crc(p_1298->g_1185.w, "p_1298->g_1185.w", print_hash_value);
    transparent_crc(p_1298->g_1237.s0, "p_1298->g_1237.s0", print_hash_value);
    transparent_crc(p_1298->g_1237.s1, "p_1298->g_1237.s1", print_hash_value);
    transparent_crc(p_1298->g_1237.s2, "p_1298->g_1237.s2", print_hash_value);
    transparent_crc(p_1298->g_1237.s3, "p_1298->g_1237.s3", print_hash_value);
    transparent_crc(p_1298->g_1237.s4, "p_1298->g_1237.s4", print_hash_value);
    transparent_crc(p_1298->g_1237.s5, "p_1298->g_1237.s5", print_hash_value);
    transparent_crc(p_1298->g_1237.s6, "p_1298->g_1237.s6", print_hash_value);
    transparent_crc(p_1298->g_1237.s7, "p_1298->g_1237.s7", print_hash_value);
    transparent_crc(p_1298->g_1246.s0, "p_1298->g_1246.s0", print_hash_value);
    transparent_crc(p_1298->g_1246.s1, "p_1298->g_1246.s1", print_hash_value);
    transparent_crc(p_1298->g_1246.s2, "p_1298->g_1246.s2", print_hash_value);
    transparent_crc(p_1298->g_1246.s3, "p_1298->g_1246.s3", print_hash_value);
    transparent_crc(p_1298->g_1246.s4, "p_1298->g_1246.s4", print_hash_value);
    transparent_crc(p_1298->g_1246.s5, "p_1298->g_1246.s5", print_hash_value);
    transparent_crc(p_1298->g_1246.s6, "p_1298->g_1246.s6", print_hash_value);
    transparent_crc(p_1298->g_1246.s7, "p_1298->g_1246.s7", print_hash_value);
    transparent_crc(p_1298->g_1249.f0, "p_1298->g_1249.f0", print_hash_value);
    transparent_crc(p_1298->g_1249.f1, "p_1298->g_1249.f1", print_hash_value);
    transparent_crc(p_1298->g_1249.f2, "p_1298->g_1249.f2", print_hash_value);
    transparent_crc(p_1298->g_1249.f3, "p_1298->g_1249.f3", print_hash_value);
    transparent_crc(p_1298->g_1249.f4, "p_1298->g_1249.f4", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 9; j++)
        {
            transparent_crc(p_1298->g_1251[i][j], "p_1298->g_1251[i][j]", print_hash_value);

        }
    }
    transparent_crc(p_1298->g_1297.f0, "p_1298->g_1297.f0", print_hash_value);
    transparent_crc(p_1298->g_1297.f1, "p_1298->g_1297.f1", print_hash_value);
    transparent_crc(p_1298->g_1297.f2, "p_1298->g_1297.f2", print_hash_value);
    transparent_crc(p_1298->g_1297.f3, "p_1298->g_1297.f3", print_hash_value);
    transparent_crc(p_1298->g_1297.f4, "p_1298->g_1297.f4", print_hash_value);
    transparent_crc(p_1298->v_collective, "p_1298->v_collective", print_hash_value);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    if (!get_linear_global_id())
        for (i = 0 ; i < 47; i++)
            transparent_crc(p_1298->g_special_values[i + 47 * get_linear_group_id()], "p_1298->g_special_values[i + 47 * get_linear_group_id()]", print_hash_value);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    if (!get_linear_local_id())
        for (i = 0; i < 47; i++)
            transparent_crc(p_1298->l_special_values[i], "p_1298->l_special_values[i]", print_hash_value);
    transparent_crc(p_1298->l_comm_values[get_linear_local_id()], "p_1298->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_1298->g_comm_values[get_linear_group_id() * 155 + get_linear_local_id()], "p_1298->g_comm_values[get_linear_group_id() * 155 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}

// --atomics 71 ---atomic_reductions ---fake_divergence ---inter_thread_comm -g 24,98,4 -l 2,98,1
#define int64_t long
#define uint64_t ulong
#define int_least64_t long
#define uint_least64_t ulong
#define int_fast64_t long
#define uint_fast64_t ulong
#define intmax_t long
#define uintmax_t ulong
#define int32_t int
#define uint32_t uint
#define int16_t short
#define uint16_t ushort
#define int8_t char
#define uint8_t uchar

#define INT64_MIN LONG_MIN
#define INT64_MAX LONG_MAX
#define INT32_MIN INT_MIN
#define INT32_MAX INT_MAX
#define INT16_MIN SHRT_MIN
#define INT16_MAX SHRT_MAX
#define INT8_MIN CHAR_MIN
#define INT8_MAX CHAR_MAX
#define UINT64_MIN ULONG_MIN
#define UINT64_MAX ULONG_MAX
#define UINT32_MIN UINT_MIN
#define UINT32_MAX UINT_MAX
#define UINT16_MIN USHRT_MIN
#define UINT16_MAX USHRT_MAX
#define UINT8_MIN UCHAR_MIN
#define UINT8_MAX UCHAR_MAX

#define transparent_crc(X, Y, Z) transparent_crc_(&crc64_context, X, Y, Z)

#define VECTOR(X , Y) VECTOR_(X, Y)
#define VECTOR_(X, Y) X##Y

#ifndef NO_GROUP_DIVERGENCE
#define GROUP_DIVERGE(x, y) get_group_id(x)
#else
#define GROUP_DIVERGE(x, y) (y)
#endif

#ifndef NO_FAKE_DIVERGENCE
#define FAKE_DIVERGE(x, y, z) (x - y)
#else
#define FAKE_DIVERGE(x, y, z) (z)
#endif

__constant uint32_t permutations[10][196] = {
{66,158,21,166,54,111,157,5,182,20,138,109,185,86,69,169,127,179,52,156,170,9,43,140,16,124,50,164,173,29,18,180,36,27,7,6,53,190,47,167,174,82,56,76,125,97,159,78,1,45,192,0,42,49,39,131,96,110,58,113,128,35,72,102,73,60,22,155,34,68,48,119,17,103,130,178,33,46,191,147,105,64,70,83,59,163,153,75,154,189,94,24,13,11,88,184,193,107,141,3,23,62,176,135,139,136,2,104,112,14,85,26,122,4,183,145,123,168,177,99,57,90,12,195,175,55,133,84,114,117,44,165,108,37,30,129,144,150,28,151,67,121,106,19,161,25,171,80,41,137,40,95,91,132,115,146,152,79,8,100,15,38,187,143,61,116,160,120,51,186,126,181,172,10,142,65,118,188,74,93,101,63,89,134,71,148,77,162,149,98,87,92,31,81,32,194}, // permutation 0
{160,12,3,75,137,51,109,173,92,131,61,8,0,164,91,58,117,6,42,85,155,28,67,152,5,138,150,118,177,122,191,148,79,141,181,178,146,126,157,136,185,192,48,158,27,193,14,151,165,9,130,45,163,156,194,101,10,120,111,73,132,145,105,32,179,49,183,86,88,66,184,69,55,31,144,182,40,112,4,72,80,129,83,161,74,53,108,140,84,1,116,123,35,16,190,143,97,121,170,77,38,103,134,76,71,60,54,57,135,62,82,90,180,47,26,104,188,24,87,166,7,46,68,125,34,174,175,18,2,70,94,127,147,102,159,64,56,50,19,189,106,162,124,176,149,139,113,23,154,63,128,133,171,115,119,33,41,29,13,89,93,195,153,44,98,59,30,36,167,11,95,20,21,99,172,114,169,52,43,37,15,81,39,17,100,65,186,25,168,107,110,22,96,187,78,142}, // permutation 1
{149,191,48,104,132,94,26,134,153,136,161,103,150,182,144,54,107,89,194,151,12,7,181,13,112,145,97,177,37,99,188,143,92,121,52,111,38,175,58,22,36,21,86,126,98,17,23,32,135,155,176,51,73,68,82,62,168,40,123,130,79,137,18,33,16,163,148,43,147,165,115,11,61,67,41,113,156,195,171,101,141,152,15,95,59,131,72,172,158,125,27,100,108,193,35,50,117,160,124,118,14,96,116,142,114,44,102,29,75,10,30,167,66,119,60,184,34,2,1,110,186,169,162,83,174,189,20,0,190,192,31,42,63,166,179,159,173,180,28,140,105,178,154,120,4,6,157,74,46,64,81,183,45,138,133,57,77,69,91,106,39,127,3,8,49,90,128,78,93,122,71,187,53,55,170,70,139,87,24,85,109,47,80,56,19,185,129,25,84,9,164,88,65,146,76,5}, // permutation 2
{188,116,160,67,45,90,139,53,112,15,65,13,25,127,100,17,86,108,75,1,101,129,19,141,146,0,111,143,87,121,159,43,99,147,120,63,80,185,29,36,126,151,50,119,9,78,98,138,154,24,180,6,35,47,157,106,164,133,140,79,131,117,189,93,148,69,128,52,21,145,102,91,173,174,153,61,3,182,170,149,22,152,18,72,191,187,113,96,11,37,73,186,169,82,5,178,115,123,40,132,167,54,34,27,58,4,84,89,103,12,66,184,194,193,166,135,130,81,68,26,83,23,30,76,41,74,60,20,38,156,70,158,88,8,57,192,39,136,179,125,94,2,171,85,162,176,62,55,97,44,95,92,14,163,110,190,181,32,172,107,118,168,64,10,175,28,150,16,104,142,122,71,48,134,109,105,33,144,177,77,42,165,114,155,56,137,183,59,31,49,46,124,51,195,161,7}, // permutation 3
{35,113,9,155,64,144,189,72,55,22,76,191,74,182,81,134,62,49,112,95,150,133,26,138,168,136,91,143,106,174,178,56,5,177,44,163,86,97,51,99,176,123,148,173,52,29,10,193,175,185,83,87,96,192,46,124,73,181,45,58,108,38,154,159,18,167,41,68,132,47,66,190,80,37,48,119,115,157,131,160,59,152,169,172,129,15,118,71,28,85,6,24,105,153,137,156,164,120,12,78,53,147,65,17,170,158,114,39,0,7,116,161,135,2,94,4,16,180,84,69,145,184,151,111,40,128,25,102,110,21,142,195,19,36,179,104,42,98,8,146,126,77,30,75,101,70,117,60,187,109,125,100,63,82,3,13,194,92,11,79,20,33,130,90,61,54,32,127,166,122,14,186,1,171,121,34,188,67,23,27,103,57,162,139,88,165,149,43,50,107,140,183,89,31,93,141}, // permutation 4
{180,91,186,152,20,147,22,134,21,42,168,83,162,58,176,125,5,14,77,15,49,194,65,78,183,36,26,89,34,118,97,85,153,32,29,122,165,123,84,2,3,54,76,192,166,41,174,93,185,127,143,129,182,108,188,68,13,115,99,90,133,159,124,88,62,73,37,18,28,46,81,44,189,12,19,104,175,179,139,140,145,35,38,170,157,6,178,172,113,98,155,8,156,27,66,53,24,4,184,69,11,75,116,79,111,109,25,61,169,31,121,107,195,148,132,146,43,45,114,130,40,112,158,171,119,173,110,33,100,51,95,39,101,55,47,150,7,164,126,10,190,48,103,50,70,149,59,94,82,142,138,1,181,74,96,105,30,87,151,57,135,64,167,16,128,136,23,117,0,86,160,177,106,56,161,17,80,191,141,154,72,131,71,63,9,163,187,193,67,102,52,144,92,120,60,137}, // permutation 5
{84,50,152,194,139,61,178,3,55,157,183,18,82,137,26,132,182,12,151,96,159,187,68,45,185,188,21,170,92,102,40,59,17,110,138,97,19,91,60,53,81,128,15,24,36,10,32,57,153,93,33,47,108,52,150,180,65,58,30,189,27,179,127,43,23,140,181,8,75,9,142,104,100,25,85,109,51,6,2,114,11,131,163,111,78,162,48,1,56,184,80,34,165,66,195,64,145,77,37,106,62,105,22,144,115,79,113,44,190,171,99,147,103,186,70,63,123,74,7,126,35,87,41,90,129,0,120,95,46,155,160,169,176,38,118,193,134,71,101,116,177,88,117,39,89,143,166,20,121,191,135,54,154,72,133,174,192,14,5,29,122,167,31,148,158,4,149,69,175,98,112,136,146,86,49,42,125,164,67,107,94,156,76,168,124,73,173,141,83,161,28,172,119,13,16,130}, // permutation 6
{180,184,92,74,128,141,88,150,14,145,167,162,168,188,165,20,121,113,146,44,166,22,2,23,57,65,124,107,194,79,100,45,187,142,182,11,127,149,71,158,175,125,60,46,86,186,69,157,83,37,55,87,53,163,49,41,70,12,144,101,117,78,90,152,96,89,32,170,35,191,109,123,29,1,61,81,176,114,111,38,159,120,160,5,50,58,9,105,94,52,47,172,104,54,63,189,138,181,99,80,4,34,154,140,51,17,85,18,43,183,62,75,135,108,122,97,106,67,161,148,118,156,72,10,48,15,0,19,93,66,133,139,13,143,195,59,190,3,185,77,169,95,151,36,193,173,16,192,179,28,134,7,178,129,31,33,103,84,164,171,27,132,177,24,131,56,98,119,8,174,26,102,153,155,137,39,6,112,110,30,42,147,126,115,64,136,21,82,76,91,68,40,25,130,73,116}, // permutation 7
{94,83,59,40,148,95,54,158,132,97,84,46,90,121,5,136,174,60,176,51,21,41,140,56,145,20,190,101,53,22,77,135,44,127,62,185,126,171,73,192,91,89,109,153,38,159,49,105,8,3,18,63,61,194,117,92,104,138,39,16,108,99,106,163,170,75,79,180,147,150,128,166,161,143,103,27,142,122,110,195,116,55,177,34,29,78,23,0,12,111,25,186,146,120,35,33,6,50,155,178,1,45,191,144,100,19,76,124,125,4,37,70,11,112,134,193,81,187,183,7,42,168,65,67,98,14,58,172,130,74,93,123,80,173,113,175,129,188,133,72,137,30,96,47,32,162,43,189,165,17,119,88,69,10,24,102,66,160,154,179,164,169,82,36,118,31,71,149,87,13,15,85,184,157,131,167,9,182,107,26,2,181,156,68,151,86,28,141,115,139,57,48,52,114,64,152}, // permutation 8
{75,78,46,163,90,98,11,127,118,179,58,57,83,56,26,49,43,143,188,45,107,177,64,28,94,31,128,93,53,105,99,17,119,106,65,168,87,122,133,27,117,44,51,161,24,124,141,97,172,111,130,59,112,180,109,148,182,55,37,129,176,181,70,189,2,162,62,104,73,115,151,144,3,68,150,171,15,69,38,139,142,121,42,14,190,50,194,7,134,169,1,114,18,23,10,95,145,184,135,147,146,54,195,85,19,100,110,72,103,136,91,131,60,153,9,132,158,138,101,140,89,102,25,8,84,193,22,74,29,191,186,175,21,48,36,170,92,164,32,174,123,173,82,185,155,41,47,20,81,61,39,13,178,16,160,4,116,154,192,0,108,137,33,6,76,12,79,120,126,96,86,66,125,166,34,113,165,5,30,159,156,88,40,152,149,63,167,187,77,71,52,67,80,35,157,183} // permutation 9
};

// Seed: 82

#include "CLSmith.h"

/* --- Struct/Union Declarations --- */
struct S0 {
    int8_t g_43;
    uint8_t g_47;
    VECTOR(int32_t, 8) g_56;
    uint16_t g_67;
    uint16_t * volatile g_66;
    VECTOR(uint64_t, 8) g_74;
    uint8_t g_81[7][8];
    uint8_t *g_80;
    int32_t g_88[6][2][9];
    VECTOR(int64_t, 4) g_110;
    uint8_t *g_119;
    uint8_t **g_118;
    volatile int32_t *g_129;
    int32_t *g_134;
    uint32_t g_149;
    uint16_t g_151;
    uint16_t *g_150;
    uint32_t g_161;
    VECTOR(int64_t, 8) g_164;
    int32_t ** volatile g_180;
    VECTOR(int16_t, 8) g_245;
    volatile VECTOR(int8_t, 4) g_250;
    volatile VECTOR(uint32_t, 16) g_264;
    VECTOR(int64_t, 16) g_265;
    volatile VECTOR(int64_t, 8) g_266;
    volatile VECTOR(int32_t, 2) g_279;
    int32_t ** volatile g_280;
    VECTOR(uint16_t, 16) g_356;
    int16_t g_363;
    volatile uint16_t *g_379;
    volatile uint16_t **g_378;
    volatile uint16_t ** volatile *g_377;
    volatile VECTOR(int64_t, 16) g_401;
    volatile VECTOR(int32_t, 4) g_403;
    volatile VECTOR(uint8_t, 4) g_421;
    VECTOR(int16_t, 4) g_462;
    int8_t g_566;
    volatile VECTOR(uint8_t, 16) g_576;
    VECTOR(uint16_t, 8) g_589;
    volatile VECTOR(int8_t, 8) g_616;
    VECTOR(int8_t, 8) g_617;
    volatile int64_t *g_631;
    uint16_t g_637;
    int16_t *g_639;
    int16_t **g_638;
    int32_t **g_646;
    int32_t ***g_645;
    int32_t ***g_649;
    uint16_t g_656;
    VECTOR(uint16_t, 8) g_677;
    volatile VECTOR(int8_t, 16) g_726;
    uint8_t g_729;
    volatile uint8_t g_737;
    volatile uint8_t *g_736;
    volatile uint8_t **g_735[5][2][9];
    volatile uint8_t ***g_734;
    int64_t g_739;
    volatile VECTOR(int64_t, 16) g_769;
    VECTOR(int8_t, 16) g_781;
    int32_t g_834;
    int32_t g_847;
    uint32_t v_collective;
    uint64_t global_0_offset;
    uint64_t global_1_offset;
    uint64_t global_2_offset;
    uint64_t local_0_offset;
    uint64_t local_1_offset;
    uint64_t local_2_offset;
    uint64_t group_0_offset;
    uint64_t group_1_offset;
    uint64_t group_2_offset;
    uint32_t tid;
    __local volatile uint32_t *l_atomic_input;
    __local volatile uint32_t *l_special_values;
    __global volatile uint32_t *g_atomic_input;
    __global volatile uint32_t *g_special_values;
    __local volatile uint32_t *l_atomic_reduction;
    __global volatile uint32_t *g_atomic_reduction;
    __local int64_t *l_comm_values;
    __global int64_t *g_comm_values;
};


/* --- FORWARD DECLARATIONS --- */
int32_t  func_1(struct S0 * p_876);
uint32_t  func_6(uint32_t  p_7, struct S0 * p_876);
int32_t  func_9(uint32_t  p_10, uint32_t  p_11, int8_t  p_12, int8_t  p_13, int64_t  p_14, struct S0 * p_876);
int16_t  func_17(int16_t  p_18, struct S0 * p_876);
int32_t  func_19(int32_t  p_20, int8_t  p_21, struct S0 * p_876);
int8_t  func_30(int32_t  p_31, uint64_t  p_32, int32_t  p_33, int32_t  p_34, struct S0 * p_876);
int32_t  func_35(int64_t  p_36, uint64_t  p_37, struct S0 * p_876);
uint32_t  func_51(int32_t  p_52, int8_t  p_53, uint16_t  p_54, struct S0 * p_876);
int32_t  func_60(uint32_t  p_61, uint16_t * p_62, uint64_t  p_63, uint64_t  p_64, struct S0 * p_876);
uint16_t * func_68(uint32_t  p_69, int64_t  p_70, struct S0 * p_876);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : p_876->l_comm_values p_876->g_47 p_876->g_66 p_876->g_74 p_876->g_80 p_876->g_56 p_876->g_81 p_876->g_comm_values p_876->g_67 p_876->g_88 p_876->g_150 p_876->g_149 p_876->g_151 p_876->g_164 p_876->g_180 p_876->g_134 p_876->g_245 p_876->g_250 p_876->g_119 p_876->g_264 p_876->g_265 p_876->g_266 p_876->g_279 p_876->g_356 p_876->g_363 p_876->g_377 p_876->g_110 p_876->g_462 p_876->g_403 p_876->g_421 p_876->g_161 p_876->g_566 p_876->g_576 p_876->g_589 p_876->g_129 p_876->g_616 p_876->g_617 p_876->g_631 p_876->g_638 p_876->g_645 p_876->g_639 p_876->g_656 p_876->g_646 permutations p_876->g_677 p_876->g_726 p_876->g_729 p_876->g_734 p_876->g_739 p_876->g_769 p_876->g_781 p_876->g_834 p_876->g_737
 * writes: p_876->g_47 p_876->g_80 p_876->g_88 p_876->g_comm_values p_876->g_67 p_876->g_118 p_876->g_74 p_876->g_129 p_876->g_134 p_876->g_149 p_876->g_161 p_876->g_151 p_876->g_245 p_876->g_43 p_876->g_81 p_876->g_363 p_876->g_119 p_876->g_164 p_876->g_637 p_876->g_645 p_876->g_649 p_876->g_656 p_876->g_462 p_876->g_729 p_876->g_739 p_876->g_617 p_876->g_834 p_876->g_279 p_876->g_847 p_876->g_781
 */
int32_t  func_1(struct S0 * p_876)
{ /* block id: 4 */
    uint32_t l_8 = 0UL;
    int32_t *l_846 = &p_876->g_847;
    int8_t *l_848[8][8][4] = {{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}},{{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566},{(void*)0,(void*)0,&p_876->g_566,&p_876->g_566}}};
    int64_t l_849[7][3] = {{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L},{0x4DECBF2D476EF1EFL,4L,4L}};
    int32_t l_850 = 0x3C5B3119L;
    VECTOR(uint8_t, 16) l_855 = (VECTOR(uint8_t, 16))(0xD9L, (VECTOR(uint8_t, 4))(0xD9L, (VECTOR(uint8_t, 2))(0xD9L, 0x19L), 0x19L), 0x19L, 0xD9L, 0x19L, (VECTOR(uint8_t, 2))(0xD9L, 0x19L), (VECTOR(uint8_t, 2))(0xD9L, 0x19L), 0xD9L, 0x19L, 0xD9L, 0x19L);
    int32_t ****l_862 = &p_876->g_645;
    int32_t *l_863 = &p_876->g_88[3][1][6];
    int32_t *l_864 = &l_850;
    int32_t *l_865 = &p_876->g_88[3][1][6];
    int32_t *l_866 = &p_876->g_88[0][0][0];
    int32_t *l_867 = &p_876->g_88[3][1][6];
    int32_t *l_868 = &p_876->g_88[1][0][1];
    int32_t *l_869 = (void*)0;
    int32_t *l_870 = &p_876->g_88[3][1][6];
    int32_t *l_871[6][7][2] = {{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}},{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}},{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}},{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}},{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}},{{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0},{&p_876->g_88[2][0][6],(void*)0}}};
    VECTOR(int32_t, 16) l_872 = (VECTOR(int32_t, 16))(0x7C3E6C33L, (VECTOR(int32_t, 4))(0x7C3E6C33L, (VECTOR(int32_t, 2))(0x7C3E6C33L, 0x0B36169DL), 0x0B36169DL), 0x0B36169DL, 0x7C3E6C33L, 0x0B36169DL, (VECTOR(int32_t, 2))(0x7C3E6C33L, 0x0B36169DL), (VECTOR(int32_t, 2))(0x7C3E6C33L, 0x0B36169DL), 0x7C3E6C33L, 0x0B36169DL, 0x7C3E6C33L, 0x0B36169DL);
    uint32_t l_873 = 4294967295UL;
    int i, j, k;
    l_850 = (3L && (safe_lshift_func_int8_t_s_s((((safe_rshift_func_uint8_t_u_s(GROUP_DIVERGE(1, 1), ((((VECTOR(uint32_t, 8))(safe_mad24_func_uint32_t_u_u_u(VECTOR(uint32_t, 8),((VECTOR(uint32_t, 4))(0xBD2AB60EL, func_6(l_8, p_876), 0UL, 1UL)).wzyzxxzw, ((VECTOR(uint32_t, 4))(rhadd(((VECTOR(uint32_t, 16))(((VECTOR(uint32_t, 16))(1UL, 0x6F3849E8L, 4294967293UL, ((VECTOR(uint32_t, 2))(((VECTOR(uint32_t, 2))(1UL, 0x280A9766L)))), p_876->g_737, ((((p_876->g_403.z <= ((safe_add_func_uint32_t_u_u(GROUP_DIVERGE(2, 1), p_876->g_67)) | (safe_mod_func_int32_t_s_s(((0x27L && ((~((safe_sub_func_int8_t_s_s((!(safe_mod_func_int64_t_s_s((((((*l_846) = 0x578BF7B7L) , l_848[5][1][1]) == l_848[7][2][1]) || l_8), p_876->g_161))), p_876->g_81[5][1])) && 18446744073709551607UL)) && (*p_876->g_119))) ^ l_8), 0x8D43EF09L)))) >= p_876->g_56.s7) , l_8) < l_8), ((VECTOR(uint32_t, 8))(0xE4B9A0BCL)), 0x870FDE31L)))).saded, ((VECTOR(uint32_t, 4))(7UL))))).yxywywyy, ((VECTOR(uint32_t, 8))(0UL))))).s5 >= l_8) , l_8))) , 0x333DL) >= l_849[3][2]), 6)));
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    p_876->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 196)), permutations[(safe_mod_func_uint32_t_u_u((safe_lshift_func_uint16_t_u_s(((p_876->g_161 = (((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 8))(1UL, GROUP_DIVERGE(0, 1), ((VECTOR(uint8_t, 4))(l_855.s7bbf)), 0xF7L, 0xE5L)).lo)).w <= ((0x27L && GROUP_DIVERGE(0, 1)) , ((p_876->g_616.s1 , ((+(-1L)) == l_850)) <= 1L)))) < (0x6B231DD2B631343CL > ((((((safe_lshift_func_uint8_t_u_u((~((p_876->g_781.s3 = (safe_rshift_func_int8_t_s_s((GROUP_DIVERGE(0, 1) , (safe_lshift_func_int8_t_s_s((l_862 != l_862), 2))), 0))) && ((p_876->g_56.s6 , (*p_876->g_639)) >= 0x348AL))), 4)) && (**p_876->g_638)) && 1L) | 0x21L) || l_8) | p_876->g_462.x))), 4)), 10))][(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]));
    ++l_873;
    return p_876->g_81[4][2];
}


/* ------------------------------------------ */
/* 
 * reads : p_876->l_comm_values p_876->g_47 p_876->g_66 p_876->g_74 p_876->g_80 p_876->g_56 p_876->g_81 p_876->g_comm_values p_876->g_67 p_876->g_88 p_876->g_150 p_876->g_149 p_876->g_151 p_876->g_164 p_876->g_180 p_876->g_134 p_876->g_245 p_876->g_250 p_876->g_119 p_876->g_264 p_876->g_265 p_876->g_266 p_876->g_279 p_876->g_356 p_876->g_363 p_876->g_377 p_876->g_110 p_876->g_462 p_876->g_403 p_876->g_421 p_876->g_161 p_876->g_566 p_876->g_576 p_876->g_589 p_876->g_129 p_876->g_616 p_876->g_617 p_876->g_631 p_876->g_638 p_876->g_645 p_876->g_639 p_876->g_656 p_876->g_646 permutations p_876->g_677 p_876->g_726 p_876->g_729 p_876->g_734 p_876->g_739 p_876->g_769 p_876->g_781 p_876->g_834
 * writes: p_876->g_47 p_876->g_80 p_876->g_88 p_876->g_comm_values p_876->g_67 p_876->g_118 p_876->g_74 p_876->g_129 p_876->g_134 p_876->g_149 p_876->g_161 p_876->g_151 p_876->g_245 p_876->g_43 p_876->g_81 p_876->g_363 p_876->g_119 p_876->g_164 p_876->g_637 p_876->g_645 p_876->g_649 p_876->g_656 p_876->g_462 p_876->g_729 p_876->g_739 p_876->g_617 p_876->g_834 p_876->g_279
 */
uint32_t  func_6(uint32_t  p_7, struct S0 * p_876)
{ /* block id: 5 */
    VECTOR(uint16_t, 2) l_26 = (VECTOR(uint16_t, 2))(0x2BB2L, 1UL);
    VECTOR(uint16_t, 2) l_27 = (VECTOR(uint16_t, 2))(0UL, 65528UL);
    uint8_t *l_44 = (void*)0;
    uint8_t *l_45 = (void*)0;
    uint8_t *l_46[3];
    VECTOR(uint8_t, 4) l_50 = (VECTOR(uint8_t, 4))(254UL, (VECTOR(uint8_t, 2))(254UL, 0xF6L), 0xF6L);
    int32_t *l_55 = (void*)0;
    int32_t l_57[9][2] = {{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L},{(-9L),0L}};
    uint16_t *l_58[5] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
    int32_t l_59[3];
    int64_t *l_738 = &p_876->g_739;
    int16_t l_742 = 0x0EC0L;
    int64_t l_799 = 3L;
    int32_t *l_833[6] = {&p_876->g_834,&p_876->g_834,&p_876->g_834,&p_876->g_834,&p_876->g_834,&p_876->g_834};
    uint32_t l_835 = 0UL;
    int i, j;
    for (i = 0; i < 3; i++)
        l_46[i] = &p_876->g_47;
    for (i = 0; i < 3; i++)
        l_59[i] = 0L;
    p_876->g_834 &= func_9((safe_rshift_func_int16_t_s_u(func_17((func_19((safe_div_func_int8_t_s_s((safe_div_func_uint16_t_u_u(p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))], ((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(hadd(((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(0xA6C8L, 8UL)).hi, ((VECTOR(uint16_t, 2))(safe_clamp_func(VECTOR(uint16_t, 2),uint16_t,((VECTOR(uint16_t, 8))(rhadd(((VECTOR(uint16_t, 16))(rhadd(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 16))(l_26.xxxyyxyyxyxxxyxy)).s4b5a)).hi)).xxxxxyxxxxxyyyyy, ((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 16))(65531UL, ((VECTOR(uint16_t, 8))(((VECTOR(uint16_t, 2))(l_27.xy)).yyyxxxxy)), 0xD1D2L, (safe_lshift_func_int8_t_s_u(func_30(func_35(((safe_mul_func_int8_t_s_s((((*l_738) |= ((safe_unary_minus_func_int16_t_s((((safe_mul_func_uint8_t_u_u((p_876->g_47++), ((VECTOR(uint8_t, 16))(l_50.yzxyzyywzxzzxwyz)).s0)) > (0L >= func_51((l_57[8][0] ^= l_27.y), l_50.x, (l_59[2] = 0xE31BL), p_876))) > (p_7 , (safe_mul_func_int8_t_s_s((safe_mod_func_int8_t_s_s((((void*)0 != p_876->g_734) | p_876->g_56.s1), p_876->g_110.x)), 6UL)))))) <= l_26.x)) | l_27.x), FAKE_DIVERGE(p_876->local_0_offset, get_local_id(0), 10))) >= 1UL), l_27.y, p_876), l_742, p_876->g_110.w, l_50.w, p_876), p_7)), FAKE_DIVERGE(p_876->group_2_offset, get_group_id(2), 10), 1UL, GROUP_DIVERGE(1, 1), 0x4883L, 0UL)).se3)).xyyxxyxyxxyxxxyy))).lo, ((VECTOR(uint16_t, 8))(3UL))))).s70, (uint16_t)0UL, (uint16_t)65533UL))), 65535UL)).even, ((VECTOR(uint16_t, 2))(0x5C14L))))).xxxy)).x)), p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))])), p_7, p_876) , p_7), p_876), 8)), p_876->g_781.sa, l_799, p_7, p_876->g_110.z, p_876);
    p_876->g_279.x = (p_876->g_834 = l_835);
    p_876->g_279.x = ((p_7 , ((-1L) < p_7)) , ((safe_rshift_func_uint8_t_u_s(((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(252UL, 0UL)).xxxy)).z, 7)) && (*p_876->g_80)));
    return p_7;
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_149 p_876->g_638 p_876->g_639 p_876->g_363 p_876->g_462 p_876->g_265 p_876->g_80 p_876->g_81 p_876->g_356 p_876->g_279
 * writes: p_876->g_149
 */
int32_t  func_9(uint32_t  p_10, uint32_t  p_11, int8_t  p_12, int8_t  p_13, int64_t  p_14, struct S0 * p_876)
{ /* block id: 359 */
    uint8_t ***l_802 = &p_876->g_118;
    int32_t l_805 = 6L;
    uint32_t *l_810 = &p_876->g_149;
    int32_t l_821 = 0x2C71832BL;
    int32_t *l_822 = &p_876->g_88[3][1][7];
    int32_t *l_823 = &p_876->g_88[3][1][6];
    int32_t *l_824 = &l_805;
    int32_t *l_825 = &l_805;
    int32_t *l_826 = &p_876->g_88[3][1][6];
    int32_t *l_827 = &l_805;
    int32_t *l_828 = &p_876->g_88[3][1][6];
    int32_t *l_829[10][10] = {{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]},{&l_821,&p_876->g_88[3][1][6],&p_876->g_88[0][1][4],&l_805,&p_876->g_88[3][1][6],&p_876->g_88[3][1][6],(void*)0,&p_876->g_88[0][1][4],&p_876->g_88[3][1][6],&p_876->g_88[3][1][6]}};
    uint8_t l_830 = 4UL;
    int i, j;
    for (p_876->g_149 = 0; (p_876->g_149 >= 58); p_876->g_149 = safe_add_func_uint8_t_u_u(p_876->g_149, 3))
    { /* block id: 362 */
        int i, j;
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        p_876->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 196)), permutations[(safe_mod_func_uint32_t_u_u((l_802 != (void*)0), 10))][(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]));
    }
    l_805 = (!((safe_lshift_func_int16_t_s_s(((l_805 == 1L) != (((((safe_rshift_func_uint8_t_u_s((((**p_876->g_638) <= l_805) != (((VECTOR(int8_t, 2))(0x2EL, 0x48L)).even & (((VECTOR(int64_t, 4))(((safe_add_func_uint32_t_u_u(((*l_810)++), p_876->g_462.y)) , (safe_mod_func_uint16_t_u_u((!(safe_lshift_func_int16_t_s_u(((safe_mod_func_uint8_t_u_u(((safe_add_func_int8_t_s_s(0x69L, l_805)) >= (((0UL > 0UL) , p_876->g_265.sc) | (*p_876->g_80))), 0x3AL)) < p_10), p_11))), p_13))), 2L, 0x0D60B50FA21B37B8L, 0x49ACB3CEE1836138L)).w > p_13))), p_876->g_356.s9)) , p_876->g_279.y) >= p_10) <= 0x2FL) , p_11)), l_805)) ^ p_13));
    --l_830;
    return p_12;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes: p_876->g_88
 */
int16_t  func_17(int16_t  p_18, struct S0 * p_876)
{ /* block id: 356 */
    int32_t *l_798 = &p_876->g_88[3][1][6];
    (*l_798) = p_18;
    return p_18;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
int32_t  func_19(int32_t  p_20, int8_t  p_21, struct S0 * p_876)
{ /* block id: 354 */
    return p_20;
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_646 p_876->g_245 p_876->g_47 p_876->g_645 p_876->g_134 p_876->g_180 p_876->g_739 p_876->g_769 p_876->g_161 p_876->g_781 p_876->g_81 p_876->g_80 p_876->g_638 p_876->g_639 p_876->g_363
 * writes: p_876->g_134 p_876->g_47 p_876->g_739 p_876->g_617 p_876->g_81
 */
int8_t  func_30(int32_t  p_31, uint64_t  p_32, int32_t  p_33, int32_t  p_34, struct S0 * p_876)
{ /* block id: 309 */
    VECTOR(int8_t, 4) l_780 = (VECTOR(int8_t, 4))(0x52L, (VECTOR(int8_t, 2))(0x52L, 0x50L), 0x50L);
    int32_t l_796 = 0x20EA3BD5L;
    int i;
    (*p_876->g_646) = &p_31;
    for (p_33 = 0; (p_33 <= 27); p_33 = safe_add_func_int8_t_s_s(p_33, 6))
    { /* block id: 313 */
        int64_t l_758 = 0x44653E81DAA0B3B5L;
        VECTOR(int64_t, 2) l_770 = (VECTOR(int64_t, 2))(0x36587779826DDCA4L, 0x30CABB6A3795902DL);
        uint8_t l_795 = 249UL;
        int32_t l_797 = (-10L);
        int i;
        if ((atomic_inc(&p_876->g_atomic_input[71 * get_linear_group_id() + 35]) == 2))
        { /* block id: 315 */
            int32_t l_745 = 0x3D6D29CCL;
            for (l_745 = 0; (l_745 == (-14)); l_745 = safe_sub_func_int32_t_s_s(l_745, 5))
            { /* block id: 318 */
                int32_t l_748 = 0L;
                for (l_748 = 0; (l_748 > (-25)); l_748--)
                { /* block id: 321 */
                    int32_t l_751 = 0x1D559A14L;
                    for (l_751 = 24; (l_751 >= (-23)); --l_751)
                    { /* block id: 324 */
                        uint32_t l_754 = 4294967288UL;
                        uint16_t l_755 = 65526UL;
                        l_755 = l_754;
                    }
                }
            }
            unsigned int result = 0;
            result += l_745;
            atomic_add(&p_876->g_special_values[71 * get_linear_group_id() + 35], result);
        }
        else
        { /* block id: 329 */
            (1 + 1);
        }
        if ((safe_sub_func_int32_t_s_s((GROUP_DIVERGE(0, 1) == (p_32 <= l_758)), (p_31 && (p_34 <= (((safe_sub_func_uint64_t_u_u(p_876->g_245.s7, (safe_sub_func_int32_t_s_s(l_758, (-1L))))) | p_34) ^ GROUP_DIVERGE(0, 1)))))))
        { /* block id: 332 */
            return p_31;
        }
        else
        { /* block id: 334 */
            for (p_876->g_47 = 1; (p_876->g_47 < 34); p_876->g_47++)
            { /* block id: 337 */
                (***p_876->g_645) |= p_34;
            }
        }
        if ((**p_876->g_180))
            break;
        for (p_876->g_739 = 9; (p_876->g_739 == 27); p_876->g_739 = safe_add_func_uint64_t_u_u(p_876->g_739, 9))
        { /* block id: 344 */
            VECTOR(int64_t, 2) l_767 = (VECTOR(int64_t, 2))((-1L), 9L);
            VECTOR(int64_t, 16) l_768 = (VECTOR(int64_t, 16))(0x192D5017B96C5266L, (VECTOR(int64_t, 4))(0x192D5017B96C5266L, (VECTOR(int64_t, 2))(0x192D5017B96C5266L, (-2L)), (-2L)), (-2L), 0x192D5017B96C5266L, (-2L), (VECTOR(int64_t, 2))(0x192D5017B96C5266L, (-2L)), (VECTOR(int64_t, 2))(0x192D5017B96C5266L, (-2L)), 0x192D5017B96C5266L, (-2L), 0x192D5017B96C5266L, (-2L));
            VECTOR(int8_t, 16) l_777 = (VECTOR(int8_t, 16))((-10L), (VECTOR(int8_t, 4))((-10L), (VECTOR(int8_t, 2))((-10L), 1L), 1L), 1L, (-10L), 1L, (VECTOR(int8_t, 2))((-10L), 1L), (VECTOR(int8_t, 2))((-10L), 1L), (-10L), 1L, (-10L), 1L);
            VECTOR(int8_t, 8) l_786 = (VECTOR(int8_t, 8))(0x71L, (VECTOR(int8_t, 4))(0x71L, (VECTOR(int8_t, 2))(0x71L, (-3L)), (-3L)), (-3L), 0x71L, (-3L));
            int8_t *l_787[1];
            uint16_t *l_794 = (void*)0;
            int i;
            for (i = 0; i < 1; i++)
                l_787[i] = &p_876->g_566;
            atomic_xor(&p_876->g_atomic_reduction[get_linear_group_id()], (l_797 |= (((VECTOR(int32_t, 8))((((VECTOR(int64_t, 2))(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 8))(sub_sat(((VECTOR(int64_t, 8))(min(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(mad_sat(((VECTOR(int64_t, 2))((-8L), 0x36E0E97CE2BF2BBDL)), ((VECTOR(int64_t, 2))(l_767.xx)), ((VECTOR(int64_t, 16))(l_768.s592123271bcc58e7)).s56))).xxyxxxyx)), (int64_t)l_767.x))), ((VECTOR(int64_t, 4))(add_sat(((VECTOR(int64_t, 4))(p_876->g_769.sa458)), ((VECTOR(int64_t, 8))(((VECTOR(int64_t, 4))(l_770.yxxx)).wwyzzywx)).lo))).yzyxwwxx))).lo)).lo)).lo >= (safe_div_func_uint32_t_u_u((((((-1L) > (safe_div_func_uint64_t_u_u(p_876->g_161, (safe_mul_func_uint32_t_u_u((((VECTOR(int8_t, 4))(clz(((VECTOR(int8_t, 4))(l_777.s72e8))))).z | (safe_mod_func_int8_t_s_s(((VECTOR(int8_t, 4))(add_sat(((VECTOR(int8_t, 4))(l_780.wyxy)), ((VECTOR(int8_t, 2))(p_876->g_781.s7e)).yxyy))).x, l_758))), (((safe_mul_func_int16_t_s_s((l_796 = (((p_32 == p_876->g_781.s3) & (safe_mod_func_int8_t_s_s((p_876->g_617.s2 = ((VECTOR(int8_t, 4))(((VECTOR(int8_t, 16))(l_786.s4652101061470715)).s3847)).y), ((*p_876->g_80) = (safe_sub_func_int64_t_s_s((safe_sub_func_uint8_t_u_u((+FAKE_DIVERGE(p_876->local_1_offset, get_local_id(1), 10)), (safe_mod_func_uint8_t_u_u((p_34 != (p_876->g_81[5][1] >= (l_795 = 0x46DFL))), l_780.z)))), l_770.x)))))) > (**p_876->g_638))), 0x4698L)) >= l_777.s6) > l_770.x)))))) && (-8L)) >= 0L) , p_32), p_34))), l_780.x, ((VECTOR(int32_t, 2))(0x5F580AADL)), 0x2C55E533L, l_780.y, 0x0B717B7EL, 0x31A8A9FCL)).s5 ^ l_786.s7)));
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
            if (get_linear_local_id() == 0)
                p_876->v_collective += p_876->g_atomic_reduction[get_linear_group_id()];
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        }
    }
    return p_34;
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_645 p_876->g_646
 * writes: p_876->g_134
 */
int32_t  func_35(int64_t  p_36, uint64_t  p_37, struct S0 * p_876)
{ /* block id: 306 */
    int32_t *l_740 = (void*)0;
    int32_t l_741 = (-1L);
    (**p_876->g_645) = l_740;
    return l_741;
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_66 p_876->g_74 p_876->g_80 p_876->g_56 p_876->g_81 p_876->g_comm_values p_876->g_67 p_876->g_88 p_876->l_comm_values p_876->g_150 p_876->g_149 p_876->g_151 p_876->g_164 p_876->g_180 p_876->g_134 p_876->g_245 p_876->g_250 p_876->g_119 p_876->g_264 p_876->g_265 p_876->g_266 p_876->g_279 p_876->g_356 p_876->g_363 p_876->g_377 p_876->g_110 p_876->g_462 p_876->g_403 p_876->g_421 p_876->g_161 p_876->g_566 p_876->g_576 p_876->g_589 p_876->g_129 p_876->g_616 p_876->g_617 p_876->g_631 p_876->g_638 p_876->g_645 p_876->g_639 p_876->g_656 p_876->g_646 permutations p_876->g_677 p_876->g_726 p_876->g_729
 * writes: p_876->g_80 p_876->g_88 p_876->g_comm_values p_876->g_67 p_876->g_118 p_876->g_74 p_876->g_129 p_876->g_134 p_876->g_149 p_876->g_161 p_876->g_151 p_876->g_245 p_876->g_43 p_876->g_81 p_876->g_363 p_876->g_119 p_876->g_164 p_876->g_637 p_876->g_645 p_876->g_649 p_876->g_656 p_876->g_462 p_876->g_729
 */
uint32_t  func_51(int32_t  p_52, int8_t  p_53, uint16_t  p_54, struct S0 * p_876)
{ /* block id: 9 */
    uint8_t l_65 = 0x25L;
    VECTOR(uint64_t, 2) l_73 = (VECTOR(uint64_t, 2))(18446744073709551615UL, 7UL);
    uint8_t **l_82 = &p_876->g_80;
    uint8_t *l_84 = (void*)0;
    uint8_t **l_83 = &l_84;
    uint8_t *l_86 = &p_876->g_81[5][4];
    uint8_t **l_85 = &l_86;
    int32_t *l_87[10];
    int64_t *l_89 = (void*)0;
    int64_t *l_90 = (void*)0;
    int64_t *l_91 = (void*)0;
    int64_t *l_92 = (void*)0;
    int64_t *l_93 = (void*)0;
    int64_t *l_94 = (void*)0;
    int64_t *l_95[3][4];
    uint16_t *l_146 = &p_876->g_67;
    uint16_t **l_145 = &l_146;
    uint32_t *l_147 = (void*)0;
    uint32_t *l_148 = &p_876->g_149;
    int16_t l_209[3][4] = {{0x7BD8L,(-1L),0x7BD8L,0x7BD8L},{0x7BD8L,(-1L),0x7BD8L,0x7BD8L},{0x7BD8L,(-1L),0x7BD8L,0x7BD8L}};
    int32_t *l_246 = &p_876->g_88[3][1][6];
    int32_t **l_271 = (void*)0;
    VECTOR(int32_t, 4) l_407 = (VECTOR(int32_t, 4))(0x5351EE57L, (VECTOR(int32_t, 2))(0x5351EE57L, 0x43212164L), 0x43212164L);
    uint64_t l_451[8] = {0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L,0x237663B5B553AC31L};
    uint32_t *l_469 = &p_876->g_149;
    int16_t l_556 = (-1L);
    VECTOR(uint8_t, 2) l_578 = (VECTOR(uint8_t, 2))(0xF7L, 2UL);
    uint16_t l_593 = 0UL;
    VECTOR(int32_t, 8) l_610 = (VECTOR(int32_t, 8))(0x13D64695L, (VECTOR(int32_t, 4))(0x13D64695L, (VECTOR(int32_t, 2))(0x13D64695L, 0x214A49EBL), 0x214A49EBL), 0x214A49EBL, 0x13D64695L, 0x214A49EBL);
    VECTOR(int8_t, 4) l_618 = (VECTOR(int8_t, 4))(0x08L, (VECTOR(int8_t, 2))(0x08L, 0x15L), 0x15L);
    VECTOR(uint8_t, 8) l_624 = (VECTOR(uint8_t, 8))(255UL, (VECTOR(uint8_t, 4))(255UL, (VECTOR(uint8_t, 2))(255UL, 8UL), 8UL), 8UL, 255UL, 8UL);
    VECTOR(uint8_t, 16) l_626 = (VECTOR(uint8_t, 16))(249UL, (VECTOR(uint8_t, 4))(249UL, (VECTOR(uint8_t, 2))(249UL, 0xBAL), 0xBAL), 0xBAL, 249UL, 0xBAL, (VECTOR(uint8_t, 2))(249UL, 0xBAL), (VECTOR(uint8_t, 2))(249UL, 0xBAL), 249UL, 0xBAL, 249UL, 0xBAL);
    int32_t ***l_648 = &p_876->g_646;
    VECTOR(uint32_t, 4) l_723 = (VECTOR(uint32_t, 4))(0x1B4D9216L, (VECTOR(uint32_t, 2))(0x1B4D9216L, 0x931ABD91L), 0x931ABD91L);
    int i, j;
    for (i = 0; i < 10; i++)
        l_87[i] = &p_876->g_88[3][1][6];
    for (i = 0; i < 3; i++)
    {
        for (j = 0; j < 4; j++)
            l_95[i][j] = (void*)0;
    }
    if ((func_60(((*l_148) = (((((l_65 || (p_876->g_66 == ((*l_145) = func_68(((p_52 == ((p_876->g_comm_values[p_876->tid] |= (safe_div_func_uint64_t_u_u(((VECTOR(uint64_t, 2))(min(((VECTOR(uint64_t, 16))(l_73.yxyxxyyyyxxxxxxx)).s24, ((VECTOR(uint64_t, 4))(p_876->g_74.s3475)).hi))).even, ((((FAKE_DIVERGE(p_876->global_0_offset, get_global_id(0), 10) <= (p_54 | 1L)) , (safe_unary_minus_func_int32_t_s((p_876->g_88[1][0][1] = (safe_sub_func_int8_t_s_s((safe_mod_func_int16_t_s_s((p_53 > (((*l_82) = p_876->g_80) == ((*l_85) = ((*l_83) = &p_876->g_81[5][1])))), p_876->g_56.s0)), p_52)))))) ^ 6L) , p_876->g_81[2][6])))) ^ p_52)) >= GROUP_DIVERGE(0, 1)), p_876->g_74.s5, p_876)))) < p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]) || p_876->g_74.s7) , p_52) && p_54)), p_876->g_150, p_53, p_876->g_56.s0, p_876) == 0xADAC5A14L))
    { /* block id: 57 */
        int64_t l_197[10][8][1] = {{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}},{{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)},{(-1L)}}};
        int32_t l_198 = 0x4982AE61L;
        int32_t l_199 = 0x04B4AF36L;
        uint64_t l_200 = 0xA08163BCB85B4EB1L;
        int32_t l_207 = 0x6A8D5DC9L;
        int32_t l_210 = 0x41256004L;
        int32_t l_212 = 0x50DF3ED7L;
        int32_t l_213 = 0x2670ACDFL;
        int32_t l_215 = 1L;
        int32_t l_217 = (-1L);
        int32_t l_218 = 0x4056BA9FL;
        int32_t l_219 = 0x43D9E7DEL;
        int32_t l_220 = 0x6EABF225L;
        int32_t l_224 = 0x35B27B66L;
        int32_t l_225 = 0x6A0178CAL;
        int32_t l_226 = 0x330CC056L;
        int32_t l_228 = 0x734AD228L;
        uint8_t *l_301[9][4][7] = {{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}},{{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65},{(void*)0,&p_876->g_81[3][7],&p_876->g_81[5][1],&l_65,&l_65,&p_876->g_81[5][1],&l_65}}};
        uint16_t l_348[10] = {6UL,6UL,6UL,6UL,6UL,6UL,6UL,6UL,6UL,6UL};
        int32_t **l_375 = &l_87[6];
        VECTOR(int8_t, 4) l_392 = (VECTOR(int8_t, 4))(0x69L, (VECTOR(int8_t, 2))(0x69L, 0x65L), 0x65L);
        VECTOR(int32_t, 2) l_404 = (VECTOR(int32_t, 2))(0x35909CF4L, 0x60A36105L);
        uint16_t l_411 = 0x34E9L;
        int i, j, k;
        for (p_53 = 3; (p_53 > 23); p_53 = safe_add_func_int32_t_s_s(p_53, 5))
        { /* block id: 60 */
            uint8_t l_182 = 0x12L;
            if (p_52)
                break;
            for (p_876->g_149 = 0; (p_876->g_149 == 31); p_876->g_149++)
            { /* block id: 64 */
                uint16_t l_183 = 0UL;
                int32_t l_184 = (-1L);
                for (p_876->g_151 = 0; (p_876->g_151 <= 20); p_876->g_151 = safe_add_func_uint32_t_u_u(p_876->g_151, 6))
                { /* block id: 67 */
                    uint8_t l_181[9][2][9] = {{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}},{{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL},{0xF6L,9UL,0xFAL,0x3AL,0xD3L,2UL,0UL,0xFAL,255UL}}};
                    int i, j, k;
                    (*p_876->g_180) = l_87[3];
                    l_182 = ((*p_876->g_134) ^= (l_181[8][1][0] >= p_876->g_149));
                    if (p_53)
                        break;
                    if (l_183)
                        break;
                }
                l_184 = l_182;
                if ((atomic_inc(&p_876->l_atomic_input[45]) == 9))
                { /* block id: 76 */
                    int32_t l_185 = 6L;
                    if (l_185)
                    { /* block id: 77 */
                        uint64_t l_186 = 18446744073709551609UL;
                        uint8_t l_187 = 0x8AL;
                        VECTOR(int32_t, 8) l_188 = (VECTOR(int32_t, 8))((-1L), (VECTOR(int32_t, 4))((-1L), (VECTOR(int32_t, 2))((-1L), 0L), 0L), 0L, (-1L), 0L);
                        int64_t l_189 = 0L;
                        int32_t *l_190[8][7] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
                        int32_t *l_191 = (void*)0;
                        uint64_t l_192 = 18446744073709551612UL;
                        int8_t l_193 = 0x4EL;
                        int i, j;
                        l_189 = (((l_186 , l_187) , FAKE_DIVERGE(p_876->group_2_offset, get_group_id(2), 10)) , ((VECTOR(int32_t, 16))(l_188.s2044256765047610)).s9);
                        l_191 = l_190[1][1];
                        l_192 = (-4L);
                        l_193 = 0x1F7912FAL;
                    }
                    else
                    { /* block id: 82 */
                        int32_t l_194 = 9L;
                        int16_t l_195 = 0L;
                        VECTOR(uint16_t, 16) l_196 = (VECTOR(uint16_t, 16))(65535UL, (VECTOR(uint16_t, 4))(65535UL, (VECTOR(uint16_t, 2))(65535UL, 9UL), 9UL), 9UL, 65535UL, 9UL, (VECTOR(uint16_t, 2))(65535UL, 9UL), (VECTOR(uint16_t, 2))(65535UL, 9UL), 65535UL, 9UL, 65535UL, 9UL);
                        int i;
                        l_194 ^= 0x426045AEL;
                        l_196.sa = l_195;
                    }
                    unsigned int result = 0;
                    result += l_185;
                    atomic_add(&p_876->l_special_values[45], result);
                }
                else
                { /* block id: 86 */
                    (1 + 1);
                }
            }
        }
        l_200++;
        for (l_198 = (-5); (l_198 > 9); ++l_198)
        { /* block id: 94 */
            int8_t l_205[6] = {0x14L,(-7L),0x14L,0x14L,(-7L),0x14L};
            int32_t l_206 = 0x3A29A52EL;
            int32_t l_208 = 1L;
            int32_t l_211 = 6L;
            int32_t l_214 = (-6L);
            int32_t l_216 = 7L;
            int32_t l_221 = (-10L);
            int32_t l_222 = (-1L);
            int32_t l_223 = 1L;
            int32_t l_227 = 0L;
            uint8_t l_229 = 246UL;
            int32_t **l_247 = &l_246;
            VECTOR(int8_t, 8) l_251 = (VECTOR(int8_t, 8))((-6L), (VECTOR(int8_t, 4))((-6L), (VECTOR(int8_t, 2))((-6L), 0L), 0L), 0L, (-6L), 0L);
            int16_t *l_254 = (void*)0;
            int16_t *l_255 = &l_209[1][2];
            int16_t *l_256 = (void*)0;
            int16_t *l_257 = (void*)0;
            int16_t *l_258 = (void*)0;
            int16_t *l_259 = (void*)0;
            int16_t *l_260 = (void*)0;
            int16_t *l_261 = (void*)0;
            int16_t *l_262 = (void*)0;
            int16_t *l_263[6] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
            int i;
            ++l_229;
            l_207 &= (safe_mul_func_int16_t_s_s((p_876->g_245.s4 = (safe_unary_minus_func_int8_t_s((p_53 <= (safe_rshift_func_int16_t_s_u((safe_mul_func_uint16_t_u_u(FAKE_DIVERGE(p_876->group_2_offset, get_group_id(2), 10), ((safe_sub_func_uint32_t_u_u(4294967290UL, (safe_div_func_int8_t_s_s(l_227, l_229)))) == (((safe_add_func_int16_t_s_s((p_876->g_74.s5 , ((l_217 = (l_220 = (l_147 != ((*l_247) = (((VECTOR(int16_t, 4))(p_876->g_245.s3020)).w , l_246))))) , (((0L == ((*l_255) = (safe_sub_func_int8_t_s_s(((VECTOR(int8_t, 8))(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 4))(p_876->g_250.yywz)).even)))), 0x26L, ((VECTOR(int8_t, 2))(((VECTOR(int8_t, 4))(mad_sat(((VECTOR(int8_t, 16))(safe_clamp_func(VECTOR(int8_t, 16),VECTOR(int8_t, 16),((VECTOR(int8_t, 8))(((VECTOR(int8_t, 2))(l_251.s15)), 0L, (safe_div_func_uint8_t_u_u((**l_247), (*p_876->g_119))), 0x3BL, ((VECTOR(int8_t, 2))(1L)), 0L)).s3147603101250501, ((VECTOR(int8_t, 16))(0x7AL)), ((VECTOR(int8_t, 16))((-10L)))))).s1b10, ((VECTOR(int8_t, 4))((-1L))), ((VECTOR(int8_t, 4))(0x5EL))))).even)), p_876->g_164.s1, 0L, (-1L))).s0, 253UL)))) ^ (**l_247)) , (**l_247)))), FAKE_DIVERGE(p_876->global_0_offset, get_global_id(0), 10))) != p_876->g_88[3][1][6]) > 0xC443L)))), (*p_876->g_150))))))), l_199));
        }
        if ((((VECTOR(uint32_t, 4))(p_876->g_264.s1859)).z , (p_876->g_245.s6 , ((((7UL & ((VECTOR(int64_t, 8))(min(((VECTOR(int64_t, 4))(((VECTOR(int64_t, 16))(p_876->g_265.sf7de8538cd7117a2)).s1134)).zyxxwxxx, ((VECTOR(int64_t, 2))(p_876->g_266.s52)).xyxyxyyx))).s4) || (safe_mul_func_int8_t_s_s(6L, (safe_lshift_func_int8_t_s_u(p_876->g_74.s7, 6))))) , (void*)0) != (l_271 = l_271)))))
        { /* block id: 104 */
            uint8_t l_284 = 0x55L;
            int32_t *l_320 = &l_198;
            uint16_t **l_333[8] = {(void*)0,&l_146,(void*)0,(void*)0,&l_146,(void*)0,(void*)0,&l_146};
            int32_t l_342 = (-3L);
            int i;
            for (l_226 = 12; (l_226 <= 6); l_226 = safe_sub_func_int16_t_s_s(l_226, 2))
            { /* block id: 107 */
                int64_t l_282 = 0x45BC5F2CB79E7B17L;
                int32_t l_283 = (-1L);
                for (l_217 = 0; (l_217 != (-19)); l_217 = safe_sub_func_int16_t_s_s(l_217, 1))
                { /* block id: 110 */
                    int32_t **l_281[3];
                    int i;
                    for (i = 0; i < 3; i++)
                        l_281[i] = &l_87[7];
                    for (p_876->g_151 = 0; (p_876->g_151 > 11); ++p_876->g_151)
                    { /* block id: 113 */
                        int32_t **l_278 = &l_87[4];
                        (*l_278) = &l_212;
                        return p_53;
                    }
                    atomic_sub(&p_876->l_atomic_reduction[0], ((VECTOR(int32_t, 4))(((VECTOR(int32_t, 8))(p_876->g_279.yyyyyxyy)).lo)).w);
                    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
                    if (get_linear_local_id() == 0)
                        p_876->v_collective += p_876->l_atomic_reduction[0];
                    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
                    (*p_876->g_180) = &p_876->g_88[2][0][1];
                    l_284++;
                }
            }
            for (l_217 = 0; (l_217 > 12); l_217 = safe_add_func_int8_t_s_s(l_217, 9))
            { /* block id: 124 */
                uint8_t *l_302 = (void*)0;
                int8_t *l_313 = &p_876->g_43;
                int32_t l_314 = 7L;
                uint32_t l_336 = 7UL;
                (*l_246) = ((safe_sub_func_int8_t_s_s((safe_add_func_uint64_t_u_u((safe_lshift_func_int16_t_s_u(((safe_add_func_uint16_t_u_u((~(safe_rshift_func_uint16_t_u_u(((safe_rshift_func_uint8_t_u_u(l_213, 2)) <= ((l_301[2][2][0] != ((p_54 >= l_225) , l_302)) || (safe_rshift_func_int16_t_s_s((safe_div_func_int32_t_s_s((safe_div_func_uint16_t_u_u((((*l_313) = (p_52 && (1UL < (safe_sub_func_uint16_t_u_u(((*l_146) ^= (1L > ((VECTOR(int16_t, 2))((-7L), 0x4EF9L)).hi)), l_207))))) ^ (*p_876->g_119)), 1UL)), (-1L))), 7)))), p_54))), 0UL)) || 0x68A2D6B44EB88B96L), l_314)), p_876->g_88[4][1][3])), 0L)) != (*l_246));
                for (l_207 = (-14); (l_207 > 7); l_207 = safe_add_func_int16_t_s_s(l_207, 1))
                { /* block id: 130 */
                    int32_t *l_319 = &l_220;
                    int32_t l_329 = 0L;
                    int32_t *l_337 = &p_876->g_88[1][1][5];
                    int32_t l_341 = 0x3ACE5067L;
                    int32_t l_344 = 0L;
                    uint32_t l_345[8] = {0UL,1UL,0UL,0UL,1UL,0UL,0UL,1UL};
                    int i;
                    for (p_876->g_149 = 0; (p_876->g_149 < 37); ++p_876->g_149)
                    { /* block id: 133 */
                        uint16_t ***l_332 = &l_145;
                        int32_t **l_338 = &l_87[4];
                        l_320 = l_319;
                        l_336 |= ((*p_876->g_150) == (safe_mod_func_int64_t_s_s((~p_54), (safe_mod_func_int16_t_s_s((safe_rshift_func_int16_t_s_s(((((safe_lshift_func_uint8_t_u_s(((*l_86) = l_329), p_54)) && (l_314 && GROUP_DIVERGE(1, 1))) , (((((*l_313) = (safe_sub_func_uint64_t_u_u(((((*l_332) = &p_876->g_150) != (l_333[6] = l_333[6])) , (safe_rshift_func_int16_t_s_u(((void*)0 != &p_876->g_151), l_314))), p_54))) <= (-7L)) != p_52) , p_876->g_266.s3)) < l_207), p_876->g_88[3][1][6])), p_54)))));
                        (*l_338) = l_337;
                        return p_54;
                    }
                    for (l_65 = (-21); (l_65 >= 5); l_65 = safe_add_func_uint32_t_u_u(l_65, 6))
                    { /* block id: 145 */
                        int8_t l_343[6][9][4] = {{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}},{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}},{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}},{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}},{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}},{{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L},{0x1BL,0x61L,6L,0L}}};
                        int i, j, k;
                        --l_345[4];
                    }
                    if (p_52)
                        break;
                }
                l_348[2]--;
            }
            return p_876->g_245.s7;
        }
        else
        { /* block id: 153 */
            uint16_t l_355 = 0x2ECEL;
            uint8_t **l_361 = &p_876->g_80;
            int16_t *l_362 = &l_209[0][0];
            uint32_t l_376[3][3][2] = {{{4294967288UL,4294967288UL},{4294967288UL,4294967288UL},{4294967288UL,4294967288UL}},{{4294967288UL,4294967288UL},{4294967288UL,4294967288UL},{4294967288UL,4294967288UL}},{{4294967288UL,4294967288UL},{4294967288UL,4294967288UL},{4294967288UL,4294967288UL}}};
            int16_t l_388 = 0L;
            int8_t *l_395 = &p_876->g_43;
            int32_t l_396 = 1L;
            VECTOR(int32_t, 4) l_408 = (VECTOR(int32_t, 4))(0L, (VECTOR(int32_t, 2))(0L, 0x5898E8FEL), 0x5898E8FEL);
            int32_t **l_419 = (void*)0;
            int i, j, k;
            p_876->g_363 &= (((safe_add_func_uint8_t_u_u(((void*)0 != p_876->g_66), (safe_rshift_func_int8_t_s_s((((VECTOR(uint16_t, 16))((l_355 | p_876->g_245.s6), ((VECTOR(uint16_t, 8))(p_876->g_356.sbf13f1c3)), FAKE_DIVERGE(p_876->global_2_offset, get_global_id(2), 10), ((VECTOR(uint16_t, 2))(6UL, 65533UL)), (&p_876->g_161 != (void*)0), 4UL, 65532UL, 65528UL)).s9 < ((*l_362) ^= (safe_mod_func_uint32_t_u_u(((safe_rshift_func_uint8_t_u_u(l_348[2], ((**l_361) ^= (l_361 == (void*)0)))) , 0x7E986DF1L), l_348[2])))), p_52)))) ^ l_355) >= (*l_246));
            (*l_246) = (((safe_mul_func_int16_t_s_s((((FAKE_DIVERGE(p_876->global_2_offset, get_global_id(2), 10) < (safe_mul_func_int8_t_s_s(((safe_add_func_uint8_t_u_u((safe_unary_minus_func_uint32_t_u((p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))] , (safe_mul_func_uint16_t_u_u(((((void*)0 != l_361) >= (l_213 != 65535UL)) >= p_53), (((**l_361) ^= (p_52 == ((p_876->g_279.y == (l_375 == (void*)0)) > p_53))) & l_376[1][2][1])))))), 0x6EL)) && 0x7A6E155AFDD2CEE6L), (-1L)))) , (void*)0) == p_876->g_377), l_376[1][2][1])) , p_52) != (*p_876->g_150));
            l_396 &= (((VECTOR(int8_t, 16))(((VECTOR(int8_t, 2))(max(((VECTOR(int8_t, 4))(sub_sat(((VECTOR(int8_t, 8))(p_53, ((*l_395) = (safe_mul_func_uint8_t_u_u((safe_lshift_func_int8_t_s_s((((**l_375) = (((safe_sub_func_int16_t_s_s((safe_mul_func_int32_t_s_s(l_388, ((void*)0 == l_375))), (((**l_145) = ((safe_mul_func_uint16_t_u_u(p_53, (~p_53))) && (safe_unary_minus_func_uint16_t_u((((VECTOR(int8_t, 4))(l_392.wyyx)).x || ((((p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))] < 0x3FF95D8A33C1A346L) <= (safe_mul_func_int8_t_s_s(((((p_53 , p_876->g_74.s0) | (-1L)) > 0x6654BD8CL) > p_54), p_54))) <= p_876->g_164.s0) && p_876->g_74.s4)))))) != 0x7763L))) <= l_376[1][2][1]) , 0x124D897EL)) | (-1L)), p_54)), 0x20L))), ((VECTOR(int8_t, 4))((-2L))), 0x76L, 0x62L)).hi, ((VECTOR(int8_t, 4))(0x2BL))))).even, ((VECTOR(int8_t, 2))(7L))))).yyxxxyxyyxyyyxxy)).sd && p_876->g_81[5][7]);
            for (l_218 = 0; (l_218 >= (-8)); l_218 = safe_sub_func_int32_t_s_s(l_218, 3))
            { /* block id: 165 */
                uint32_t *l_416[10][8] = {{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161},{&p_876->g_161,&p_876->g_161,(void*)0,&p_876->g_149,&p_876->g_149,&p_876->g_149,(void*)0,&p_876->g_161}};
                int32_t l_420 = 5L;
                int i, j;
                for (p_876->g_43 = 0; (p_876->g_43 <= 6); p_876->g_43++)
                { /* block id: 168 */
                    VECTOR(int32_t, 16) l_402 = (VECTOR(int32_t, 16))(1L, (VECTOR(int32_t, 4))(1L, (VECTOR(int32_t, 2))(1L, 0x775516BEL), 0x775516BEL), 0x775516BEL, 1L, 0x775516BEL, (VECTOR(int32_t, 2))(1L, 0x775516BEL), (VECTOR(int32_t, 2))(1L, 0x775516BEL), 1L, 0x775516BEL, 1L, 0x775516BEL);
                    int32_t *l_412 = (void*)0;
                    int32_t *l_413 = (void*)0;
                    int32_t *l_414 = (void*)0;
                    int32_t *l_415 = (void*)0;
                    int32_t l_436[1][7] = {{(-7L),(-7L),(-7L),(-7L),(-7L),(-7L),(-7L)}};
                    int i, j;
                    if ((((VECTOR(int64_t, 8))(sub_sat(((VECTOR(int64_t, 8))(((VECTOR(int64_t, 2))(p_876->g_401.s43)), ((VECTOR(int64_t, 2))(upsample(((VECTOR(int32_t, 4))(min(((VECTOR(int32_t, 8))(l_402.s7bd58151)).lo, ((VECTOR(int32_t, 8))(0L, 0x367D935BL, p_54, (-1L), ((VECTOR(int32_t, 4))(mad_sat(((VECTOR(int32_t, 2))(min(((VECTOR(int32_t, 2))(hadd(((VECTOR(int32_t, 16))(add_sat(((VECTOR(int32_t, 2))(((VECTOR(int32_t, 8))(add_sat(((VECTOR(int32_t, 2))(mad_sat(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 2))(max(((VECTOR(int32_t, 16))(rhadd(((VECTOR(int32_t, 16))(1L, ((VECTOR(int32_t, 8))(((VECTOR(int32_t, 2))(p_876->g_403.zy)).xxxyxyyx)).s7, p_876->g_279.y, ((VECTOR(int32_t, 2))(l_404.yx)), (l_408.x = (safe_sub_func_int32_t_s_s(((VECTOR(int32_t, 4))(min(((VECTOR(int32_t, 4))(rhadd(((VECTOR(int32_t, 4))(((VECTOR(int32_t, 2))(hadd(((VECTOR(int32_t, 8))(0x47D3644FL, ((VECTOR(int32_t, 4))(safe_mad24_func_int32_t_s_s_s(VECTOR(int32_t, 4),((VECTOR(int32_t, 8))(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 4))(safe_mad_hi_func_int32_t_s_s_s(VECTOR(int32_t, 4),((VECTOR(int32_t, 8))(l_407.wyzxwwyx)).odd, ((VECTOR(int32_t, 4))(l_408.wzxz)), ((VECTOR(int32_t, 8))(rotate(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 8))(((VECTOR(int32_t, 4))(mad_sat(((VECTOR(int32_t, 2))(mad_sat(((VECTOR(int32_t, 8))(0x3AA609C2L, (l_147 != ((*l_375) = (*l_375))), ((VECTOR(int32_t, 4))((safe_rshift_func_int16_t_s_s((((((*l_146) = l_411) >= 1UL) != (&l_355 == (p_876->g_150 = &p_54))) != ((p_52 | p_876->g_401.s7) & p_54)), 14)), (-10L), 0x00BEF9DEL, 0L)), 0x520D3F60L, 1L)).s77, ((VECTOR(int32_t, 2))(0L)), ((VECTOR(int32_t, 2))(5L))))).yxyy, ((VECTOR(int32_t, 4))(0x67C98DB7L)), ((VECTOR(int32_t, 4))(6L))))).zxzxyxyy)))))), ((VECTOR(int32_t, 8))((-1L)))))).even))).zxxzyyxyxzzxwwwz)).lo)).lo, ((VECTOR(int32_t, 4))((-2L))), ((VECTOR(int32_t, 4))((-5L)))))), 1L, (-7L), 0x059E8808L)).s50, ((VECTOR(int32_t, 2))(0x70BACA92L))))), 0x1AD1E788L, 0L)), ((VECTOR(int32_t, 4))((-1L)))))), (int32_t)(*l_246)))).y, p_52))), ((VECTOR(int32_t, 8))(0L)), 0x2E51C0ADL, 0L)), ((VECTOR(int32_t, 16))(0x6AD36302L))))).sc9, (int32_t)0x5DF598A1L))).xxyyxyyxyyyxxyyy)).s81, ((VECTOR(int32_t, 2))((-4L))), ((VECTOR(int32_t, 2))((-9L)))))).yxyxxyyy, ((VECTOR(int32_t, 8))(0L))))).s34)).xxyyxyyxyyxyxyyy, ((VECTOR(int32_t, 16))(0L))))).sfa, ((VECTOR(int32_t, 2))(0x41DFE7E1L))))), (int32_t)p_876->g_43))).xyyx, ((VECTOR(int32_t, 4))(0x54345E8CL)), ((VECTOR(int32_t, 4))(0x21BEA8E3L))))))).even))).odd, ((VECTOR(uint32_t, 2))(0xB100A9FBL))))), ((VECTOR(int64_t, 4))(0x4FE453BFCFD2FA0CL)))), ((VECTOR(int64_t, 8))(0x1BE1B7A08D616DDCL))))).s7 >= GROUP_DIVERGE(1, 1)))
                    { /* block id: 173 */
                        return p_876->g_110.y;
                    }
                    else
                    { /* block id: 175 */
                        (**l_375) &= (l_412 != l_416[9][0]);
                    }
                    l_408.w = (l_436[0][2] = ((*l_246) = ((safe_sub_func_int16_t_s_s((l_419 == &p_876->g_129), l_420)) && ((VECTOR(uint16_t, 4))(((VECTOR(uint16_t, 2))(safe_clamp_func(VECTOR(uint16_t, 2),uint16_t,((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 2))(upsample(((VECTOR(uint8_t, 4))(p_876->g_421.wzxx)).lo, ((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(0UL, 2UL)), 0x81L, 0xD3L)).hi))))))))), (uint16_t)(safe_lshift_func_int8_t_s_u((-1L), ((safe_div_func_int16_t_s_s(((safe_add_func_int32_t_s_s((p_53 & (safe_sub_func_uint64_t_u_u((((void*)0 == &l_87[4]) & p_52), (safe_rshift_func_uint8_t_u_s((+(safe_div_func_uint16_t_u_u((safe_add_func_int16_t_s_s((p_876->g_421.y <= (-9L)), p_52)), p_876->g_56.s2))), 1))))), p_53)) != p_876->g_56.s6), FAKE_DIVERGE(p_876->local_0_offset, get_local_id(0), 10))) , p_54))), (uint16_t)0x8CCAL))).yxxy)).w)));
                }
            }
        }
    }
    else
    { /* block id: 184 */
        int8_t l_437 = (-8L);
        int32_t l_438 = 0x61A35C79L;
        int32_t l_439 = 5L;
        int32_t l_440 = (-1L);
        int32_t l_441 = 0x0AC4773DL;
        uint64_t l_442[3][10] = {{0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L},{0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L},{0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L,0xD10FB34797DD7684L,0UL,0UL,0xD10FB34797DD7684L}};
        VECTOR(uint64_t, 8) l_445 = (VECTOR(uint64_t, 8))(1UL, (VECTOR(uint64_t, 4))(1UL, (VECTOR(uint64_t, 2))(1UL, 0UL), 0UL), 0UL, 1UL, 0UL);
        VECTOR(int64_t, 16) l_446 = (VECTOR(int64_t, 16))(0L, (VECTOR(int64_t, 4))(0L, (VECTOR(int64_t, 2))(0L, (-10L)), (-10L)), (-10L), 0L, (-10L), (VECTOR(int64_t, 2))(0L, (-10L)), (VECTOR(int64_t, 2))(0L, (-10L)), 0L, (-10L), 0L, (-10L));
        VECTOR(uint64_t, 8) l_447 = (VECTOR(uint64_t, 8))(1UL, (VECTOR(uint64_t, 4))(1UL, (VECTOR(uint64_t, 2))(1UL, 1UL), 1UL), 1UL, 1UL, 1UL);
        int32_t *l_450[7];
        uint8_t **l_466 = &p_876->g_119;
        VECTOR(int32_t, 8) l_526 = (VECTOR(int32_t, 8))(0x64B43ABAL, (VECTOR(int32_t, 4))(0x64B43ABAL, (VECTOR(int32_t, 2))(0x64B43ABAL, (-1L)), (-1L)), (-1L), 0x64B43ABAL, (-1L));
        uint32_t l_565 = 0UL;
        VECTOR(int8_t, 4) l_570 = (VECTOR(int8_t, 4))(1L, (VECTOR(int8_t, 2))(1L, 0L), 0L);
        VECTOR(uint8_t, 4) l_577 = (VECTOR(uint8_t, 4))(0x99L, (VECTOR(uint8_t, 2))(0x99L, 0xD3L), 0xD3L);
        int64_t l_583[7][5][5] = {{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}},{{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL},{0x47AE4A7000C27812L,(-1L),0x7CA9BA9992804B8DL,0x56C96DC3A5EB5CACL,0x4443D68CE567A73BL}}};
        VECTOR(uint8_t, 4) l_586 = (VECTOR(uint8_t, 4))(3UL, (VECTOR(uint8_t, 2))(3UL, 0xE7L), 0xE7L);
        VECTOR(uint64_t, 8) l_590 = (VECTOR(uint64_t, 8))(18446744073709551615UL, (VECTOR(uint64_t, 4))(18446744073709551615UL, (VECTOR(uint64_t, 2))(18446744073709551615UL, 18446744073709551615UL), 18446744073709551615UL), 18446744073709551615UL, 18446744073709551615UL, 18446744073709551615UL);
        int16_t *l_597 = &l_209[1][0];
        int16_t l_658[2][3];
        VECTOR(uint32_t, 8) l_668 = (VECTOR(uint32_t, 8))(0x786CEA1EL, (VECTOR(uint32_t, 4))(0x786CEA1EL, (VECTOR(uint32_t, 2))(0x786CEA1EL, 3UL), 3UL), 3UL, 0x786CEA1EL, 3UL);
        VECTOR(uint8_t, 16) l_696 = (VECTOR(uint8_t, 16))(1UL, (VECTOR(uint8_t, 4))(1UL, (VECTOR(uint8_t, 2))(1UL, 0x4EL), 0x4EL), 0x4EL, 1UL, 0x4EL, (VECTOR(uint8_t, 2))(1UL, 0x4EL), (VECTOR(uint8_t, 2))(1UL, 0x4EL), 1UL, 0x4EL, 1UL, 0x4EL);
        int i, j, k;
        for (i = 0; i < 7; i++)
            l_450[i] = &p_876->g_88[3][1][6];
        for (i = 0; i < 2; i++)
        {
            for (j = 0; j < 3; j++)
                l_658[i][j] = (-9L);
        }
        l_442[0][8]++;
        if ((((VECTOR(uint64_t, 2))(((VECTOR(uint64_t, 4))(rhadd(((VECTOR(uint64_t, 4))(l_445.s3442)), ((VECTOR(uint64_t, 4))(abs(((VECTOR(int64_t, 2))(l_446.sb3)).yxxx)))))).even)).even || ((VECTOR(uint64_t, 16))(((VECTOR(uint64_t, 2))(((VECTOR(uint64_t, 4))(l_447.s7444)).lo)).xxxxyxyyyxxyxyyy)).s1))
        { /* block id: 186 */
            int32_t *l_448 = &l_438;
            int32_t **l_449[5] = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0};
            int i;
            l_450[3] = l_448;
            ++l_451[2];
        }
        else
        { /* block id: 189 */
            uint32_t l_488 = 4294967294UL;
            int32_t **l_510 = &l_246;
            int32_t l_513 = 0x278111CCL;
            uint32_t l_519 = 0x0BD67B30L;
            VECTOR(uint8_t, 16) l_531 = (VECTOR(uint8_t, 16))(0UL, (VECTOR(uint8_t, 4))(0UL, (VECTOR(uint8_t, 2))(0UL, 0x38L), 0x38L), 0x38L, 0UL, 0x38L, (VECTOR(uint8_t, 2))(0UL, 0x38L), (VECTOR(uint8_t, 2))(0UL, 0x38L), 0UL, 0x38L, 0UL, 0x38L);
            int16_t *l_557 = (void*)0;
            int16_t *l_558 = &l_209[1][0];
            int16_t *l_559 = (void*)0;
            int16_t *l_560 = (void*)0;
            int16_t *l_561 = (void*)0;
            int16_t *l_562 = (void*)0;
            int16_t *l_563 = (void*)0;
            int16_t *l_564[4][8] = {{(void*)0,(void*)0,(void*)0,&p_876->g_363,(void*)0,&p_876->g_363,(void*)0,&l_556},{(void*)0,(void*)0,(void*)0,&p_876->g_363,(void*)0,&p_876->g_363,(void*)0,&l_556},{(void*)0,(void*)0,(void*)0,&p_876->g_363,(void*)0,&p_876->g_363,(void*)0,&l_556},{(void*)0,(void*)0,(void*)0,&p_876->g_363,(void*)0,&p_876->g_363,(void*)0,&l_556}};
            VECTOR(int8_t, 16) l_571 = (VECTOR(int8_t, 16))(1L, (VECTOR(int8_t, 4))(1L, (VECTOR(int8_t, 2))(1L, 0x52L), 0x52L), 0x52L, 1L, 0x52L, (VECTOR(int8_t, 2))(1L, 0x52L), (VECTOR(int8_t, 2))(1L, 0x52L), 1L, 0x52L, 1L, 0x52L);
            int i, j;
            for (l_65 = 0; (l_65 > 31); l_65++)
            { /* block id: 192 */
                uint8_t *l_479 = &p_876->g_81[5][1];
                int32_t l_481[6][7] = {{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)},{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)},{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)},{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)},{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)},{0x34AD6359L,5L,(-1L),0x30FB3D91L,5L,0x30FB3D91L,(-1L)}};
                int32_t **l_491 = &l_450[3];
                int i, j;
                for (l_437 = 21; (l_437 == 27); l_437 = safe_add_func_int8_t_s_s(l_437, 1))
                { /* block id: 195 */
                    uint8_t ***l_465 = &l_82;
                    VECTOR(uint32_t, 8) l_470 = (VECTOR(uint32_t, 8))(0x3BCF01B0L, (VECTOR(uint32_t, 4))(0x3BCF01B0L, (VECTOR(uint32_t, 2))(0x3BCF01B0L, 4294967295UL), 4294967295UL), 4294967295UL, 0x3BCF01B0L, 4294967295UL);
                    uint64_t *l_480 = &l_442[0][8];
                    int32_t **l_493 = &l_87[4];
                    int32_t ***l_492 = &l_493;
                    int16_t l_498 = 4L;
                    int64_t l_512 = (-5L);
                    int i;
                    if (((safe_sub_func_uint8_t_u_u(p_54, ((**l_85) = (((0x5DL < ((p_876->g_161 = p_54) != (safe_mul_func_uint16_t_u_u(FAKE_DIVERGE(p_876->global_2_offset, get_global_id(2), 10), ((VECTOR(int16_t, 8))(p_876->g_462.ywxxzzww)).s1)))) < 0x83600FDCE5B5985EL) > (safe_add_func_uint16_t_u_u((((*l_465) = &p_876->g_80) != l_466), (safe_add_func_int32_t_s_s((&p_876->g_149 == l_469), ((VECTOR(uint32_t, 16))(l_470.s4265740525414443)).s0)))))))) , (safe_mul_func_int8_t_s_s((safe_sub_func_uint64_t_u_u(((*l_480) ^= (safe_mod_func_uint64_t_u_u(((safe_lshift_func_uint16_t_u_s((((void*)0 == l_479) , (*p_876->g_66)), 10)) , 18446744073709551607UL), p_876->g_164.s5))), l_481[0][4])), p_54))))
                    { /* block id: 200 */
                        if (p_54)
                            break;
                        if (p_54)
                            break;
                        if (p_54)
                            continue;
                        (*l_246) = ((VECTOR(int32_t, 4))(((VECTOR(int32_t, 16))(((VECTOR(int32_t, 4))(((&p_876->g_134 != (GROUP_DIVERGE(0, 1) , &p_876->g_129)) > (*l_246)), 1L, 0L, 0x2ECD31ADL)).xyxxzzxzyxzxzzzz)).sa262)).z;
                    }
                    else
                    { /* block id: 205 */
                        int i, j;
                        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
                        p_876->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 196)), permutations[(safe_mod_func_uint32_t_u_u(p_54, 10))][(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]));
                        (*l_246) |= p_54;
                    }
                    if ((p_52 > (&l_82 != ((safe_add_func_uint32_t_u_u((safe_mod_func_int64_t_s_s((l_488 | (((~1L) ^ (safe_mod_func_int32_t_s_s((((l_491 != ((*l_492) = &p_876->g_134)) , ((((~(((safe_sub_func_uint8_t_u_u((((safe_add_func_int32_t_s_s((2L == p_876->g_164.s1), GROUP_DIVERGE(0, 1))) == ((*p_876->g_119) && l_498)) && 0L), 0UL)) > FAKE_DIVERGE(p_876->group_1_offset, get_group_id(1), 10)) | p_52)) , p_53) , p_52) >= p_876->g_245.s5)) < (**l_491)), 4294967292UL))) == 2UL)), 0x65AB36E5E0293E84L)), 0x53BC19BBL)) , &l_466))))
                    { /* block id: 212 */
                        return p_876->g_149;
                    }
                    else
                    { /* block id: 214 */
                        uint8_t *l_509[2];
                        int32_t l_511 = 0x57BD93ACL;
                        int i;
                        for (i = 0; i < 2; i++)
                            l_509[i] = (void*)0;
                        l_513 &= ((safe_add_func_uint8_t_u_u(((safe_sub_func_uint32_t_u_u(((safe_lshift_func_uint8_t_u_u(((4294967289UL >= 1L) || p_52), ((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(mad_hi(((VECTOR(uint8_t, 16))((l_488 | ((!p_52) || (safe_sub_func_int16_t_s_s((!((safe_div_func_uint32_t_u_u(((((*l_466) = l_479) == l_509[1]) || ((p_52 , (l_510 == &p_876->g_129)) , 0xB86DCC79L)), l_511)) < 1L)), p_53)))), l_511, 0x63L, ((VECTOR(uint8_t, 8))(255UL)), (*p_876->g_119), p_54, (*p_876->g_119), 0x01L, 248UL)).s5b, ((VECTOR(uint8_t, 2))(246UL)), ((VECTOR(uint8_t, 2))(0x89L))))), 0xEDL, 4UL)))).x)) > l_512), p_876->g_403.w)) | p_876->g_56.s2), (**l_510))) , 1L);
                        if ((**l_491))
                            continue;
                        (*l_491) = &l_438;
                        return p_876->g_279.x;
                    }
                }
                for (p_876->g_149 = 15; (p_876->g_149 == 45); ++p_876->g_149)
                { /* block id: 224 */
                    int8_t l_518 = 0x18L;
                    if (p_54)
                        break;
                    for (l_438 = 18; (l_438 <= (-13)); --l_438)
                    { /* block id: 228 */
                        if (l_518)
                            break;
                        if (p_54)
                            break;
                        return p_54;
                    }
                }
                l_519 = ((**l_491) = (**l_510));
                return p_52;
            }
            (**l_510) = (safe_sub_func_int32_t_s_s((safe_lshift_func_uint16_t_u_u((((safe_div_func_int64_t_s_s(((((l_526.s1 < (**l_510)) > ((safe_lshift_func_uint8_t_u_s(((**l_85)++), (((VECTOR(uint8_t, 4))(l_531.se63b)).w < ((safe_sub_func_uint8_t_u_u((p_53 >= ((safe_mod_func_uint8_t_u_u((safe_rshift_func_int16_t_s_s(((VECTOR(int16_t, 2))(0x08E9L, (-7L))).lo, (safe_div_func_int16_t_s_s((safe_sub_func_uint64_t_u_u((safe_lshift_func_uint8_t_u_s(p_54, 3)), (+((p_876->g_245.s6 &= ((*l_558) &= ((safe_mod_func_uint8_t_u_u((safe_sub_func_uint8_t_u_u((safe_mul_func_int8_t_s_s(p_876->g_421.x, ((((!((safe_mul_func_uint8_t_u_u((((p_876->g_88[4][1][0] <= (safe_div_func_uint16_t_u_u((((safe_sub_func_uint8_t_u_u(((((VECTOR(uint32_t, 2))(0x92BADA63L, 0x4450B807L)).lo , &p_876->g_129) == &p_876->g_134), (((-1L) != 8L) == p_52))) & p_52) == p_52), p_876->g_161))) , p_876->g_363) , FAKE_DIVERGE(p_876->local_1_offset, get_local_id(1), 10)), l_556)) ^ p_52)) & p_876->g_comm_values[p_876->tid]) <= (**l_510)) == 4294967292UL))), 1UL)), 0x0DL)) ^ 1UL))) | GROUP_DIVERGE(2, 1))))), (**l_510))))), l_565)) , p_876->g_149)), p_54)) && (**l_510))))) >= 0xB181L)) > (*p_876->g_150)) && (*l_246)), p_876->g_74.s4)) <= p_876->g_566) <= 0x79F4L), (*p_876->g_150))), p_876->g_356.sb));
            for (l_488 = 0; (l_488 > 12); l_488 = safe_add_func_int64_t_s_s(l_488, 2))
            { /* block id: 244 */
                (*l_246) = (safe_unary_minus_func_int8_t_s(((VECTOR(int8_t, 4))(0x5FL, ((VECTOR(int8_t, 2))(safe_clamp_func(VECTOR(int8_t, 2),VECTOR(int8_t, 2),((VECTOR(int8_t, 2))((-8L), 0x19L)), ((VECTOR(int8_t, 2))(((VECTOR(int8_t, 8))(l_570.ywywzxwy)).s05)), ((VECTOR(int8_t, 2))(l_571.s59))))), 0x62L)).x));
                l_246 = (*l_510);
            }
        }
        if ((safe_add_func_int8_t_s_s(((VECTOR(int8_t, 16))(((((p_54 & p_54) == ((((safe_add_func_uint8_t_u_u((*l_246), ((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 4))(p_876->g_576.s9129)).x, ((VECTOR(uint8_t, 4))(l_577.xwyy)), ((VECTOR(uint8_t, 4))(l_578.yxxx)), (((safe_mul_func_int16_t_s_s((((safe_sub_func_int64_t_s_s((p_876->g_164.s0 ^= (l_583[2][2][2] = p_876->g_264.sf)), (safe_mul_func_uint8_t_u_u(((VECTOR(uint8_t, 4))(l_586.yxyz)).y, ((safe_add_func_int16_t_s_s(0x3FD0L, (*p_876->g_150))) > ((6UL ^ (GROUP_DIVERGE(1, 1) || ((VECTOR(uint16_t, 4))(p_876->g_589.s5560)).z)) , (((((((((((VECTOR(uint64_t, 8))(l_590.s37160336)).s0 > (p_876->g_462.x == (safe_mod_func_uint8_t_u_u((*p_876->g_80), l_593)))) > 1L) & p_876->g_110.x) && FAKE_DIVERGE(p_876->group_1_offset, get_group_id(1), 10)) | (*p_876->g_150)) , p_876->g_589.s4) && 0x3A06C0D53A6E7D92L) >= p_876->g_149) | (*p_876->g_80)))))))) < (*p_876->g_150)) != 0x17067C71L), p_53)) == p_876->g_56.s0) > p_876->g_161), ((VECTOR(uint8_t, 4))(0x40L)), 0UL, 0xF9L)).sa)) == p_876->g_363) && 0xD5A4L) & p_52)) < 0x315E01A74513B79EL) == FAKE_DIVERGE(p_876->local_2_offset, get_local_id(2), 10)), p_52, p_876->g_566, 0x36L, ((VECTOR(int8_t, 4))(0x70L)), ((VECTOR(int8_t, 2))(0L)), 0x64L, p_876->g_403.x, 0L, 0L, 0x16L, 0x0BL)).sc, p_52)))
        { /* block id: 251 */
            uint64_t l_594 = 5UL;
            int16_t *l_596 = &p_876->g_363;
            int16_t **l_595 = &l_596;
            int32_t *l_605 = (void*)0;
            int32_t **l_604 = &l_605;
            int64_t *l_633 = (void*)0;
            int64_t l_657 = 8L;
            l_594 = (-1L);
            if (((l_597 = ((*l_595) = &p_876->g_363)) == &l_556))
            { /* block id: 255 */
                int8_t *l_611 = &l_437;
                int32_t l_619 = 0x6D215474L;
                VECTOR(uint8_t, 16) l_625 = (VECTOR(uint8_t, 16))(0xF5L, (VECTOR(uint8_t, 4))(0xF5L, (VECTOR(uint8_t, 2))(0xF5L, 248UL), 248UL), 248UL, 0xF5L, 248UL, (VECTOR(uint8_t, 2))(0xF5L, 248UL), (VECTOR(uint8_t, 2))(0xF5L, 248UL), 0xF5L, 248UL, 0xF5L, 248UL);
                int64_t **l_632[6] = {&l_95[0][0],&l_95[0][0],&l_95[0][0],&l_95[0][0],&l_95[0][0],&l_95[0][0]};
                int32_t *l_634 = (void*)0;
                int32_t *l_635 = (void*)0;
                int32_t *l_636 = (void*)0;
                int16_t ***l_640 = (void*)0;
                int16_t ***l_641[5][1];
                int32_t **l_642 = &l_450[5];
                int i, j;
                for (i = 0; i < 5; i++)
                {
                    for (j = 0; j < 1; j++)
                        l_641[i][j] = (void*)0;
                }
                (*l_246) = (safe_lshift_func_uint16_t_u_s(((*l_146) = ((p_876->g_576.sf || (0x4EL == (safe_div_func_uint8_t_u_u((((void*)0 != p_876->g_129) <= (safe_mul_func_uint16_t_u_u(p_53, ((l_604 == (void*)0) , ((safe_mul_func_int8_t_s_s(p_876->g_576.s8, (safe_sub_func_uint32_t_u_u(((VECTOR(uint32_t, 4))(abs(((VECTOR(int32_t, 8))(l_610.s12622356)).hi))).y, (((*l_611) = 0x32L) || l_594))))) < (*p_876->g_80)))))), p_53)))) & p_876->g_356.s9)), 15));
                (*l_246) = (GROUP_DIVERGE(1, 1) == (((((((safe_sub_func_int8_t_s_s((0x0791L ^ (+(*p_876->g_150))), ((!(((safe_div_func_int8_t_s_s(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 16))(((VECTOR(int8_t, 8))(p_876->g_616.s45505064)), 4L, ((VECTOR(int8_t, 4))(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 2))(safe_clamp_func(VECTOR(int8_t, 2),VECTOR(int8_t, 2),((VECTOR(int8_t, 2))(((VECTOR(int8_t, 16))(p_876->g_617.s3052551373734026)).s79)), ((VECTOR(int8_t, 16))(l_618.yxxxwywxyzzxywyy)).sf4, ((VECTOR(int8_t, 8))(add_sat(((VECTOR(int8_t, 2))(safe_mad_hi_func_int8_t_s_s_s(VECTOR(int8_t, 2),((VECTOR(int8_t, 2))(3L, 8L)), ((VECTOR(int8_t, 16))(mad_sat(((VECTOR(int8_t, 2))(max(((VECTOR(int8_t, 4))(clz(((VECTOR(int8_t, 8))(safe_clamp_func(VECTOR(int8_t, 8),VECTOR(int8_t, 8),((VECTOR(int8_t, 16))(l_619, 1L, (safe_sub_func_uint64_t_u_u((((((p_876->g_637 = ((l_633 = (((-1L) == ((safe_div_func_int8_t_s_s((((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 16))(mad_sat(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 2))(((VECTOR(uint8_t, 16))(l_624.s7456464314031653)).s97)))).xxyyxxxyyyyyyyyy, ((VECTOR(uint8_t, 2))(8UL, 0x86L)).yyyxxyyxyyyyyxxy, ((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 2))(min(((VECTOR(uint8_t, 4))(add_sat(((VECTOR(uint8_t, 16))(l_625.s38f4ba8e21795f5b)).sf091, ((VECTOR(uint8_t, 2))(l_626.s26)).yxyy))).odd, (uint8_t)0xFAL))).xyyxxxxy)).s0601771104425663))).s5d)))).yxyyxxyxyyyyyyxy)).s3 < ((p_54 != (safe_mul_func_int16_t_s_s((l_619 & 0L), ((void*)0 != p_876->g_631)))) , (-7L))), p_52)) & p_876->g_151)) , &l_583[2][2][2])) != p_876->g_631)) , 0x97C6047D224B27ADL) , p_53) != l_625.sb) ^ (-1L)), p_876->g_245.s6)), 1L, ((VECTOR(int8_t, 4))(0x25L)), ((VECTOR(int8_t, 4))(0x06L)), ((VECTOR(int8_t, 4))(4L)))).lo, ((VECTOR(int8_t, 8))((-1L))), ((VECTOR(int8_t, 8))((-4L)))))).lo))).even, ((VECTOR(int8_t, 2))(0x3CL))))).xxxxxyyyxyyyyyxx, ((VECTOR(int8_t, 16))(0L)), ((VECTOR(int8_t, 16))(1L))))).s97, ((VECTOR(int8_t, 2))(0x5CL))))).xyyxxyxx, ((VECTOR(int8_t, 8))(0x33L))))).s06))).xyyx)))), (-1L), 0x5CL, 0x09L)).s73)).even, p_52)) ^ p_54) == p_53)) <= p_54))) == (*p_876->g_150)) <= p_876->g_356.sd) || p_52) && (*l_246)) | 1UL) >= (*p_876->g_80)));
                (*l_642) = (((l_595 = p_876->g_638) == (((**l_466) = 0xC5L) , &l_597)) , &l_619);
                (*l_246) = (((((9L >= 0x6FAC120FL) && 8UL) , &p_876->g_129) == &p_876->g_129) || ((VECTOR(uint32_t, 4))(((VECTOR(uint32_t, 2))(((VECTOR(uint32_t, 8))(((VECTOR(uint32_t, 2))(0x796BDD99L, 0UL)).xyyxxxyx)).s63)).xyxx)).z);
            }
            else
            { /* block id: 266 */
                int32_t ****l_647[7][3][7] = {{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}},{{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0},{(void*)0,&p_876->g_645,(void*)0,(void*)0,(void*)0,&p_876->g_645,(void*)0}}};
                int i, j, k;
                p_876->g_656 |= (((VECTOR(int8_t, 2))(rotate(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 2))(safe_mad_hi_func_int8_t_s_s_s(VECTOR(int8_t, 2),((VECTOR(int8_t, 2))(mul_hi(((VECTOR(int8_t, 4))(hadd(((VECTOR(int8_t, 2))(0x0EL, 6L)).xyxx, ((VECTOR(int8_t, 4))(sub_sat(((VECTOR(int8_t, 2))(0x49L, 0L)).yxyx, ((VECTOR(int8_t, 4))(((VECTOR(int8_t, 4))(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 2))(((VECTOR(int8_t, 4))((1L != (safe_mod_func_uint64_t_u_u((((p_52 && (*l_246)) | ((*p_876->g_119) = ((l_648 = (p_876->g_645 = p_876->g_645)) == (p_876->g_649 = (void*)0)))) != ((safe_lshift_func_int16_t_s_s(((p_876->g_576.s3 <= (*l_246)) , (safe_rshift_func_uint8_t_u_u((safe_mul_func_uint8_t_u_u(250UL, p_52)), p_53))), (*p_876->g_639))) == 0x75A7C87EL)), p_876->g_56.s5))), ((VECTOR(int8_t, 2))(0x02L)), 0x32L)).odd)))).yxxx)))))))))).even, ((VECTOR(int8_t, 2))(0x21L))))), ((VECTOR(int8_t, 2))(0x5FL)), ((VECTOR(int8_t, 2))(0x5DL))))).xyyx)).even, ((VECTOR(int8_t, 2))(0x2EL))))).lo | 0xB3L);
                (**l_648) = l_605;
            }
            l_658[1][2] ^= (l_657 , p_53);
        }
        else
        { /* block id: 275 */
            int16_t *l_667[1];
            int32_t l_680 = 0x135AA16BL;
            VECTOR(uint8_t, 4) l_695 = (VECTOR(uint8_t, 4))(0x4EL, (VECTOR(uint8_t, 2))(0x4EL, 254UL), 254UL);
            VECTOR(uint8_t, 16) l_697 = (VECTOR(uint8_t, 16))(0x61L, (VECTOR(uint8_t, 4))(0x61L, (VECTOR(uint8_t, 2))(0x61L, 0x54L), 0x54L), 0x54L, 0x61L, 0x54L, (VECTOR(uint8_t, 2))(0x61L, 0x54L), (VECTOR(uint8_t, 2))(0x61L, 0x54L), 0x61L, 0x54L, 0x61L, 0x54L);
            int32_t l_709 = 0x7CAD6471L;
            int32_t *l_710 = &l_439;
            int i, j;
            for (i = 0; i < 1; i++)
                l_667[i] = &l_556;
            barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
            p_876->tid = (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 196)), permutations[(safe_mod_func_uint32_t_u_u((p_53 & 9L), 10))][(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]));
            for (l_437 = (-19); (l_437 > (-10)); l_437++)
            { /* block id: 281 */
                VECTOR(int16_t, 4) l_684 = (VECTOR(int16_t, 4))(0L, (VECTOR(int16_t, 2))(0L, 0x3A33L), 0x3A33L);
                uint16_t l_708[10][2][10] = {{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}},{{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL},{0x4D27L,1UL,5UL,65530UL,65527UL,65535UL,0x4D27L,65532UL,0xEACEL,0xEACEL}}};
                int i, j, k;
                for (p_876->g_67 = (-30); (p_876->g_67 == 49); ++p_876->g_67)
                { /* block id: 284 */
                    VECTOR(uint32_t, 16) l_671 = (VECTOR(uint32_t, 16))(0UL, (VECTOR(uint32_t, 4))(0UL, (VECTOR(uint32_t, 2))(0UL, 0xACB270F2L), 0xACB270F2L), 0xACB270F2L, 0UL, 0xACB270F2L, (VECTOR(uint32_t, 2))(0UL, 0xACB270F2L), (VECTOR(uint32_t, 2))(0UL, 0xACB270F2L), 0UL, 0xACB270F2L, 0UL, 0xACB270F2L);
                    int32_t l_681 = (-8L);
                    int i;
                    for (p_876->g_637 = 0; (p_876->g_637 > 48); p_876->g_637 = safe_add_func_int8_t_s_s(p_876->g_637, 4))
                    { /* block id: 287 */
                        int32_t l_687 = 0x592EBEC6L;
                        int32_t l_688 = 0x53C9140BL;
                        if (p_52)
                            break;
                        l_688 &= ((safe_add_func_uint32_t_u_u((l_667[0] != &l_658[0][2]), ((VECTOR(uint32_t, 16))(l_668.s1014342446720254)).s0)) != (safe_add_func_uint64_t_u_u((9L <= ((VECTOR(uint32_t, 16))(((VECTOR(uint32_t, 16))(((VECTOR(uint32_t, 4))(l_671.s30a8)).wzxwxxwyxxxwzzzy)))).s1), ((p_54 = (safe_add_func_int8_t_s_s(((permutations[(safe_mod_func_uint32_t_u_u((p_53 & 9L), 10))][(safe_mod_func_uint32_t_u_u(p_876->tid, 196))] || ((safe_div_func_int16_t_s_s((safe_unary_minus_func_uint16_t_u(((VECTOR(uint16_t, 2))(((VECTOR(uint16_t, 16))(p_876->g_677.s2123515570526744)).s3c)).even)), (+(((safe_mul_func_int16_t_s_s(((**p_876->g_638) != l_671.sc), (((((**l_85)++) & p_54) == ((((p_876->g_462.x = ((VECTOR(int16_t, 4))(l_684.zxyx)).z) > (safe_lshift_func_int8_t_s_u(p_54, (p_53 > 1L)))) , (void*)0) != (void*)0)) ^ p_52))) >= p_54) & l_687)))) >= 0x4465L)) | p_54), 0L))) != 0x54CCL))));
                    }
                    l_709 = ((safe_mul_func_uint16_t_u_u((l_147 != l_450[2]), (safe_rshift_func_int16_t_s_u((safe_rshift_func_uint8_t_u_u(((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 4))(safe_clamp_func(VECTOR(uint8_t, 4),VECTOR(uint8_t, 4),((VECTOR(uint8_t, 16))(0x55L, ((VECTOR(uint8_t, 8))((l_680 = FAKE_DIVERGE(p_876->group_2_offset, get_group_id(2), 10)), 0x15L, ((VECTOR(uint8_t, 4))(clz(((VECTOR(uint8_t, 4))(rotate(((VECTOR(uint8_t, 8))(255UL, ((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 2))(l_695.xw)).yyxx)), ((VECTOR(uint8_t, 2))(rhadd(((VECTOR(uint8_t, 4))(0x52L, ((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 8))(7UL, ((VECTOR(uint8_t, 4))(rotate(((VECTOR(uint8_t, 2))(l_696.s13)).yxxy, ((VECTOR(uint8_t, 16))(((VECTOR(uint8_t, 8))(l_697.scfbd4715)).s0, 0xF5L, ((VECTOR(uint8_t, 2))(0x74L, 0x91L)), (safe_lshift_func_uint16_t_u_s(p_52, 4)), ((VECTOR(uint8_t, 4))(((VECTOR(uint8_t, 8))(((VECTOR(uint8_t, 2))(254UL, 9UL)), ((VECTOR(uint8_t, 2))(max(((VECTOR(uint8_t, 4))((((safe_mul_func_uint8_t_u_u(((((void*)0 != &l_442[0][6]) , (safe_lshift_func_int16_t_s_s(((((5L != (safe_add_func_int32_t_s_s((safe_add_func_uint32_t_u_u((((l_708[4][0][1] = p_52) && ((void*)0 == (*p_876->g_645))) & p_53), p_52)), 0x6B8D39A8L))) , p_53) > 0x4468L) > l_684.w), (**p_876->g_638)))) ^ 0x52L), p_52)) | 0xAFA5L) || 0xD6D86E28L), ((VECTOR(uint8_t, 2))(251UL)), 0xFEL)).lo, (uint8_t)(*p_876->g_119)))), 0UL, 0x95L, 1UL, 4UL)).lo)), 0xD7L, 0UL, 0x51L, 255UL, 0x01L, 249UL, 3UL)).sd0f2))), FAKE_DIVERGE(p_876->local_1_offset, get_local_id(1), 10), 252UL, 0x0FL)))).lo)).yywzyywzzwwywxwy)).sd, 254UL, 1UL)).odd, ((VECTOR(uint8_t, 2))(0xFCL))))), 1UL)).odd, ((VECTOR(uint8_t, 4))(0x81L)))))))), 0UL, 0x47L)), 6UL, 252UL, ((VECTOR(uint8_t, 4))(0UL)), 0x22L)).s2914, ((VECTOR(uint8_t, 4))(2UL)), ((VECTOR(uint8_t, 4))(0UL))))).wyxxwzzzyyzxyzzy)).s8, p_52)), 2)))) , 0x3F2244E9L);
                    if (p_54)
                        continue;
                    (**p_876->g_645) = l_710;
                }
            }
        }
    }
    p_876->g_729 |= ((safe_add_func_uint64_t_u_u((p_876->g_677.s2 , ((safe_lshift_func_int8_t_s_u(p_876->g_151, 5)) , (safe_rshift_func_uint8_t_u_s((safe_mod_func_int32_t_s_s((((FAKE_DIVERGE(p_876->global_1_offset, get_global_id(1), 10) || (**p_876->g_638)) > (safe_sub_func_int8_t_s_s((safe_add_func_uint32_t_u_u((&l_648 != (((VECTOR(uint32_t, 8))(l_723.xwxyzwzz)).s4 , &p_876->g_649)), (safe_lshift_func_uint8_t_u_s((*p_876->g_119), ((VECTOR(int8_t, 8))((p_54 , (~((VECTOR(int8_t, 16))(p_876->g_726.sb62c49f694d3b079)).sf)), ((VECTOR(int8_t, 4))((-1L), 0L, 1L, (-4L))), 7L, 1L, (-6L))).s3)))), (((((safe_mod_func_int64_t_s_s(p_52, p_876->g_110.w)) ^ (*l_246)) || p_876->g_245.s3) > GROUP_DIVERGE(2, 1)) , 0x54L)))) != GROUP_DIVERGE(0, 1)), p_53)), 7)))), 0x55159C7EFCCDD36EL)) & 0x4BL);
    return p_876->g_576.s0;
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_149 p_876->g_151 p_876->g_56 p_876->g_81 p_876->g_164 p_876->g_67 p_876->l_comm_values p_876->g_88
 * writes: p_876->g_149 p_876->g_161 p_876->g_88 p_876->g_67
 */
int32_t  func_60(uint32_t  p_61, uint16_t * p_62, uint64_t  p_63, uint64_t  p_64, struct S0 * p_876)
{ /* block id: 43 */
    int32_t *l_152 = &p_876->g_88[5][0][2];
    int32_t **l_159 = (void*)0;
    uint8_t ***l_173 = &p_876->g_118;
    l_152 = l_152;
    for (p_876->g_149 = 0; (p_876->g_149 > 44); p_876->g_149++)
    { /* block id: 47 */
        VECTOR(int16_t, 8) l_155 = (VECTOR(int16_t, 8))(0x7928L, (VECTOR(int16_t, 4))(0x7928L, (VECTOR(int16_t, 2))(0x7928L, 1L), 1L), 1L, 0x7928L, 1L);
        int32_t *l_157 = (void*)0;
        int32_t **l_156 = &l_157;
        int32_t **l_158 = &p_876->g_134;
        uint32_t *l_160 = &p_876->g_161;
        int64_t *l_165[2][3] = {{(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0}};
        uint16_t *l_168 = &p_876->g_67;
        int i, j;
        atomic_xor(&p_876->l_atomic_reduction[0], ((((((((VECTOR(int16_t, 8))(((VECTOR(int16_t, 16))(l_155.s4677501365644236)).lo)).s6 <= p_876->g_151) & ((p_876->g_56.s3 , l_152) == ((*l_156) = l_152))) , l_158) != (l_159 = l_158)) > (((*l_160) = p_876->g_81[1][6]) && (((safe_sub_func_uint16_t_u_u(((((*l_152) = ((VECTOR(int64_t, 2))(p_876->g_164.s20)).lo) && (safe_div_func_uint16_t_u_u(((*l_168)++), (p_876->g_164.s5 & (safe_lshift_func_uint8_t_u_u((!((l_173 = l_173) != &p_876->g_118)), 7)))))) <= p_876->l_comm_values[(safe_mod_func_uint32_t_u_u(p_876->tid, 196))]), 1L)) , 0x4315BE1782E8E322L) > p_64))) == p_64) + get_linear_global_id());
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
        if (get_linear_local_id() == 0)
            p_876->v_collective += p_876->l_atomic_reduction[0];
        barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    }
    return (*l_152);
}


/* ------------------------------------------ */
/* 
 * reads : p_876->g_67 p_876->g_56 p_876->g_88 p_876->g_80 p_876->g_81 p_876->g_74
 * writes: p_876->g_67 p_876->g_118 p_876->g_74 p_876->g_129 p_876->g_88 p_876->g_134
 */
uint16_t * func_68(uint32_t  p_69, int64_t  p_70, struct S0 * p_876)
{ /* block id: 15 */
    uint32_t l_100 = 0x38E7D484L;
    VECTOR(int16_t, 4) l_105 = (VECTOR(int16_t, 4))(0x3F7DL, (VECTOR(int16_t, 2))(0x3F7DL, (-2L)), (-2L));
    uint8_t **l_117 = (void*)0;
    int64_t l_125 = 0L;
    int32_t l_130[3][3][9] = {{{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)}},{{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)}},{{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)},{0L,(-1L),0x2174F72EL,(-1L),0L,0L,(-1L),0x2174F72EL,(-1L)}}};
    int32_t *l_133[4][9] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
    VECTOR(int32_t, 16) l_137 = (VECTOR(int32_t, 16))(1L, (VECTOR(int32_t, 4))(1L, (VECTOR(int32_t, 2))(1L, 0L), 0L), 0L, 1L, 0L, (VECTOR(int32_t, 2))(1L, 0L), (VECTOR(int32_t, 2))(1L, 0L), 1L, 0L, 1L, 0L);
    uint16_t *l_144 = &p_876->g_67;
    int i, j, k;
    for (p_876->g_67 = 15; (p_876->g_67 == 49); ++p_876->g_67)
    { /* block id: 18 */
        uint8_t **l_121 = &p_876->g_80;
        uint8_t ***l_120 = &l_121;
        int64_t *l_122 = (void*)0;
        int64_t *l_123[9][8] = {{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0},{(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,(void*)0}};
        int32_t l_124 = 9L;
        int32_t l_126 = 0x3AC02903L;
        int32_t *l_128 = &p_876->g_88[5][1][5];
        int32_t **l_127[10];
        int8_t l_139 = (-1L);
        int i, j;
        for (i = 0; i < 10; i++)
            l_127[i] = &l_128;
        p_876->g_129 = ((FAKE_DIVERGE(p_876->local_0_offset, get_local_id(0), 10) != (safe_sub_func_uint8_t_u_u((l_100 >= (safe_div_func_int64_t_s_s(((safe_lshift_func_int16_t_s_s(((VECTOR(int16_t, 16))(l_105.yyxyxzzzwyyyxxyw)).s1, (safe_rshift_func_uint16_t_u_s(l_105.y, 10)))) , ((safe_lshift_func_uint16_t_u_u(1UL, ((((VECTOR(int64_t, 8))(p_876->g_110.wwwwxywz)).s6 && (p_876->g_74.s7 = ((l_124 = ((p_876->g_56.s1 <= ((safe_div_func_uint64_t_u_u((safe_sub_func_int8_t_s_s((safe_sub_func_uint8_t_u_u(9UL, (p_876->g_88[3][0][8] >= (*p_876->g_80)))), ((p_876->g_118 = l_117) != ((*l_120) = &p_876->g_119)))), p_69)) | l_100)) >= (-1L))) != (-1L)))) , l_105.w))) ^ l_125)), p_876->g_81[4][4]))), l_126))) , (void*)0);
        l_130[1][2][0] |= ((*l_128) = p_876->g_74.s1);
        for (l_124 = (-26); (l_124 > (-24)); ++l_124)
        { /* block id: 28 */
            uint64_t l_138 = 0x2F6125DDC992EEADL;
            int32_t l_140[8][1][8];
            uint64_t l_141 = 18446744073709551610UL;
            int i, j, k;
            for (i = 0; i < 8; i++)
            {
                for (j = 0; j < 1; j++)
                {
                    for (k = 0; k < 8; k++)
                        l_140[i][j][k] = 0x1E33AE95L;
                }
            }
            p_876->g_134 = l_133[1][3];
            for (l_125 = 6; (l_125 > 28); ++l_125)
            { /* block id: 32 */
                l_138 |= ((VECTOR(int32_t, 4))(l_137.se3ca)).z;
                (*l_128) &= l_139;
            }
            --l_141;
            (*l_128) = (6L & p_69);
        }
    }
    return l_144;
}


__kernel void entry(__global ulong *result, __global volatile uint *g_atomic_input, __global volatile uint *g_special_values, __global volatile int *g_atomic_reduction, __global int *sequence_input, __global long *g_comm_values) {
    int i, j, k;
    __local volatile uint32_t l_atomic_input[71];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 71; i++)
            l_atomic_input[i] = 0;
    __local volatile uint32_t l_special_values[71];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 71; i++)
            l_special_values[i] = 0;
    __local volatile uint32_t l_atomic_reduction[1];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 1; i++)
            l_atomic_reduction[i] = 0;
    __local int64_t l_comm_values[196];
    if (get_linear_local_id() == 0)
        for (i = 0; i < 196; i++)
            l_comm_values[i] = 1;
    struct S0 c_877;
    struct S0* p_876 = &c_877;
    struct S0 c_878 = {
        6L, // p_876->g_43
        0UL, // p_876->g_47
        (VECTOR(int32_t, 8))((-1L), (VECTOR(int32_t, 4))((-1L), (VECTOR(int32_t, 2))((-1L), 0L), 0L), 0L, (-1L), 0L), // p_876->g_56
        0x09CEL, // p_876->g_67
        &p_876->g_67, // p_876->g_66
        (VECTOR(uint64_t, 8))(0x996DCEBFDCAE3649L, (VECTOR(uint64_t, 4))(0x996DCEBFDCAE3649L, (VECTOR(uint64_t, 2))(0x996DCEBFDCAE3649L, 0xEE08A9CBEBA43638L), 0xEE08A9CBEBA43638L), 0xEE08A9CBEBA43638L, 0x996DCEBFDCAE3649L, 0xEE08A9CBEBA43638L), // p_876->g_74
        {{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL},{0x2DL,0x4EL,0x4EL,0x2DL,7UL,0x05L,0x05L,7UL}}, // p_876->g_81
        &p_876->g_81[5][1], // p_876->g_80
        {{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}},{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}},{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}},{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}},{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}},{{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L},{1L,(-1L),(-1L),0x41AF31ABL,(-1L),(-1L),1L,1L,1L}}}, // p_876->g_88
        (VECTOR(int64_t, 4))(0L, (VECTOR(int64_t, 2))(0L, 3L), 3L), // p_876->g_110
        &p_876->g_81[2][3], // p_876->g_119
        &p_876->g_119, // p_876->g_118
        (void*)0, // p_876->g_129
        &p_876->g_88[3][1][6], // p_876->g_134
        0x29048F6AL, // p_876->g_149
        5UL, // p_876->g_151
        &p_876->g_151, // p_876->g_150
        0xD6F5E02EL, // p_876->g_161
        (VECTOR(int64_t, 8))(4L, (VECTOR(int64_t, 4))(4L, (VECTOR(int64_t, 2))(4L, 0x1AC60CB9E47E5CDFL), 0x1AC60CB9E47E5CDFL), 0x1AC60CB9E47E5CDFL, 4L, 0x1AC60CB9E47E5CDFL), // p_876->g_164
        &p_876->g_134, // p_876->g_180
        (VECTOR(int16_t, 8))((-2L), (VECTOR(int16_t, 4))((-2L), (VECTOR(int16_t, 2))((-2L), 5L), 5L), 5L, (-2L), 5L), // p_876->g_245
        (VECTOR(int8_t, 4))((-8L), (VECTOR(int8_t, 2))((-8L), 0L), 0L), // p_876->g_250
        (VECTOR(uint32_t, 16))(0xB4AD3666L, (VECTOR(uint32_t, 4))(0xB4AD3666L, (VECTOR(uint32_t, 2))(0xB4AD3666L, 1UL), 1UL), 1UL, 0xB4AD3666L, 1UL, (VECTOR(uint32_t, 2))(0xB4AD3666L, 1UL), (VECTOR(uint32_t, 2))(0xB4AD3666L, 1UL), 0xB4AD3666L, 1UL, 0xB4AD3666L, 1UL), // p_876->g_264
        (VECTOR(int64_t, 16))((-9L), (VECTOR(int64_t, 4))((-9L), (VECTOR(int64_t, 2))((-9L), 0x4E6EBF352B2F686EL), 0x4E6EBF352B2F686EL), 0x4E6EBF352B2F686EL, (-9L), 0x4E6EBF352B2F686EL, (VECTOR(int64_t, 2))((-9L), 0x4E6EBF352B2F686EL), (VECTOR(int64_t, 2))((-9L), 0x4E6EBF352B2F686EL), (-9L), 0x4E6EBF352B2F686EL, (-9L), 0x4E6EBF352B2F686EL), // p_876->g_265
        (VECTOR(int64_t, 8))(0x260532F453972F01L, (VECTOR(int64_t, 4))(0x260532F453972F01L, (VECTOR(int64_t, 2))(0x260532F453972F01L, 0x45471E00FC767BCBL), 0x45471E00FC767BCBL), 0x45471E00FC767BCBL, 0x260532F453972F01L, 0x45471E00FC767BCBL), // p_876->g_266
        (VECTOR(int32_t, 2))((-9L), (-6L)), // p_876->g_279
        (void*)0, // p_876->g_280
        (VECTOR(uint16_t, 16))(0xD983L, (VECTOR(uint16_t, 4))(0xD983L, (VECTOR(uint16_t, 2))(0xD983L, 0x3D7DL), 0x3D7DL), 0x3D7DL, 0xD983L, 0x3D7DL, (VECTOR(uint16_t, 2))(0xD983L, 0x3D7DL), (VECTOR(uint16_t, 2))(0xD983L, 0x3D7DL), 0xD983L, 0x3D7DL, 0xD983L, 0x3D7DL), // p_876->g_356
        0L, // p_876->g_363
        (void*)0, // p_876->g_379
        &p_876->g_379, // p_876->g_378
        &p_876->g_378, // p_876->g_377
        (VECTOR(int64_t, 16))(0x01A38B84AEFDEA1CL, (VECTOR(int64_t, 4))(0x01A38B84AEFDEA1CL, (VECTOR(int64_t, 2))(0x01A38B84AEFDEA1CL, (-6L)), (-6L)), (-6L), 0x01A38B84AEFDEA1CL, (-6L), (VECTOR(int64_t, 2))(0x01A38B84AEFDEA1CL, (-6L)), (VECTOR(int64_t, 2))(0x01A38B84AEFDEA1CL, (-6L)), 0x01A38B84AEFDEA1CL, (-6L), 0x01A38B84AEFDEA1CL, (-6L)), // p_876->g_401
        (VECTOR(int32_t, 4))(0x072342B7L, (VECTOR(int32_t, 2))(0x072342B7L, 0x7F4C3653L), 0x7F4C3653L), // p_876->g_403
        (VECTOR(uint8_t, 4))(0xA8L, (VECTOR(uint8_t, 2))(0xA8L, 250UL), 250UL), // p_876->g_421
        (VECTOR(int16_t, 4))(0x5C5DL, (VECTOR(int16_t, 2))(0x5C5DL, 0x50CDL), 0x50CDL), // p_876->g_462
        0x31L, // p_876->g_566
        (VECTOR(uint8_t, 16))(0x0AL, (VECTOR(uint8_t, 4))(0x0AL, (VECTOR(uint8_t, 2))(0x0AL, 0xAFL), 0xAFL), 0xAFL, 0x0AL, 0xAFL, (VECTOR(uint8_t, 2))(0x0AL, 0xAFL), (VECTOR(uint8_t, 2))(0x0AL, 0xAFL), 0x0AL, 0xAFL, 0x0AL, 0xAFL), // p_876->g_576
        (VECTOR(uint16_t, 8))(7UL, (VECTOR(uint16_t, 4))(7UL, (VECTOR(uint16_t, 2))(7UL, 0xF54EL), 0xF54EL), 0xF54EL, 7UL, 0xF54EL), // p_876->g_589
        (VECTOR(int8_t, 8))(0x38L, (VECTOR(int8_t, 4))(0x38L, (VECTOR(int8_t, 2))(0x38L, 0x00L), 0x00L), 0x00L, 0x38L, 0x00L), // p_876->g_616
        (VECTOR(int8_t, 8))(0x18L, (VECTOR(int8_t, 4))(0x18L, (VECTOR(int8_t, 2))(0x18L, 0x05L), 0x05L), 0x05L, 0x18L, 0x05L), // p_876->g_617
        (void*)0, // p_876->g_631
        0x739EL, // p_876->g_637
        &p_876->g_363, // p_876->g_639
        &p_876->g_639, // p_876->g_638
        &p_876->g_134, // p_876->g_646
        &p_876->g_646, // p_876->g_645
        &p_876->g_646, // p_876->g_649
        0x04A1L, // p_876->g_656
        (VECTOR(uint16_t, 8))(0x01DCL, (VECTOR(uint16_t, 4))(0x01DCL, (VECTOR(uint16_t, 2))(0x01DCL, 65531UL), 65531UL), 65531UL, 0x01DCL, 65531UL), // p_876->g_677
        (VECTOR(int8_t, 16))((-5L), (VECTOR(int8_t, 4))((-5L), (VECTOR(int8_t, 2))((-5L), 0x63L), 0x63L), 0x63L, (-5L), 0x63L, (VECTOR(int8_t, 2))((-5L), 0x63L), (VECTOR(int8_t, 2))((-5L), 0x63L), (-5L), 0x63L, (-5L), 0x63L), // p_876->g_726
        0x77L, // p_876->g_729
        0UL, // p_876->g_737
        &p_876->g_737, // p_876->g_736
        {{{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0},{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0}},{{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0},{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0}},{{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0},{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0}},{{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0},{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0}},{{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0},{&p_876->g_736,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0,(void*)0,&p_876->g_736,&p_876->g_736,(void*)0}}}, // p_876->g_735
        &p_876->g_735[1][1][8], // p_876->g_734
        0x7CBE55E17F2086D5L, // p_876->g_739
        (VECTOR(int64_t, 16))(0x6AA09F5741A4ADD2L, (VECTOR(int64_t, 4))(0x6AA09F5741A4ADD2L, (VECTOR(int64_t, 2))(0x6AA09F5741A4ADD2L, (-2L)), (-2L)), (-2L), 0x6AA09F5741A4ADD2L, (-2L), (VECTOR(int64_t, 2))(0x6AA09F5741A4ADD2L, (-2L)), (VECTOR(int64_t, 2))(0x6AA09F5741A4ADD2L, (-2L)), 0x6AA09F5741A4ADD2L, (-2L), 0x6AA09F5741A4ADD2L, (-2L)), // p_876->g_769
        (VECTOR(int8_t, 16))(1L, (VECTOR(int8_t, 4))(1L, (VECTOR(int8_t, 2))(1L, 1L), 1L), 1L, 1L, 1L, (VECTOR(int8_t, 2))(1L, 1L), (VECTOR(int8_t, 2))(1L, 1L), 1L, 1L, 1L, 1L), // p_876->g_781
        (-8L), // p_876->g_834
        0L, // p_876->g_847
        0, // p_876->v_collective
        sequence_input[get_global_id(0)], // p_876->global_0_offset
        sequence_input[get_global_id(1)], // p_876->global_1_offset
        sequence_input[get_global_id(2)], // p_876->global_2_offset
        sequence_input[get_local_id(0)], // p_876->local_0_offset
        sequence_input[get_local_id(1)], // p_876->local_1_offset
        sequence_input[get_local_id(2)], // p_876->local_2_offset
        sequence_input[get_group_id(0)], // p_876->group_0_offset
        sequence_input[get_group_id(1)], // p_876->group_1_offset
        sequence_input[get_group_id(2)], // p_876->group_2_offset
        (safe_add_func_uint32_t_u_u((safe_mul_func_uint32_t_u_u(get_linear_group_id(), 196)), permutations[0][get_linear_local_id()])), // p_876->tid
        l_atomic_input, // l_atomic_input
        l_special_values, // l_special_values
        g_atomic_input, // g_atomic_input
        g_special_values, // g_special_values
        l_atomic_reduction, // l_atomic_reduction
        g_atomic_reduction, // g_atomic_reduction
        l_comm_values, // l_comm_values
        g_comm_values, // g_comm_values
    };
    c_877 = c_878;
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    func_1(p_876);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    uint64_t crc64_context = 0xFFFFFFFFFFFFFFFFUL;
    int print_hash_value = 0;
    transparent_crc(p_876->g_43, "p_876->g_43", print_hash_value);
    transparent_crc(p_876->g_47, "p_876->g_47", print_hash_value);
    transparent_crc(p_876->g_56.s0, "p_876->g_56.s0", print_hash_value);
    transparent_crc(p_876->g_56.s1, "p_876->g_56.s1", print_hash_value);
    transparent_crc(p_876->g_56.s2, "p_876->g_56.s2", print_hash_value);
    transparent_crc(p_876->g_56.s3, "p_876->g_56.s3", print_hash_value);
    transparent_crc(p_876->g_56.s4, "p_876->g_56.s4", print_hash_value);
    transparent_crc(p_876->g_56.s5, "p_876->g_56.s5", print_hash_value);
    transparent_crc(p_876->g_56.s6, "p_876->g_56.s6", print_hash_value);
    transparent_crc(p_876->g_56.s7, "p_876->g_56.s7", print_hash_value);
    transparent_crc(p_876->g_67, "p_876->g_67", print_hash_value);
    transparent_crc(p_876->g_74.s0, "p_876->g_74.s0", print_hash_value);
    transparent_crc(p_876->g_74.s1, "p_876->g_74.s1", print_hash_value);
    transparent_crc(p_876->g_74.s2, "p_876->g_74.s2", print_hash_value);
    transparent_crc(p_876->g_74.s3, "p_876->g_74.s3", print_hash_value);
    transparent_crc(p_876->g_74.s4, "p_876->g_74.s4", print_hash_value);
    transparent_crc(p_876->g_74.s5, "p_876->g_74.s5", print_hash_value);
    transparent_crc(p_876->g_74.s6, "p_876->g_74.s6", print_hash_value);
    transparent_crc(p_876->g_74.s7, "p_876->g_74.s7", print_hash_value);
    for (i = 0; i < 7; i++)
    {
        for (j = 0; j < 8; j++)
        {
            transparent_crc(p_876->g_81[i][j], "p_876->g_81[i][j]", print_hash_value);

        }
    }
    for (i = 0; i < 6; i++)
    {
        for (j = 0; j < 2; j++)
        {
            for (k = 0; k < 9; k++)
            {
                transparent_crc(p_876->g_88[i][j][k], "p_876->g_88[i][j][k]", print_hash_value);

            }
        }
    }
    transparent_crc(p_876->g_110.x, "p_876->g_110.x", print_hash_value);
    transparent_crc(p_876->g_110.y, "p_876->g_110.y", print_hash_value);
    transparent_crc(p_876->g_110.z, "p_876->g_110.z", print_hash_value);
    transparent_crc(p_876->g_110.w, "p_876->g_110.w", print_hash_value);
    transparent_crc(p_876->g_149, "p_876->g_149", print_hash_value);
    transparent_crc(p_876->g_151, "p_876->g_151", print_hash_value);
    transparent_crc(p_876->g_161, "p_876->g_161", print_hash_value);
    transparent_crc(p_876->g_164.s0, "p_876->g_164.s0", print_hash_value);
    transparent_crc(p_876->g_164.s1, "p_876->g_164.s1", print_hash_value);
    transparent_crc(p_876->g_164.s2, "p_876->g_164.s2", print_hash_value);
    transparent_crc(p_876->g_164.s3, "p_876->g_164.s3", print_hash_value);
    transparent_crc(p_876->g_164.s4, "p_876->g_164.s4", print_hash_value);
    transparent_crc(p_876->g_164.s5, "p_876->g_164.s5", print_hash_value);
    transparent_crc(p_876->g_164.s6, "p_876->g_164.s6", print_hash_value);
    transparent_crc(p_876->g_164.s7, "p_876->g_164.s7", print_hash_value);
    transparent_crc(p_876->g_245.s0, "p_876->g_245.s0", print_hash_value);
    transparent_crc(p_876->g_245.s1, "p_876->g_245.s1", print_hash_value);
    transparent_crc(p_876->g_245.s2, "p_876->g_245.s2", print_hash_value);
    transparent_crc(p_876->g_245.s3, "p_876->g_245.s3", print_hash_value);
    transparent_crc(p_876->g_245.s4, "p_876->g_245.s4", print_hash_value);
    transparent_crc(p_876->g_245.s5, "p_876->g_245.s5", print_hash_value);
    transparent_crc(p_876->g_245.s6, "p_876->g_245.s6", print_hash_value);
    transparent_crc(p_876->g_245.s7, "p_876->g_245.s7", print_hash_value);
    transparent_crc(p_876->g_250.x, "p_876->g_250.x", print_hash_value);
    transparent_crc(p_876->g_250.y, "p_876->g_250.y", print_hash_value);
    transparent_crc(p_876->g_250.z, "p_876->g_250.z", print_hash_value);
    transparent_crc(p_876->g_250.w, "p_876->g_250.w", print_hash_value);
    transparent_crc(p_876->g_264.s0, "p_876->g_264.s0", print_hash_value);
    transparent_crc(p_876->g_264.s1, "p_876->g_264.s1", print_hash_value);
    transparent_crc(p_876->g_264.s2, "p_876->g_264.s2", print_hash_value);
    transparent_crc(p_876->g_264.s3, "p_876->g_264.s3", print_hash_value);
    transparent_crc(p_876->g_264.s4, "p_876->g_264.s4", print_hash_value);
    transparent_crc(p_876->g_264.s5, "p_876->g_264.s5", print_hash_value);
    transparent_crc(p_876->g_264.s6, "p_876->g_264.s6", print_hash_value);
    transparent_crc(p_876->g_264.s7, "p_876->g_264.s7", print_hash_value);
    transparent_crc(p_876->g_264.s8, "p_876->g_264.s8", print_hash_value);
    transparent_crc(p_876->g_264.s9, "p_876->g_264.s9", print_hash_value);
    transparent_crc(p_876->g_264.sa, "p_876->g_264.sa", print_hash_value);
    transparent_crc(p_876->g_264.sb, "p_876->g_264.sb", print_hash_value);
    transparent_crc(p_876->g_264.sc, "p_876->g_264.sc", print_hash_value);
    transparent_crc(p_876->g_264.sd, "p_876->g_264.sd", print_hash_value);
    transparent_crc(p_876->g_264.se, "p_876->g_264.se", print_hash_value);
    transparent_crc(p_876->g_264.sf, "p_876->g_264.sf", print_hash_value);
    transparent_crc(p_876->g_265.s0, "p_876->g_265.s0", print_hash_value);
    transparent_crc(p_876->g_265.s1, "p_876->g_265.s1", print_hash_value);
    transparent_crc(p_876->g_265.s2, "p_876->g_265.s2", print_hash_value);
    transparent_crc(p_876->g_265.s3, "p_876->g_265.s3", print_hash_value);
    transparent_crc(p_876->g_265.s4, "p_876->g_265.s4", print_hash_value);
    transparent_crc(p_876->g_265.s5, "p_876->g_265.s5", print_hash_value);
    transparent_crc(p_876->g_265.s6, "p_876->g_265.s6", print_hash_value);
    transparent_crc(p_876->g_265.s7, "p_876->g_265.s7", print_hash_value);
    transparent_crc(p_876->g_265.s8, "p_876->g_265.s8", print_hash_value);
    transparent_crc(p_876->g_265.s9, "p_876->g_265.s9", print_hash_value);
    transparent_crc(p_876->g_265.sa, "p_876->g_265.sa", print_hash_value);
    transparent_crc(p_876->g_265.sb, "p_876->g_265.sb", print_hash_value);
    transparent_crc(p_876->g_265.sc, "p_876->g_265.sc", print_hash_value);
    transparent_crc(p_876->g_265.sd, "p_876->g_265.sd", print_hash_value);
    transparent_crc(p_876->g_265.se, "p_876->g_265.se", print_hash_value);
    transparent_crc(p_876->g_265.sf, "p_876->g_265.sf", print_hash_value);
    transparent_crc(p_876->g_266.s0, "p_876->g_266.s0", print_hash_value);
    transparent_crc(p_876->g_266.s1, "p_876->g_266.s1", print_hash_value);
    transparent_crc(p_876->g_266.s2, "p_876->g_266.s2", print_hash_value);
    transparent_crc(p_876->g_266.s3, "p_876->g_266.s3", print_hash_value);
    transparent_crc(p_876->g_266.s4, "p_876->g_266.s4", print_hash_value);
    transparent_crc(p_876->g_266.s5, "p_876->g_266.s5", print_hash_value);
    transparent_crc(p_876->g_266.s6, "p_876->g_266.s6", print_hash_value);
    transparent_crc(p_876->g_266.s7, "p_876->g_266.s7", print_hash_value);
    transparent_crc(p_876->g_279.x, "p_876->g_279.x", print_hash_value);
    transparent_crc(p_876->g_279.y, "p_876->g_279.y", print_hash_value);
    transparent_crc(p_876->g_356.s0, "p_876->g_356.s0", print_hash_value);
    transparent_crc(p_876->g_356.s1, "p_876->g_356.s1", print_hash_value);
    transparent_crc(p_876->g_356.s2, "p_876->g_356.s2", print_hash_value);
    transparent_crc(p_876->g_356.s3, "p_876->g_356.s3", print_hash_value);
    transparent_crc(p_876->g_356.s4, "p_876->g_356.s4", print_hash_value);
    transparent_crc(p_876->g_356.s5, "p_876->g_356.s5", print_hash_value);
    transparent_crc(p_876->g_356.s6, "p_876->g_356.s6", print_hash_value);
    transparent_crc(p_876->g_356.s7, "p_876->g_356.s7", print_hash_value);
    transparent_crc(p_876->g_356.s8, "p_876->g_356.s8", print_hash_value);
    transparent_crc(p_876->g_356.s9, "p_876->g_356.s9", print_hash_value);
    transparent_crc(p_876->g_356.sa, "p_876->g_356.sa", print_hash_value);
    transparent_crc(p_876->g_356.sb, "p_876->g_356.sb", print_hash_value);
    transparent_crc(p_876->g_356.sc, "p_876->g_356.sc", print_hash_value);
    transparent_crc(p_876->g_356.sd, "p_876->g_356.sd", print_hash_value);
    transparent_crc(p_876->g_356.se, "p_876->g_356.se", print_hash_value);
    transparent_crc(p_876->g_356.sf, "p_876->g_356.sf", print_hash_value);
    transparent_crc(p_876->g_363, "p_876->g_363", print_hash_value);
    transparent_crc(p_876->g_401.s0, "p_876->g_401.s0", print_hash_value);
    transparent_crc(p_876->g_401.s1, "p_876->g_401.s1", print_hash_value);
    transparent_crc(p_876->g_401.s2, "p_876->g_401.s2", print_hash_value);
    transparent_crc(p_876->g_401.s3, "p_876->g_401.s3", print_hash_value);
    transparent_crc(p_876->g_401.s4, "p_876->g_401.s4", print_hash_value);
    transparent_crc(p_876->g_401.s5, "p_876->g_401.s5", print_hash_value);
    transparent_crc(p_876->g_401.s6, "p_876->g_401.s6", print_hash_value);
    transparent_crc(p_876->g_401.s7, "p_876->g_401.s7", print_hash_value);
    transparent_crc(p_876->g_401.s8, "p_876->g_401.s8", print_hash_value);
    transparent_crc(p_876->g_401.s9, "p_876->g_401.s9", print_hash_value);
    transparent_crc(p_876->g_401.sa, "p_876->g_401.sa", print_hash_value);
    transparent_crc(p_876->g_401.sb, "p_876->g_401.sb", print_hash_value);
    transparent_crc(p_876->g_401.sc, "p_876->g_401.sc", print_hash_value);
    transparent_crc(p_876->g_401.sd, "p_876->g_401.sd", print_hash_value);
    transparent_crc(p_876->g_401.se, "p_876->g_401.se", print_hash_value);
    transparent_crc(p_876->g_401.sf, "p_876->g_401.sf", print_hash_value);
    transparent_crc(p_876->g_403.x, "p_876->g_403.x", print_hash_value);
    transparent_crc(p_876->g_403.y, "p_876->g_403.y", print_hash_value);
    transparent_crc(p_876->g_403.z, "p_876->g_403.z", print_hash_value);
    transparent_crc(p_876->g_403.w, "p_876->g_403.w", print_hash_value);
    transparent_crc(p_876->g_421.x, "p_876->g_421.x", print_hash_value);
    transparent_crc(p_876->g_421.y, "p_876->g_421.y", print_hash_value);
    transparent_crc(p_876->g_421.z, "p_876->g_421.z", print_hash_value);
    transparent_crc(p_876->g_421.w, "p_876->g_421.w", print_hash_value);
    transparent_crc(p_876->g_462.x, "p_876->g_462.x", print_hash_value);
    transparent_crc(p_876->g_462.y, "p_876->g_462.y", print_hash_value);
    transparent_crc(p_876->g_462.z, "p_876->g_462.z", print_hash_value);
    transparent_crc(p_876->g_462.w, "p_876->g_462.w", print_hash_value);
    transparent_crc(p_876->g_566, "p_876->g_566", print_hash_value);
    transparent_crc(p_876->g_576.s0, "p_876->g_576.s0", print_hash_value);
    transparent_crc(p_876->g_576.s1, "p_876->g_576.s1", print_hash_value);
    transparent_crc(p_876->g_576.s2, "p_876->g_576.s2", print_hash_value);
    transparent_crc(p_876->g_576.s3, "p_876->g_576.s3", print_hash_value);
    transparent_crc(p_876->g_576.s4, "p_876->g_576.s4", print_hash_value);
    transparent_crc(p_876->g_576.s5, "p_876->g_576.s5", print_hash_value);
    transparent_crc(p_876->g_576.s6, "p_876->g_576.s6", print_hash_value);
    transparent_crc(p_876->g_576.s7, "p_876->g_576.s7", print_hash_value);
    transparent_crc(p_876->g_576.s8, "p_876->g_576.s8", print_hash_value);
    transparent_crc(p_876->g_576.s9, "p_876->g_576.s9", print_hash_value);
    transparent_crc(p_876->g_576.sa, "p_876->g_576.sa", print_hash_value);
    transparent_crc(p_876->g_576.sb, "p_876->g_576.sb", print_hash_value);
    transparent_crc(p_876->g_576.sc, "p_876->g_576.sc", print_hash_value);
    transparent_crc(p_876->g_576.sd, "p_876->g_576.sd", print_hash_value);
    transparent_crc(p_876->g_576.se, "p_876->g_576.se", print_hash_value);
    transparent_crc(p_876->g_576.sf, "p_876->g_576.sf", print_hash_value);
    transparent_crc(p_876->g_589.s0, "p_876->g_589.s0", print_hash_value);
    transparent_crc(p_876->g_589.s1, "p_876->g_589.s1", print_hash_value);
    transparent_crc(p_876->g_589.s2, "p_876->g_589.s2", print_hash_value);
    transparent_crc(p_876->g_589.s3, "p_876->g_589.s3", print_hash_value);
    transparent_crc(p_876->g_589.s4, "p_876->g_589.s4", print_hash_value);
    transparent_crc(p_876->g_589.s5, "p_876->g_589.s5", print_hash_value);
    transparent_crc(p_876->g_589.s6, "p_876->g_589.s6", print_hash_value);
    transparent_crc(p_876->g_589.s7, "p_876->g_589.s7", print_hash_value);
    transparent_crc(p_876->g_616.s0, "p_876->g_616.s0", print_hash_value);
    transparent_crc(p_876->g_616.s1, "p_876->g_616.s1", print_hash_value);
    transparent_crc(p_876->g_616.s2, "p_876->g_616.s2", print_hash_value);
    transparent_crc(p_876->g_616.s3, "p_876->g_616.s3", print_hash_value);
    transparent_crc(p_876->g_616.s4, "p_876->g_616.s4", print_hash_value);
    transparent_crc(p_876->g_616.s5, "p_876->g_616.s5", print_hash_value);
    transparent_crc(p_876->g_616.s6, "p_876->g_616.s6", print_hash_value);
    transparent_crc(p_876->g_616.s7, "p_876->g_616.s7", print_hash_value);
    transparent_crc(p_876->g_617.s0, "p_876->g_617.s0", print_hash_value);
    transparent_crc(p_876->g_617.s1, "p_876->g_617.s1", print_hash_value);
    transparent_crc(p_876->g_617.s2, "p_876->g_617.s2", print_hash_value);
    transparent_crc(p_876->g_617.s3, "p_876->g_617.s3", print_hash_value);
    transparent_crc(p_876->g_617.s4, "p_876->g_617.s4", print_hash_value);
    transparent_crc(p_876->g_617.s5, "p_876->g_617.s5", print_hash_value);
    transparent_crc(p_876->g_617.s6, "p_876->g_617.s6", print_hash_value);
    transparent_crc(p_876->g_617.s7, "p_876->g_617.s7", print_hash_value);
    transparent_crc(p_876->g_637, "p_876->g_637", print_hash_value);
    transparent_crc(p_876->g_656, "p_876->g_656", print_hash_value);
    transparent_crc(p_876->g_677.s0, "p_876->g_677.s0", print_hash_value);
    transparent_crc(p_876->g_677.s1, "p_876->g_677.s1", print_hash_value);
    transparent_crc(p_876->g_677.s2, "p_876->g_677.s2", print_hash_value);
    transparent_crc(p_876->g_677.s3, "p_876->g_677.s3", print_hash_value);
    transparent_crc(p_876->g_677.s4, "p_876->g_677.s4", print_hash_value);
    transparent_crc(p_876->g_677.s5, "p_876->g_677.s5", print_hash_value);
    transparent_crc(p_876->g_677.s6, "p_876->g_677.s6", print_hash_value);
    transparent_crc(p_876->g_677.s7, "p_876->g_677.s7", print_hash_value);
    transparent_crc(p_876->g_726.s0, "p_876->g_726.s0", print_hash_value);
    transparent_crc(p_876->g_726.s1, "p_876->g_726.s1", print_hash_value);
    transparent_crc(p_876->g_726.s2, "p_876->g_726.s2", print_hash_value);
    transparent_crc(p_876->g_726.s3, "p_876->g_726.s3", print_hash_value);
    transparent_crc(p_876->g_726.s4, "p_876->g_726.s4", print_hash_value);
    transparent_crc(p_876->g_726.s5, "p_876->g_726.s5", print_hash_value);
    transparent_crc(p_876->g_726.s6, "p_876->g_726.s6", print_hash_value);
    transparent_crc(p_876->g_726.s7, "p_876->g_726.s7", print_hash_value);
    transparent_crc(p_876->g_726.s8, "p_876->g_726.s8", print_hash_value);
    transparent_crc(p_876->g_726.s9, "p_876->g_726.s9", print_hash_value);
    transparent_crc(p_876->g_726.sa, "p_876->g_726.sa", print_hash_value);
    transparent_crc(p_876->g_726.sb, "p_876->g_726.sb", print_hash_value);
    transparent_crc(p_876->g_726.sc, "p_876->g_726.sc", print_hash_value);
    transparent_crc(p_876->g_726.sd, "p_876->g_726.sd", print_hash_value);
    transparent_crc(p_876->g_726.se, "p_876->g_726.se", print_hash_value);
    transparent_crc(p_876->g_726.sf, "p_876->g_726.sf", print_hash_value);
    transparent_crc(p_876->g_729, "p_876->g_729", print_hash_value);
    transparent_crc(p_876->g_737, "p_876->g_737", print_hash_value);
    transparent_crc(p_876->g_739, "p_876->g_739", print_hash_value);
    transparent_crc(p_876->g_769.s0, "p_876->g_769.s0", print_hash_value);
    transparent_crc(p_876->g_769.s1, "p_876->g_769.s1", print_hash_value);
    transparent_crc(p_876->g_769.s2, "p_876->g_769.s2", print_hash_value);
    transparent_crc(p_876->g_769.s3, "p_876->g_769.s3", print_hash_value);
    transparent_crc(p_876->g_769.s4, "p_876->g_769.s4", print_hash_value);
    transparent_crc(p_876->g_769.s5, "p_876->g_769.s5", print_hash_value);
    transparent_crc(p_876->g_769.s6, "p_876->g_769.s6", print_hash_value);
    transparent_crc(p_876->g_769.s7, "p_876->g_769.s7", print_hash_value);
    transparent_crc(p_876->g_769.s8, "p_876->g_769.s8", print_hash_value);
    transparent_crc(p_876->g_769.s9, "p_876->g_769.s9", print_hash_value);
    transparent_crc(p_876->g_769.sa, "p_876->g_769.sa", print_hash_value);
    transparent_crc(p_876->g_769.sb, "p_876->g_769.sb", print_hash_value);
    transparent_crc(p_876->g_769.sc, "p_876->g_769.sc", print_hash_value);
    transparent_crc(p_876->g_769.sd, "p_876->g_769.sd", print_hash_value);
    transparent_crc(p_876->g_769.se, "p_876->g_769.se", print_hash_value);
    transparent_crc(p_876->g_769.sf, "p_876->g_769.sf", print_hash_value);
    transparent_crc(p_876->g_781.s0, "p_876->g_781.s0", print_hash_value);
    transparent_crc(p_876->g_781.s1, "p_876->g_781.s1", print_hash_value);
    transparent_crc(p_876->g_781.s2, "p_876->g_781.s2", print_hash_value);
    transparent_crc(p_876->g_781.s3, "p_876->g_781.s3", print_hash_value);
    transparent_crc(p_876->g_781.s4, "p_876->g_781.s4", print_hash_value);
    transparent_crc(p_876->g_781.s5, "p_876->g_781.s5", print_hash_value);
    transparent_crc(p_876->g_781.s6, "p_876->g_781.s6", print_hash_value);
    transparent_crc(p_876->g_781.s7, "p_876->g_781.s7", print_hash_value);
    transparent_crc(p_876->g_781.s8, "p_876->g_781.s8", print_hash_value);
    transparent_crc(p_876->g_781.s9, "p_876->g_781.s9", print_hash_value);
    transparent_crc(p_876->g_781.sa, "p_876->g_781.sa", print_hash_value);
    transparent_crc(p_876->g_781.sb, "p_876->g_781.sb", print_hash_value);
    transparent_crc(p_876->g_781.sc, "p_876->g_781.sc", print_hash_value);
    transparent_crc(p_876->g_781.sd, "p_876->g_781.sd", print_hash_value);
    transparent_crc(p_876->g_781.se, "p_876->g_781.se", print_hash_value);
    transparent_crc(p_876->g_781.sf, "p_876->g_781.sf", print_hash_value);
    transparent_crc(p_876->g_834, "p_876->g_834", print_hash_value);
    transparent_crc(p_876->g_847, "p_876->g_847", print_hash_value);
    transparent_crc(p_876->v_collective, "p_876->v_collective", print_hash_value);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    if (!get_linear_global_id())
        for (i = 0 ; i < 71; i++)
            transparent_crc(p_876->g_special_values[i + 71 * get_linear_group_id()], "p_876->g_special_values[i + 71 * get_linear_group_id()]", print_hash_value);
    barrier(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
    if (!get_linear_local_id())
        for (i = 0; i < 71; i++)
            transparent_crc(p_876->l_special_values[i], "p_876->l_special_values[i]", print_hash_value);
    transparent_crc(p_876->l_comm_values[get_linear_local_id()], "p_876->l_comm_values[get_linear_local_id()]", print_hash_value);
    transparent_crc(p_876->g_comm_values[get_linear_group_id() * 196 + get_linear_local_id()], "p_876->g_comm_values[get_linear_group_id() * 196 + get_linear_local_id()]", print_hash_value);
    result[get_linear_global_id()] = crc64_context ^ 0xFFFFFFFFFFFFFFFFUL;
}
